<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\DC-time.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\DC-time.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Thu Mar 21 11:19:42 2024
<BR><P>
<H3>Maximum Stack Usage =        968 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
Task4GSend &rArr; _4G_SendCardInfo &rArr; _66_SendCardInfo &rArr; _66FreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[346]">OS_CPU_SR_Save</a>
 <LI><a href="#[348]">OS_CPU_SR_Restore</a>
 <LI><a href="#[49d]">OSStartHighRdy</a>
 <LI><a href="#[4be]">OSCtxSw</a>
 <LI><a href="#[48e]">OSIntCtxSw</a>
 <LI><a href="#[fd]">OS_CPU_PendSVHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[111]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[111]">ADC_IRQHandler</a><BR>
 <LI><a href="#[f9]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f9]">BusFault_Handler</a><BR>
 <LI><a href="#[f7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f7]">HardFault_Handler</a><BR>
 <LI><a href="#[f8]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f8]">MemManage_Handler</a><BR>
 <LI><a href="#[fa]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[fa]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[111]">ADC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[14d]">AES_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[1d0]">APP_BCPFitCheckGunA</a> from controlmain.o(i.APP_BCPFitCheckGunA) referenced from controlmain.o(.constdata)
 <LI><a href="#[1de]">APP_BCPFitCheckGunB</a> from controlmain.o(i.APP_BCPFitCheckGunB) referenced from controlmain.o(.constdata)
 <LI><a href="#[1d4]">APP_ChargeBSDGunA</a> from controlmain.o(i.APP_ChargeBSDGunA) referenced from controlmain.o(.constdata)
 <LI><a href="#[1e2]">APP_ChargeBSDGunB</a> from controlmain.o(i.APP_ChargeBSDGunB) referenced from controlmain.o(.constdata)
 <LI><a href="#[1d3]">APP_ChargePauseGunA</a> from controlmain.o(i.APP_ChargePauseGunA) referenced from controlmain.o(.constdata)
 <LI><a href="#[1e1]">APP_ChargePauseGunB</a> from controlmain.o(i.APP_ChargePauseGunB) referenced from controlmain.o(.constdata)
 <LI><a href="#[1d1]">APP_ChargeReadyCheckGunA</a> from controlmain.o(i.APP_ChargeReadyCheckGunA) referenced from controlmain.o(.constdata)
 <LI><a href="#[1df]">APP_ChargeReadyCheckGunB</a> from controlmain.o(i.APP_ChargeReadyCheckGunB) referenced from controlmain.o(.constdata)
 <LI><a href="#[1d2]">APP_ChargeRunningGunA</a> from controlmain.o(i.APP_ChargeRunningGunA) referenced from controlmain.o(.constdata)
 <LI><a href="#[1e0]">APP_ChargeRunningGunB</a> from controlmain.o(i.APP_ChargeRunningGunB) referenced from controlmain.o(.constdata)
 <LI><a href="#[1cd]">APP_ElectronicLockLockedGunA</a> from controlmain.o(i.APP_ElectronicLockLockedGunA) referenced from controlmain.o(.constdata)
 <LI><a href="#[1db]">APP_ElectronicLockLockedGunB</a> from controlmain.o(i.APP_ElectronicLockLockedGunB) referenced from controlmain.o(.constdata)
 <LI><a href="#[1ce]">APP_ElectronicLockUnlockedGunA</a> from controlmain.o(i.APP_ElectronicLockUnlockedGunA) referenced from controlmain.o(.constdata)
 <LI><a href="#[1dc]">APP_ElectronicLockUnlockedGunB</a> from controlmain.o(i.APP_ElectronicLockUnlockedGunB) referenced from controlmain.o(.constdata)
 <LI><a href="#[ee]">APP_GetPowerModuleAC</a> from yfymoduletxrx.o(i.APP_GetPowerModuleAC) referenced 2 times from yfymoduletxrx.o(.data)
 <LI><a href="#[21e]">APP_GetPowerModuleACAck</a> from yfymoduletxrx.o(i.APP_GetPowerModuleACAck) referenced from yfymoduletxrx.o(.constdata)
 <LI><a href="#[ed]">APP_GetPowerModuleState</a> from yfymoduletxrx.o(i.APP_GetPowerModuleState) referenced 2 times from yfymoduletxrx.o(.data)
 <LI><a href="#[21d]">APP_GetPowerModuleStateAck</a> from yfymoduletxrx.o(i.APP_GetPowerModuleStateAck) referenced from yfymoduletxrx.o(.constdata)
 <LI><a href="#[ec]">APP_GetPowerModuleVI</a> from yfymoduletxrx.o(i.APP_GetPowerModuleVI) referenced 2 times from yfymoduletxrx.o(.data)
 <LI><a href="#[21c]">APP_GetPowerModuleVIAck</a> from yfymoduletxrx.o(i.APP_GetPowerModuleVIAck) referenced from yfymoduletxrx.o(.constdata)
 <LI><a href="#[21b]">APP_HearAck</a> from gwmoduletxrx.o(i.APP_HearAck) referenced from gwmoduletxrx.o(.constdata)
 <LI><a href="#[1cf]">APP_InsulationCheckGunA</a> from controlmain.o(i.APP_InsulationCheckGunA) referenced from controlmain.o(.constdata)
 <LI><a href="#[1dd]">APP_InsulationCheckGunB</a> from controlmain.o(i.APP_InsulationCheckGunB) referenced from controlmain.o(.constdata)
 <LI><a href="#[203]">APP_PowerModuleStartA</a> from pcumain.o(i.APP_PowerModuleStartA) referenced from pcumain.o(.constdata)
 <LI><a href="#[205]">APP_PowerModuleStartB</a> from pcumain.o(i.APP_PowerModuleStartB) referenced from pcumain.o(.constdata)
 <LI><a href="#[204]">APP_PowerModuleStopA</a> from pcumain.o(i.APP_PowerModuleStopA) referenced from pcumain.o(.constdata)
 <LI><a href="#[206]">APP_PowerModuleStopB</a> from pcumain.o(i.APP_PowerModuleStopB) referenced from pcumain.o(.constdata)
 <LI><a href="#[219]">APP_QueryInfoAck</a> from gwmoduletxrx.o(i.APP_QueryInfoAck) referenced from gwmoduletxrx.o(.constdata)
 <LI><a href="#[f4]">APP_ReadModeACVolAck</a> from ykrmoduletxrx.o(i.APP_ReadModeACVolAck) referenced 2 times from ykrmoduletxrx.o(.data)
 <LI><a href="#[f3]">APP_ReadModeInfoAck</a> from ykrmoduletxrx.o(i.APP_ReadModeInfoAck) referenced 2 times from ykrmoduletxrx.o(.data)
 <LI><a href="#[1ad]">APP_ReceiveEndChargeA</a> from connectbms.o(i.APP_ReceiveEndChargeA) referenced from connectbms.o(.constdata)
 <LI><a href="#[1ae]">APP_ReceiveEndChargeB</a> from connectbms.o(i.APP_ReceiveEndChargeB) referenced from connectbms.o(.constdata)
 <LI><a href="#[21a]">APP_RecvYXAck</a> from gwmoduletxrx.o(i.APP_RecvYXAck) referenced from gwmoduletxrx.o(.constdata)
 <LI><a href="#[1d8]">APP_SelfCheckFailGunA</a> from controlmain.o(i.APP_SelfCheckFailGunA) referenced from controlmain.o(.constdata)
 <LI><a href="#[1e6]">APP_SelfCheckFailGunB</a> from controlmain.o(i.APP_SelfCheckFailGunB) referenced from controlmain.o(.constdata)
 <LI><a href="#[eb]">APP_SendHear</a> from gwmoduletxrx.o(i.APP_SendHear) referenced 2 times from gwmoduletxrx.o(.data)
 <LI><a href="#[ef]">APP_SetAddressGetType</a> from yfymoduletxrx.o(i.APP_SetAddressGetType) referenced 2 times from yfymoduletxrx.o(.data)
 <LI><a href="#[ea]">APP_SetControlDyn</a> from gwmoduletxrx.o(i.APP_SetControlDyn) referenced 2 times from gwmoduletxrx.o(.data)
 <LI><a href="#[217]">APP_SetControlDynAck</a> from gwmoduletxrx.o(i.APP_SetControlDynAck) referenced from gwmoduletxrx.o(.constdata)
 <LI><a href="#[216]">APP_SetDynGroupAck</a> from gwmoduletxrx.o(i.APP_SetDynGroupAck) referenced from gwmoduletxrx.o(.constdata)
 <LI><a href="#[f0]">APP_SetGroupVI</a> from yfymoduletxrx.o(i.APP_SetGroupVI) referenced 2 times from yfymoduletxrx.o(.data)
 <LI><a href="#[218]">APP_SetInfoAck</a> from gwmoduletxrx.o(i.APP_SetInfoAck) referenced from gwmoduletxrx.o(.constdata)
 <LI><a href="#[21f]">APP_SetPowerModuleGroupAck</a> from yfymoduletxrx.o(i.APP_SetPowerModuleGroupAck) referenced from yfymoduletxrx.o(.constdata)
 <LI><a href="#[1d9]">APP_StartChargeGunA</a> from controlmain.o(i.APP_StartChargeGunA) referenced from controlmain.o(.constdata)
 <LI><a href="#[1e7]">APP_StartChargeGunB</a> from controlmain.o(i.APP_StartChargeGunB) referenced from controlmain.o(.constdata)
 <LI><a href="#[1d5]">APP_StopChargeErrAGunA</a> from controlmain.o(i.APP_StopChargeErrAGunA) referenced from controlmain.o(.constdata)
 <LI><a href="#[1e3]">APP_StopChargeErrAGunB</a> from controlmain.o(i.APP_StopChargeErrAGunB) referenced from controlmain.o(.constdata)
 <LI><a href="#[1d6]">APP_StopChargeErrBGunA</a> from controlmain.o(i.APP_StopChargeErrBGunA) referenced from controlmain.o(.constdata)
 <LI><a href="#[1e4]">APP_StopChargeErrBGunB</a> from controlmain.o(i.APP_StopChargeErrBGunB) referenced from controlmain.o(.constdata)
 <LI><a href="#[1d7]">APP_StopChargeErrCGunA</a> from controlmain.o(i.APP_StopChargeErrCGunA) referenced from controlmain.o(.constdata)
 <LI><a href="#[1e5]">APP_StopChargeErrCGunB</a> from controlmain.o(i.APP_StopChargeErrCGunB) referenced from controlmain.o(.constdata)
 <LI><a href="#[1da]">APP_StopChargeGunA</a> from controlmain.o(i.APP_StopChargeGunA) referenced from controlmain.o(.constdata)
 <LI><a href="#[1e8]">APP_StopChargeGunB</a> from controlmain.o(i.APP_StopChargeGunB) referenced from controlmain.o(.constdata)
 <LI><a href="#[b1]">AP_RecvB16OFFLineRco</a> from apframe.o(i.AP_RecvB16OFFLineRco) referenced 2 times from apframe.o(.data)
 <LI><a href="#[ae]">AP_RecvB17CardWL</a> from apframe.o(i.AP_RecvB17CardWL) referenced 2 times from apframe.o(.data)
 <LI><a href="#[af]">AP_RecvB19VINWL</a> from apframe.o(i.AP_RecvB19VINWL) referenced 2 times from apframe.o(.data)
 <LI><a href="#[b0]">AP_RecvB21VINCardRes</a> from apframe.o(i.AP_RecvB21VINCardRes) referenced 2 times from apframe.o(.data)
 <LI><a href="#[a9]">AP_RecvB54BillAck</a> from apframe.o(i.AP_RecvB54BillAck) referenced 2 times from apframe.o(.data)
 <LI><a href="#[ab]">AP_RecvCardB7</a> from apframe.o(i.AP_RecvCardB7) referenced 2 times from apframe.o(.data)
 <LI><a href="#[ac]">AP_RecvCardB9</a> from apframe.o(i.AP_RecvCardB9) referenced 2 times from apframe.o(.data)
 <LI><a href="#[ad]">AP_RecvCardVinStartB11</a> from apframe.o(i.AP_RecvCardVinStartB11) referenced 2 times from apframe.o(.data)
 <LI><a href="#[a6]">AP_RecvHearAck</a> from apframe.o(i.AP_RecvHearAck) referenced 2 times from apframe.o(.data)
 <LI><a href="#[a8]">AP_RecvOnlineBillAck</a> from apframe.o(i.AP_RecvOnlineBillAck) referenced 2 times from apframe.o(.data)
 <LI><a href="#[a3]">AP_RecvPricB2</a> from apframe.o(i.AP_RecvPricB2) referenced 2 times from apframe.o(.data)
 <LI><a href="#[a4]">AP_RecvPricB47</a> from apframe.o(i.AP_RecvPricB47) referenced 2 times from apframe.o(.data)
 <LI><a href="#[aa]">AP_RecvSTCmd</a> from apframe.o(i.AP_RecvSTCmd) referenced 2 times from apframe.o(.data)
 <LI><a href="#[a5]">AP_RecvStartAppAck</a> from apframe.o(i.AP_RecvStartAppAck) referenced 2 times from apframe.o(.data)
 <LI><a href="#[a7]">AP_RecvTime</a> from apframe.o(i.AP_RecvTime) referenced 2 times from apframe.o(.data)
 <LI><a href="#[a2]">AP_RegisteeAck</a> from apframe.o(i.AP_RegisteeAck) referenced 2 times from apframe.o(.data)
 <LI><a href="#[b7]">AP_SendCarInfoA</a> from apframe.o(i.AP_SendCarInfoA) referenced 2 times from apframe.o(.data)
 <LI><a href="#[b8]">AP_SendCarInfoB</a> from apframe.o(i.AP_SendCarInfoB) referenced 2 times from apframe.o(.data)
 <LI><a href="#[b5]">AP_SendChargeInfoA</a> from apframe.o(i.AP_SendChargeInfoA) referenced 2 times from apframe.o(.data)
 <LI><a href="#[b6]">AP_SendChargeInfoB</a> from apframe.o(i.AP_SendChargeInfoB) referenced 2 times from apframe.o(.data)
 <LI><a href="#[b3]">AP_SendHear</a> from apframe.o(i.AP_SendHear) referenced 2 times from apframe.o(.data)
 <LI><a href="#[b4]">AP_SendRegister</a> from apframe.o(i.AP_SendRegister) referenced 2 times from apframe.o(.data)
 <LI><a href="#[b2]">AP_SendStartApp</a> from apframe.o(i.AP_SendStartApp) referenced 2 times from apframe.o(.data)
 <LI><a href="#[f9]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[113]">CAN1_RX0_IRQHandler</a> from stm32f4xx_it.o(i.CAN1_RX0_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[114]">CAN1_RX1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[115]">CAN1_SCE_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[112]">CAN1_TX_IRQHandler</a> from stm32f4xx_it.o(i.CAN1_TX_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[13f]">CAN2_RX0_IRQHandler</a> from stm32f4xx_it.o(i.CAN2_RX0_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[140]">CAN2_RX1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[141]">CAN2_SCE_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[13e]">CAN2_TX_IRQHandler</a> from stm32f4xx_it.o(i.CAN2_TX_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[14a]">CAN3_RX0_IRQHandler</a> from stm32f4xx_it.o(i.CAN3_RX0_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[14b]">CAN3_RX1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[14c]">CAN3_SCE_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[149]">CAN3_TX_IRQHandler</a> from stm32f4xx_it.o(i.CAN3_TX_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[82]">CCS_DeviceChargeStateA</a> from connectbmsframe.o(i.CCS_DeviceChargeStateA) referenced 2 times from connectbms.o(.data)
 <LI><a href="#[8c]">CCS_DeviceChargeStateB</a> from connectbmsframe.o(i.CCS_DeviceChargeStateB) referenced 2 times from connectbms.o(.data)
 <LI><a href="#[85]">CEM_DeviceChargeErrA</a> from connectbmsframe.o(i.CEM_DeviceChargeErrA) referenced 4 times from connectbms.o(.data)
 <LI><a href="#[8f]">CEM_DeviceChargeErrB</a> from connectbmsframe.o(i.CEM_DeviceChargeErrB) referenced 4 times from connectbms.o(.data)
 <LI><a href="#[7c]">CHM_SendShakeHandFrameA</a> from connectbmsframe.o(i.CHM_SendShakeHandFrameA) referenced 2 times from connectbms.o(.data)
 <LI><a href="#[86]">CHM_SendShakeHandFrameB</a> from connectbmsframe.o(i.CHM_SendShakeHandFrameB) referenced 2 times from connectbms.o(.data)
 <LI><a href="#[7f]">CML_SendMaxVolandCurA</a> from connectbmsframe.o(i.CML_SendMaxVolandCurA) referenced 2 times from connectbms.o(.data)
 <LI><a href="#[89]">CML_SendMaxVolandCurB</a> from connectbmsframe.o(i.CML_SendMaxVolandCurB) referenced 2 times from connectbms.o(.data)
 <LI><a href="#[7d]">CRM_SendShakeHandIdentifyFrameA</a> from connectbmsframe.o(i.CRM_SendShakeHandIdentifyFrameA) referenced 2 times from connectbms.o(.data)
 <LI><a href="#[87]">CRM_SendShakeHandIdentifyFrameB</a> from connectbmsframe.o(i.CRM_SendShakeHandIdentifyFrameB) referenced 2 times from connectbms.o(.data)
 <LI><a href="#[80]">CRO_SendChargeDevStandbyA</a> from connectbmsframe.o(i.CRO_SendChargeDevStandbyA) referenced 2 times from connectbms.o(.data)
 <LI><a href="#[8a]">CRO_SendChargeDevStandbyB</a> from connectbmsframe.o(i.CRO_SendChargeDevStandbyB) referenced 2 times from connectbms.o(.data)
 <LI><a href="#[81]">CRO_SendChargeDevUnstandbyA</a> from connectbmsframe.o(i.CRO_SendChargeDevUnstandbyA) referenced 2 times from connectbms.o(.data)
 <LI><a href="#[8b]">CRO_SendChargeDevUnstandbyB</a> from connectbmsframe.o(i.CRO_SendChargeDevUnstandbyB) referenced 2 times from connectbms.o(.data)
 <LI><a href="#[84]">CSD_DeviceChargeEndStatisticsA</a> from connectbmsframe.o(i.CSD_DeviceChargeEndStatisticsA) referenced 2 times from connectbms.o(.data)
 <LI><a href="#[8e]">CSD_DeviceChargeEndStatisticsB</a> from connectbmsframe.o(i.CSD_DeviceChargeEndStatisticsB) referenced 2 times from connectbms.o(.data)
 <LI><a href="#[83]">CST_DeviceEndChargeA</a> from connectbmsframe.o(i.CST_DeviceEndChargeA) referenced 4 times from connectbms.o(.data)
 <LI><a href="#[8d]">CST_DeviceEndChargeB</a> from connectbmsframe.o(i.CST_DeviceEndChargeB) referenced 4 times from connectbms.o(.data)
 <LI><a href="#[7e]">CTS_SendSynTimeMessageA</a> from connectbmsframe.o(i.CTS_SendSynTimeMessageA) referenced 2 times from connectbms.o(.data)
 <LI><a href="#[88]">CTS_SendSynTimeMessageB</a> from connectbmsframe.o(i.CTS_SendSynTimeMessageB) referenced 2 times from connectbms.o(.data)
 <LI><a href="#[1b6]">CanProtocolOperationBCLA</a> from connectbmsinterface.o(i.CanProtocolOperationBCLA) referenced from connectbms.o(.constdata)
 <LI><a href="#[1c4]">CanProtocolOperationBCLB</a> from connectbmsinterface.o(i.CanProtocolOperationBCLB) referenced from connectbms.o(.constdata)
 <LI><a href="#[1b4]">CanProtocolOperationBCPA</a> from connectbmsinterface.o(i.CanProtocolOperationBCPA) referenced from connectbms.o(.constdata)
 <LI><a href="#[1c2]">CanProtocolOperationBCPB</a> from connectbmsinterface.o(i.CanProtocolOperationBCPB) referenced from connectbms.o(.constdata)
 <LI><a href="#[1b7]">CanProtocolOperationBCSA</a> from connectbmsinterface.o(i.CanProtocolOperationBCSA) referenced from connectbms.o(.constdata)
 <LI><a href="#[1c5]">CanProtocolOperationBCSB</a> from connectbmsinterface.o(i.CanProtocolOperationBCSB) referenced from connectbms.o(.constdata)
 <LI><a href="#[1be]">CanProtocolOperationBEMA</a> from connectbmsinterface.o(i.CanProtocolOperationBEMA) referenced from connectbms.o(.constdata)
 <LI><a href="#[1cc]">CanProtocolOperationBEMB</a> from connectbmsinterface.o(i.CanProtocolOperationBEMB) referenced from connectbms.o(.constdata)
 <LI><a href="#[1b2]">CanProtocolOperationBHMA</a> from connectbmsinterface.o(i.CanProtocolOperationBHMA) referenced from connectbms.o(.constdata)
 <LI><a href="#[1c0]">CanProtocolOperationBHMB</a> from connectbmsinterface.o(i.CanProtocolOperationBHMB) referenced from connectbms.o(.constdata)
 <LI><a href="#[1ba]">CanProtocolOperationBMTA</a> from connectbmsinterface.o(i.CanProtocolOperationBMTA) referenced from connectbms.o(.constdata)
 <LI><a href="#[1c8]">CanProtocolOperationBMTB</a> from connectbmsinterface.o(i.CanProtocolOperationBMTB) referenced from connectbms.o(.constdata)
 <LI><a href="#[1b9]">CanProtocolOperationBMVA</a> from connectbmsinterface.o(i.CanProtocolOperationBMVA) referenced from connectbms.o(.constdata)
 <LI><a href="#[1c7]">CanProtocolOperationBMVB</a> from connectbmsinterface.o(i.CanProtocolOperationBMVB) referenced from connectbms.o(.constdata)
 <LI><a href="#[1b3]">CanProtocolOperationBRMA</a> from connectbmsinterface.o(i.CanProtocolOperationBRMA) referenced from connectbms.o(.constdata)
 <LI><a href="#[1c1]">CanProtocolOperationBRMB</a> from connectbmsinterface.o(i.CanProtocolOperationBRMB) referenced from connectbms.o(.constdata)
 <LI><a href="#[1b5]">CanProtocolOperationBROA</a> from connectbmsinterface.o(i.CanProtocolOperationBROA) referenced from connectbms.o(.constdata)
 <LI><a href="#[1c3]">CanProtocolOperationBROB</a> from connectbmsinterface.o(i.CanProtocolOperationBROB) referenced from connectbms.o(.constdata)
 <LI><a href="#[1bd]">CanProtocolOperationBSDA</a> from connectbmsinterface.o(i.CanProtocolOperationBSDA) referenced from connectbms.o(.constdata)
 <LI><a href="#[1cb]">CanProtocolOperationBSDB</a> from connectbmsinterface.o(i.CanProtocolOperationBSDB) referenced from connectbms.o(.constdata)
 <LI><a href="#[1b8]">CanProtocolOperationBSMA</a> from connectbmsinterface.o(i.CanProtocolOperationBSMA) referenced from connectbms.o(.constdata)
 <LI><a href="#[1c6]">CanProtocolOperationBSMB</a> from connectbmsinterface.o(i.CanProtocolOperationBSMB) referenced from connectbms.o(.constdata)
 <LI><a href="#[1bb]">CanProtocolOperationBSPA</a> from connectbmsinterface.o(i.CanProtocolOperationBSPA) referenced from connectbms.o(.constdata)
 <LI><a href="#[1c9]">CanProtocolOperationBSPB</a> from connectbmsinterface.o(i.CanProtocolOperationBSPB) referenced from connectbms.o(.constdata)
 <LI><a href="#[1bc]">CanProtocolOperationBSTA</a> from connectbmsinterface.o(i.CanProtocolOperationBSTA) referenced from connectbms.o(.constdata)
 <LI><a href="#[1ca]">CanProtocolOperationBSTB</a> from connectbmsinterface.o(i.CanProtocolOperationBSTB) referenced from connectbms.o(.constdata)
 <LI><a href="#[1b1]">CanProtocolOperationRTSA</a> from connectbmsinterface.o(i.CanProtocolOperationRTSA) referenced from connectbms.o(.constdata)
 <LI><a href="#[1bf]">CanProtocolOperationRTSB</a> from connectbmsinterface.o(i.CanProtocolOperationRTSB) referenced from connectbms.o(.constdata)
 <LI><a href="#[1af]">ChargeErrHandleA</a> from connectbms.o(i.ChargeErrHandleA) referenced 4 times from connectbms.o(.constdata)
 <LI><a href="#[1b0]">ChargeErrHandleB</a> from connectbms.o(i.ChargeErrHandleB) referenced 4 times from connectbms.o(.constdata)
 <LI><a href="#[13c]">DFSDM1_FLT0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[13d]">DFSDM1_FLT1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[15b]">DFSDM2_FLT0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[15c]">DFSDM2_FLT1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[15d]">DFSDM2_FLT2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[15e]">DFSDM2_FLT3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[10a]">DMA1_Stream0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[10b]">DMA1_Stream1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[10c]">DMA1_Stream2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[10d]">DMA1_Stream3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[10e]">DMA1_Stream4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[10f]">DMA1_Stream5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[110]">DMA1_Stream6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[12e]">DMA1_Stream7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[137]">DMA2_Stream0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[138]">DMA2_Stream1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[139]">DMA2_Stream2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[13a]">DMA2_Stream3_IRQHandler</a> from bsp_sdio_sd.o(i.DMA2_Stream3_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[13b]">DMA2_Stream4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[143]">DMA2_Stream5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[144]">DMA2_Stream6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[145]">DMA2_Stream7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[fc]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[105]">EXTI0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[127]">EXTI15_10_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[106]">EXTI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[107]">EXTI2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[108]">EXTI3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[109]">EXTI4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[116]">EXTI9_5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[103]">FLASH_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[159]">FMPI2C1_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[158]">FMPI2C1_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[14f]">FPU_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[12f]">FSMC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[163]">FTPDownloadDispose</a> from modulesim7600.o(i.FTPDownloadDispose) referenced from modulesim7600.o(i.Module_FTPDownload)
 <LI><a href="#[17]">HYDisplayMenu10</a> from dispkeyfunction.o(i.HYDisplayMenu10) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[19]">HYDisplayMenu14</a> from dispkeyfunction.o(i.HYDisplayMenu14) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[1b]">HYDisplayMenu16</a> from dispkeyfunction.o(i.HYDisplayMenu16) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[1d]">HYDisplayMenu21</a> from dispkeyfunction.o(i.HYDisplayMenu21) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[1f]">HYDisplayMenu22</a> from dispkeyfunction.o(i.HYDisplayMenu22) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[21]">HYDisplayMenu23</a> from dispkeyfunction.o(i.HYDisplayMenu23) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[23]">HYDisplayMenu24</a> from dispkeyfunction.o(i.HYDisplayMenu24) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[25]">HYDisplayMenu25</a> from dispkeyfunction.o(i.HYDisplayMenu25) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[27]">HYDisplayMenu26</a> from dispkeyfunction.o(i.HYDisplayMenu26) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[29]">HYDisplayMenu27</a> from dispkeyfunction.o(i.HYDisplayMenu27) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[2b]">HYDisplayMenu28</a> from dispkeyfunction.o(i.HYDisplayMenu28) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[b]">HYDisplayMenu3</a> from dispkeyfunction.o(i.HYDisplayMenu3) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[2d]">HYDisplayMenu30</a> from dispkeyfunction.o(i.HYDisplayMenu30) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[2f]">HYDisplayMenu31</a> from dispkeyfunction.o(i.HYDisplayMenu31) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[31]">HYDisplayMenu32</a> from dispkeyfunction.o(i.HYDisplayMenu32) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[33]">HYDisplayMenu33</a> from dispkeyfunction.o(i.HYDisplayMenu33) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[35]">HYDisplayMenu34</a> from dispkeyfunction.o(i.HYDisplayMenu34) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[37]">HYDisplayMenu35</a> from dispkeyfunction.o(i.HYDisplayMenu35) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[39]">HYDisplayMenu36</a> from dispkeyfunction.o(i.HYDisplayMenu36) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[3b]">HYDisplayMenu37</a> from dispkeyfunction.o(i.HYDisplayMenu37) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[3d]">HYDisplayMenu38</a> from dispkeyfunction.o(i.HYDisplayMenu38) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[3f]">HYDisplayMenu39</a> from dispkeyfunction.o(i.HYDisplayMenu39) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[d]">HYDisplayMenu4</a> from dispkeyfunction.o(i.HYDisplayMenu4) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[41]">HYDisplayMenu40</a> from dispkeyfunction.o(i.HYDisplayMenu40) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[43]">HYDisplayMenu41</a> from dispkeyfunction.o(i.HYDisplayMenu41) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[45]">HYDisplayMenu42</a> from dispkeyfunction.o(i.HYDisplayMenu42) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[47]">HYDisplayMenu43</a> from dispkeyfunction.o(i.HYDisplayMenu43) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[49]">HYDisplayMenu44</a> from dispkeyfunction.o(i.HYDisplayMenu44) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[4b]">HYDisplayMenu46</a> from dispkeyfunction.o(i.HYDisplayMenu46) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[4d]">HYDisplayMenu47</a> from dispkeyfunction.o(i.HYDisplayMenu47) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[4f]">HYDisplayMenu48</a> from dispkeyfunction.o(i.HYDisplayMenu48) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[51]">HYDisplayMenu49</a> from dispkeyfunction.o(i.HYDisplayMenu49) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[53]">HYDisplayMenu50</a> from dispkeyfunction.o(i.HYDisplayMenu50) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[55]">HYDisplayMenu51</a> from dispkeyfunction.o(i.HYDisplayMenu51) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[57]">HYDisplayMenu52</a> from dispkeyfunction.o(i.HYDisplayMenu52) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[59]">HYDisplayMenu53</a> from dispkeyfunction.o(i.HYDisplayMenu53) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[5b]">HYDisplayMenu54</a> from dispkeyfunction.o(i.HYDisplayMenu54) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[5d]">HYDisplayMenu56</a> from dispkeyfunction.o(i.HYDisplayMenu56) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[5f]">HYDisplayMenu57</a> from dispkeyfunction.o(i.HYDisplayMenu57) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[61]">HYDisplayMenu58</a> from dispkeyfunction.o(i.HYDisplayMenu58) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[63]">HYDisplayMenu59</a> from dispkeyfunction.o(i.HYDisplayMenu59) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[f]">HYDisplayMenu6</a> from dispkeyfunction.o(i.HYDisplayMenu6) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[65]">HYDisplayMenu60</a> from dispkeyfunction.o(i.HYDisplayMenu60) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[11]">HYDisplayMenu7</a> from dispkeyfunction.o(i.HYDisplayMenu7) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[67]">HYDisplayMenu73</a> from dispkeyfunction.o(i.HYDisplayMenu73) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[69]">HYDisplayMenu74</a> from dispkeyfunction.o(i.HYDisplayMenu74) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[6b]">HYDisplayMenu75</a> from dispkeyfunction.o(i.HYDisplayMenu75) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[6d]">HYDisplayMenu76</a> from dispkeyfunction.o(i.HYDisplayMenu76) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[6f]">HYDisplayMenu77</a> from dispkeyfunction.o(i.HYDisplayMenu77) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[71]">HYDisplayMenu78</a> from dispkeyfunction.o(i.HYDisplayMenu78) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[73]">HYDisplayMenu79</a> from dispkeyfunction.o(i.HYDisplayMenu79) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[13]">HYDisplayMenu8</a> from dispkeyfunction.o(i.HYDisplayMenu8) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[75]">HYDisplayMenu80</a> from dispkeyfunction.o(i.HYDisplayMenu80) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[77]">HYDisplayMenu81</a> from dispkeyfunction.o(i.HYDisplayMenu81) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[79]">HYDisplayMenu82</a> from dispkeyfunction.o(i.HYDisplayMenu82) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[7b]">HYDisplayMenu83</a> from dispkeyfunction.o(i.HYDisplayMenu83) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[15]">HYDisplayMenu9</a> from dispkeyfunction.o(i.HYDisplayMenu9) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[16]">HYKeyEvent10</a> from dispkey.o(i.HYKeyEvent10) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[18]">HYKeyEvent14</a> from dispkey.o(i.HYKeyEvent14) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[1a]">HYKeyEvent16</a> from dispkey.o(i.HYKeyEvent16) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[1c]">HYKeyEvent21</a> from dispkey.o(i.HYKeyEvent21) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[1e]">HYKeyEvent22</a> from dispkey.o(i.HYKeyEvent22) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[20]">HYKeyEvent23</a> from dispkey.o(i.HYKeyEvent23) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[22]">HYKeyEvent24</a> from dispkey.o(i.HYKeyEvent24) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[24]">HYKeyEvent25</a> from dispkey.o(i.HYKeyEvent25) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[26]">HYKeyEvent26</a> from dispkey.o(i.HYKeyEvent26) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[28]">HYKeyEvent27</a> from dispkey.o(i.HYKeyEvent27) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[2a]">HYKeyEvent28</a> from dispkey.o(i.HYKeyEvent28) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[a]">HYKeyEvent3</a> from dispkey.o(i.HYKeyEvent3) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[2c]">HYKeyEvent30</a> from dispkey.o(i.HYKeyEvent30) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[2e]">HYKeyEvent31</a> from dispkey.o(i.HYKeyEvent31) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[30]">HYKeyEvent32</a> from dispkey.o(i.HYKeyEvent32) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[32]">HYKeyEvent33</a> from dispkey.o(i.HYKeyEvent33) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[34]">HYKeyEvent34</a> from dispkey.o(i.HYKeyEvent34) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[36]">HYKeyEvent35</a> from dispkey.o(i.HYKeyEvent35) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[38]">HYKeyEvent36</a> from dispkey.o(i.HYKeyEvent36) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[3a]">HYKeyEvent37</a> from dispkey.o(i.HYKeyEvent37) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[3c]">HYKeyEvent38</a> from dispkey.o(i.HYKeyEvent38) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[3e]">HYKeyEvent39</a> from dispkey.o(i.HYKeyEvent39) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[c]">HYKeyEvent4</a> from dispkey.o(i.HYKeyEvent4) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[40]">HYKeyEvent40</a> from dispkey.o(i.HYKeyEvent40) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[42]">HYKeyEvent41</a> from dispkey.o(i.HYKeyEvent41) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[44]">HYKeyEvent42</a> from dispkey.o(i.HYKeyEvent42) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[46]">HYKeyEvent43</a> from dispkey.o(i.HYKeyEvent43) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[48]">HYKeyEvent44</a> from dispkey.o(i.HYKeyEvent44) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[4a]">HYKeyEvent46</a> from dispkey.o(i.HYKeyEvent46) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[4c]">HYKeyEvent47</a> from dispkey.o(i.HYKeyEvent47) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[4e]">HYKeyEvent48</a> from dispkey.o(i.HYKeyEvent48) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[50]">HYKeyEvent49</a> from dispkey.o(i.HYKeyEvent49) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[52]">HYKeyEvent50</a> from dispkey.o(i.HYKeyEvent50) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[54]">HYKeyEvent51</a> from dispkey.o(i.HYKeyEvent51) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[56]">HYKeyEvent52</a> from dispkey.o(i.HYKeyEvent52) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[58]">HYKeyEvent53</a> from dispkey.o(i.HYKeyEvent53) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[5a]">HYKeyEvent54</a> from dispkey.o(i.HYKeyEvent54) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[5c]">HYKeyEvent56</a> from dispkey.o(i.HYKeyEvent56) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[5e]">HYKeyEvent57</a> from dispkey.o(i.HYKeyEvent57) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[60]">HYKeyEvent58</a> from dispkey.o(i.HYKeyEvent58) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[62]">HYKeyEvent59</a> from dispkey.o(i.HYKeyEvent59) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[e]">HYKeyEvent6</a> from dispkey.o(i.HYKeyEvent6) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[64]">HYKeyEvent60</a> from dispkey.o(i.HYKeyEvent60) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[10]">HYKeyEvent7</a> from dispkey.o(i.HYKeyEvent7) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[66]">HYKeyEvent73</a> from dispkey.o(i.HYKeyEvent73) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[68]">HYKeyEvent74</a> from dispkey.o(i.HYKeyEvent74) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[6a]">HYKeyEvent75</a> from dispkey.o(i.HYKeyEvent75) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[6c]">HYKeyEvent76</a> from dispkey.o(i.HYKeyEvent76) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[6e]">HYKeyEvent77</a> from dispkey.o(i.HYKeyEvent77) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[70]">HYKeyEvent78</a> from dispkey.o(i.HYKeyEvent78) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[72]">HYKeyEvent79</a> from dispkey.o(i.HYKeyEvent79) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[12]">HYKeyEvent8</a> from dispkey.o(i.HYKeyEvent8) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[74]">HYKeyEvent80</a> from dispkey.o(i.HYKeyEvent80) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[76]">HYKeyEvent81</a> from dispkey.o(i.HYKeyEvent81) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[78]">HYKeyEvent82</a> from dispkey.o(i.HYKeyEvent82) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[7a]">HYKeyEvent83</a> from dispkey.o(i.HYKeyEvent83) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[14]">HYKeyEvent9</a> from dispkey.o(i.HYKeyEvent9) referenced 2 times from menudisp.o(.data)
 <LI><a href="#[cc]">HY_RecvCardStart</a> from hyframe.o(i.HY_RecvCardStart) referenced 2 times from hyframe.o(.data)
 <LI><a href="#[c8]">HY_RecvDevFailAck</a> from hyframe.o(i.HY_RecvDevFailAck) referenced 2 times from hyframe.o(.data)
 <LI><a href="#[c4]">HY_RecvDevInfoAck</a> from hyframe.o(i.HY_RecvDevInfoAck) referenced 2 times from hyframe.o(.data)
 <LI><a href="#[c7]">HY_RecvDevStopAck</a> from hyframe.o(i.HY_RecvDevStopAck) referenced 2 times from hyframe.o(.data)
 <LI><a href="#[c3]">HY_RecvHearAck</a> from hyframe.o(i.HY_RecvHearAck) referenced 2 times from hyframe.o(.data)
 <LI><a href="#[ca]">HY_RecvQueryBill</a> from hyframe.o(i.HY_RecvQueryBill) referenced 2 times from hyframe.o(.data)
 <LI><a href="#[cb]">HY_RecvQueryRate</a> from hyframe.o(i.HY_RecvQueryRate) referenced 2 times from hyframe.o(.data)
 <LI><a href="#[c9]">HY_RecvRateSet</a> from hyframe.o(i.HY_RecvRateSet) referenced 2 times from hyframe.o(.data)
 <LI><a href="#[c6]">HY_RecvRecordAck</a> from hyframe.o(i.HY_RecvRecordAck) referenced 2 times from hyframe.o(.data)
 <LI><a href="#[c5]">HY_RecvRegisterAck</a> from hyframe.o(i.HY_RecvRegisterAck) referenced 2 times from hyframe.o(.data)
 <LI><a href="#[c1]">HY_RecvStartCharge</a> from hyframe.o(i.HY_RecvStartCharge) referenced 2 times from hyframe.o(.data)
 <LI><a href="#[c2]">HY_RecvStopCharge</a> from hyframe.o(i.HY_RecvStopCharge) referenced 2 times from hyframe.o(.data)
 <LI><a href="#[cd]">HY_RecvUpdata</a> from hyframe.o(i.HY_RecvUpdata) referenced 2 times from hyframe.o(.data)
 <LI><a href="#[ce]">HY_RecvVin</a> from hyframe.o(i.HY_RecvVin) referenced 2 times from hyframe.o(.data)
 <LI><a href="#[bf]">HY_SendDevStateA</a> from hyframe.o(i.HY_SendDevStateA) referenced 2 times from hyframe.o(.data)
 <LI><a href="#[c0]">HY_SendDevStateB</a> from hyframe.o(i.HY_SendDevStateB) referenced 2 times from hyframe.o(.data)
 <LI><a href="#[be]">HY_SendHear</a> from hyframe.o(i.HY_SendHear) referenced 2 times from hyframe.o(.data)
 <LI><a href="#[bd]">HY_SendRegister</a> from hyframe.o(i.HY_SendRegister) referenced 2 times from hyframe.o(.data)
 <LI><a href="#[f7]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[11f]">I2C1_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[11e]">I2C1_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[121]">I2C2_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[120]">I2C2_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[148]">I2C3_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[147]">I2C3_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[15a]">LPTIM1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[f8]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[1a8]">Munu10_IP1Sert</a> from displaymain.o(i.Munu10_IP1Sert) referenced from displaymain.o(.constdata)
 <LI><a href="#[1a9]">Munu10_IP2Sert</a> from displaymain.o(i.Munu10_IP2Sert) referenced from displaymain.o(.constdata)
 <LI><a href="#[1aa]">Munu10_IP3Sert</a> from displaymain.o(i.Munu10_IP3Sert) referenced from displaymain.o(.constdata)
 <LI><a href="#[1ab]">Munu10_IP4Sert</a> from displaymain.o(i.Munu10_IP4Sert) referenced from displaymain.o(.constdata)
 <LI><a href="#[1ac]">Munu10_NetNumSet</a> from displaymain.o(i.Munu10_NetNumSet) referenced from displaymain.o(.constdata)
 <LI><a href="#[1a7]">Munu10_PortSert</a> from displaymain.o(i.Munu10_PortSert) referenced from displaymain.o(.constdata)
 <LI><a href="#[18b]">Munu3_16_CodeDispose</a> from displaymain.o(i.Munu3_16_CodeDispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[18c]">Munu3_CodeDispose</a> from displaymain.o(i.Munu3_CodeDispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[1a6]">Munu48_PrcDispose</a> from displaymain.o(i.Munu48_PrcDispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[18d]">Munu50_HANDADispose</a> from displaymain.o(i.Munu50_HANDADispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[18e]">Munu51_HANDBDispose</a> from displaymain.o(i.Munu51_HANDBDispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[18f]">Munu52_DevnumDispose</a> from displaymain.o(i.Munu52_DevnumDispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[192]">Munu52_MacMaxVolDispose</a> from displaymain.o(i.Munu52_MacMaxVolDispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[193]">Munu52_MacMinVolDispose</a> from displaymain.o(i.Munu52_MacMinVolDispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[194]">Munu52_MaxOutCurDispose</a> from displaymain.o(i.Munu52_MaxOutCurDispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[191]">Munu52_ModuleNumDispose</a> from displaymain.o(i.Munu52_ModuleNumDispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[197]">Munu52_OutDcCurDispose</a> from displaymain.o(i.Munu52_OutDcCurDispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[196]">Munu52_OutDcVolDispose</a> from displaymain.o(i.Munu52_OutDcVolDispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[190]">Munu52_ProNumDispose</a> from displaymain.o(i.Munu52_ProNumDispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[198]">Munu52_SOCDispose</a> from displaymain.o(i.Munu52_SOCDispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[195]">Munu52_UseGunDispose</a> from displaymain.o(i.Munu52_UseGunDispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[19b]">Munu53_MeterAddADispose</a> from displaymain.o(i.Munu53_MeterAddADispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[19c]">Munu53_MeterAddBDispose</a> from displaymain.o(i.Munu53_MeterAddBDispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[19a]">Munu53_acinputdownvalueDispose</a> from displaymain.o(i.Munu53_acinputdownvalueDispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[199]">Munu53_acinputupvalueDispose</a> from displaymain.o(i.Munu53_acinputupvalueDispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[19d]">Munu54_SetTimeDispose</a> from displaymain.o(i.Munu54_SetTimeDispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[19e]">Munu57_Just1Dispose</a> from displaymain.o(i.Munu57_Just1Dispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[19f]">Munu57_Just2Dispose</a> from displaymain.o(i.Munu57_Just2Dispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[1a0]">Munu58_Just1Dispose</a> from displaymain.o(i.Munu58_Just1Dispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[1a1]">Munu58_Just2Dispose</a> from displaymain.o(i.Munu58_Just2Dispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[1a2]">Munu59_Just1Dispose</a> from displaymain.o(i.Munu59_Just1Dispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[1a3]">Munu59_Just2Dispose</a> from displaymain.o(i.Munu59_Just2Dispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[1a4]">Munu60_Just1Dispose</a> from displaymain.o(i.Munu60_Just1Dispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[1a5]">Munu60_Just2Dispose</a> from displaymain.o(i.Munu60_Just2Dispose) referenced from displaymain.o(.constdata)
 <LI><a href="#[f6]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[162]">OSTaskSwHook</a> from os_cpu_c.o(i.OSTaskSwHook) referenced from os_cpu_a.o(.text)
 <LI><a href="#[165]">OSTmr_Task</a> from ucos_ii.o(i.OSTmr_Task) referenced from ucos_ii.o(i.OSTmr_InitTask)
 <LI><a href="#[fd]">OS_CPU_PendSVHandler</a> from os_cpu_a.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[fe]">OS_CPU_SysTickHandler</a> from stm32f4xx_it.o(i.OS_CPU_SysTickHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[166]">OS_TaskIdle</a> from ucos_ii.o(i.OS_TaskIdle) referenced from ucos_ii.o(i.OS_InitTaskIdle)
 <LI><a href="#[164]">OS_TaskReturn</a> from ucos_ii.o(i.OS_TaskReturn) referenced from os_cpu_c.o(i.OSTaskStkInit)
 <LI><a href="#[167]">OS_TaskStat</a> from ucos_ii.o(i.OS_TaskStat) referenced from ucos_ii.o(i.OS_InitTaskStat)
 <LI><a href="#[142]">OTG_FS_IRQHandler</a> from stm32f4xx_it.o(i.OTG_FS_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[129]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[100]">PVD_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[157]">QUADSPI_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[104]">RCC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[14e]">RNG_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[18a]">RS485_RD2Init</a> from bsp_rs485.o(i.RS485_RD2Init) referenced 2 times from bsp_rs485.o(.constdata)
 <LI><a href="#[128]">RTC_Alarm_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[102]">RTC_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[f2]">ReadModuleACV_YKR</a> from ykrmoduletxrx.o(i.ReadModuleACV_YKR) referenced 2 times from ykrmoduletxrx.o(.data)
 <LI><a href="#[f1]">ReadModuleImf_YKR</a> from ykrmoduletxrx.o(i.ReadModuleImf_YKR) referenced 2 times from ykrmoduletxrx.o(.data)
 <LI><a href="#[20e]">Read_REG1K0100CurrLimit</a> from modulemanage.o(i.Read_REG1K0100CurrLimit) referenced from modulemanage.o(.constdata)
 <LI><a href="#[20c]">Read_SH75015K3BCurrLimit</a> from modulemanage.o(i.Read_SH75015K3BCurrLimit) referenced from modulemanage.o(.constdata)
 <LI><a href="#[20f]">Read_SH75020K3BCurrLimit</a> from modulemanage.o(i.Read_SH75020K3BCurrLimit) referenced from modulemanage.o(.constdata)
 <LI><a href="#[210]">Read_TH30F10025C7CurrLimit</a> from modulemanage.o(i.Read_TH30F10025C7CurrLimit) referenced from modulemanage.o(.constdata)
 <LI><a href="#[211]">Read_TH40F10025C7CurrLimit</a> from modulemanage.o(i.Read_TH40F10025C7CurrLimit) referenced from modulemanage.o(.constdata)
 <LI><a href="#[208]">Read_YFY50025CurrLimit</a> from modulemanage.o(i.Read_YFY50025CurrLimit) referenced from modulemanage.o(.constdata)
 <LI><a href="#[207]">Read_YFY75020CurrLimit</a> from modulemanage.o(i.Read_YFY75020CurrLimit) referenced from modulemanage.o(.constdata)
 <LI><a href="#[209]">Read_YFY75035CurrLimit</a> from modulemanage.o(i.Read_YFY75035CurrLimit) referenced from modulemanage.o(.constdata)
 <LI><a href="#[20a]">Read_YFY75050CurrLimit</a> from modulemanage.o(i.Read_YFY75050CurrLimit) referenced from modulemanage.o(.constdata)
 <LI><a href="#[20b]">Read_YKR1507500CurrLimit</a> from modulemanage.o(i.Read_YKR1507500CurrLimit) referenced from modulemanage.o(.constdata)
 <LI><a href="#[212]">Read_YL1K20CurrLimit</a> from modulemanage.o(i.Read_YL1K20CurrLimit) referenced from modulemanage.o(.constdata)
 <LI><a href="#[20d]">Read_YL75030CurrLimit</a> from modulemanage.o(i.Read_YL75030CurrLimit) referenced from modulemanage.o(.constdata)
 <LI><a href="#[1eb]">Recv_AT_CGDCONT_Ack</a> from modulesim7600.o(i.Recv_AT_CGDCONT_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1ea]">Recv_AT_CIMI_Ack</a> from modulesim7600.o(i.Recv_AT_CIMI_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1ec]">Recv_AT_CIPMODE_Ack</a> from modulesim7600.o(i.Recv_AT_CIPMODE_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1e9]">Recv_AT_CSQ_Ack</a> from modulesim7600.o(i.Recv_AT_CSQ_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1ee]">Recv_AT_ConnectServer0Cmd_Ack</a> from modulesim7600.o(i.Recv_AT_ConnectServer0Cmd_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1f0]">Recv_AT_ConnectServer0_Ack</a> from modulesim7600.o(i.Recv_AT_ConnectServer0_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1ef]">Recv_AT_ConnectServer1Cmd_Ack</a> from modulesim7600.o(i.Recv_AT_ConnectServer1Cmd_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1f1]">Recv_AT_ConnectServer1_Ack</a> from modulesim7600.o(i.Recv_AT_ConnectServer1_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1f2]">Recv_AT_EnterATCmd_Ack</a> from modulesim7600.o(i.Recv_AT_EnterATCmd_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1ed]">Recv_AT_NETOPEN_Ack</a> from modulesim7600.o(i.Recv_AT_NETOPEN_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1f5]">Recv_AT_ReRecv0Cmd_Ack</a> from modulesim7600.o(i.Recv_AT_ReRecv0Cmd_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1f6]">Recv_AT_ReRecv1Cmd_Ack</a> from modulesim7600.o(i.Recv_AT_ReRecv1Cmd_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1f3]">Recv_AT_SendAck0Cmd_Ack</a> from modulesim7600.o(i.Recv_AT_SendAck0Cmd_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1f4]">Recv_AT_SendAck1Cmd_Ack</a> from modulesim7600.o(i.Recv_AT_SendAck1Cmd_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1f7]">Recv_AT_SetReAct_Ack</a> from modulesim7600.o(i.Recv_AT_SetReAct_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1f8]">Recv_ActRecv0_Ack</a> from modulesim7600.o(i.Recv_ActRecv0_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1f9]">Recv_ActRecv1_Ack</a> from modulesim7600.o(i.Recv_ActRecv1_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[202]">Recv_CFTPSGET_Ack</a> from modulesim7600.o(i.Recv_CFTPSGET_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[201]">Recv_CFTPSTYPE_Ack</a> from modulesim7600.o(i.Recv_CFTPSTYPE_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[200]">Recv_FTPLOGIN_Ack</a> from modulesim7600.o(i.Recv_FTPLOGIN_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1ff]">Recv_FTPStart_Ack</a> from modulesim7600.o(i.Recv_FTPStart_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1fb]">Recv_HttpConect_Ack</a> from modulesim7600.o(i.Recv_HttpConect_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1fc]">Recv_HttpGet_Ack</a> from modulesim7600.o(i.Recv_HttpGet_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1fa]">Recv_HttpStart_Ack</a> from modulesim7600.o(i.Recv_HttpStart_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1fe]">Recv_ReadData_Ack</a> from modulesim7600.o(i.Recv_ReadData_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[1fd]">Recv_ReadDone_Ack</a> from modulesim7600.o(i.Recv_ReadDone_Ack) referenced from modulesim7600.o(.constdata)
 <LI><a href="#[f5]">Reset_Handler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[154]">SAI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[130]">SDIO_IRQHandler</a> from bsp_sdio_sd.o(i.SDIO_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[e9]">SHSet_Group_Fream</a> from shmoduletxrx.o(i.SHSet_Group_Fream) referenced 2 times from shmoduletxrx.o(.data)
 <LI><a href="#[215]">SH_GetPowerModuleACStates</a> from shmoduletxrx.o(i.SH_GetPowerModuleACStates) referenced from shmoduletxrx.o(.constdata)
 <LI><a href="#[214]">SH_GetPowerModuleCur</a> from shmoduletxrx.o(i.SH_GetPowerModuleCur) referenced from shmoduletxrx.o(.constdata)
 <LI><a href="#[213]">SH_GetPowerModuleVol</a> from shmoduletxrx.o(i.SH_GetPowerModuleVol) referenced from shmoduletxrx.o(.constdata)
 <LI><a href="#[122]">SPI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[123]">SPI2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[132]">SPI3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[152]">SPI4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[153]">SPI5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[fb]">SVC_Handler</a> from stm32f4xx_it.o(i.SVC_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[e8]">Send_GetModuleInfo</a> from shmoduletxrx.o(i.Send_GetModuleInfo) referenced 2 times from shmoduletxrx.o(.data)
 <LI><a href="#[160]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f429_439xx.o(.text)
 <LI><a href="#[101]">TAMP_STAMP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[117]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[11a]">TIM1_CC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[119]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[118]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[11b]">TIM2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[11c]">TIM3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[11d]">TIM4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[131]">TIM5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[135]">TIM6_DAC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[136]">TIM7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[12a]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[12d]">TIM8_CC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[12c]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[12b]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[176]">Task4GMain</a> from 4gmain.o(i.Task4GMain) referenced from main.o(i.init_task_core)
 <LI><a href="#[178]">Task4GRecv</a> from 4grecv.o(i.Task4GRecv) referenced from main.o(i.init_task_core)
 <LI><a href="#[177]">Task4GSend</a> from 4gsend.o(i.Task4GSend) referenced from main.o(i.init_task_core)
 <LI><a href="#[17e]">TaskADJust</a> from adadjust.o(i.TaskADJust) referenced from main.o(i.init_task_core)
 <LI><a href="#[174]">TaskBillStk</a> from rs485meter.o(i.TaskBillStk) referenced from main.o(i.init_task_core)
 <LI><a href="#[172]">TaskCardStk</a> from card_cpu.o(i.TaskCardStk) referenced from main.o(i.init_task_core)
 <LI><a href="#[17a]">TaskConnectBMSAMain</a> from connectbms.o(i.TaskConnectBMSAMain) referenced from main.o(i.init_task_core)
 <LI><a href="#[17b]">TaskConnectBMSBMain</a> from connectbms.o(i.TaskConnectBMSBMain) referenced from main.o(i.init_task_core)
 <LI><a href="#[170]">TaskControlGunA</a> from controlmain.o(i.TaskControlGunA) referenced from main.o(i.init_task_core)
 <LI><a href="#[171]">TaskControlGunB</a> from controlmain.o(i.TaskControlGunB) referenced from main.o(i.init_task_core)
 <LI><a href="#[17c]">TaskDisplay</a> from displaymain.o(i.TaskDisplay) referenced from main.o(i.init_task_core)
 <LI><a href="#[173]">TaskMeterStk</a> from rs485meter.o(i.TaskMeterStk) referenced from main.o(i.init_task_core)
 <LI><a href="#[16a]">TaskModuleRx</a> from modulemanage.o(i.TaskModuleRx) referenced from pcumain.o(i.TestMain)
 <LI><a href="#[16b]">TaskModuleTx</a> from modulemanage.o(i.TaskModuleTx) referenced from pcumain.o(i.TestMain)
 <LI><a href="#[16c]">TaskPCUControl</a> from controlapp.o(i.TaskPCUControl) referenced from pcumain.o(i.TestMain)
 <LI><a href="#[16d]">TaskPCUMain</a> from pcumain.o(i.TaskPCUMain) referenced from pcumain.o(i.TestMain)
 <LI><a href="#[179]">TaskPeriod</a> from controlmain.o(i.TaskPeriod) referenced from main.o(i.init_task_core)
 <LI><a href="#[175]">TaskRTC</a> from rtc_task.o(i.TaskRTC) referenced from main.o(i.init_task_core)
 <LI><a href="#[17d]">TaskSample</a> from adsamplemain.o(i.TaskSample) referenced from main.o(i.init_task_core)
 <LI><a href="#[168]">TaskSendBMSAFrame</a> from connectbms.o(i.TaskSendBMSAFrame) referenced from connectbms.o(i.TaskConnectBMSAMain)
 <LI><a href="#[169]">TaskSendBMSBFrame</a> from connectbms.o(i.TaskSendBMSBFrame) referenced from connectbms.o(i.TaskConnectBMSBMain)
 <LI><a href="#[180]">TaskUsbTask</a> from usb_task.o(i.TaskUsbTask) referenced from main.o(i.init_task_core)
 <LI><a href="#[17f]">TestMain</a> from pcumain.o(i.TestMain) referenced from main.o(i.init_task_core)
 <LI><a href="#[156]">UART10_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[182]">UART1_PIN_CFG</a> from bsp_uart.o(i.UART1_PIN_CFG) referenced from bsp_uart.o(.constdata)
 <LI><a href="#[183]">UART2_PIN_CFG</a> from bsp_uart.o(i.UART2_PIN_CFG) referenced from bsp_uart.o(.constdata)
 <LI><a href="#[184]">UART3_PIN_CFG</a> from bsp_uart.o(i.UART3_PIN_CFG) referenced from bsp_uart.o(.constdata)
 <LI><a href="#[133]">UART4_IRQHandler</a> from stm32f4xx_it.o(i.UART4_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[185]">UART4_PIN_CFG</a> from bsp_uart.o(i.UART4_PIN_CFG) referenced from bsp_uart.o(.constdata)
 <LI><a href="#[134]">UART5_IRQHandler</a> from stm32f4xx_it.o(i.UART5_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[186]">UART5_PIN_CFG</a> from bsp_uart.o(i.UART5_PIN_CFG) referenced from bsp_uart.o(.constdata)
 <LI><a href="#[187]">UART6_PIN_CFG</a> from bsp_uart.o(i.UART6_PIN_CFG) referenced from bsp_uart.o(.constdata)
 <LI><a href="#[150]">UART7_IRQHandler</a> from stm32f4xx_it.o(i.UART7_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[188]">UART7_PIN_CFG</a> from bsp_uart.o(i.UART7_PIN_CFG) referenced from bsp_uart.o(.constdata)
 <LI><a href="#[151]">UART8_IRQHandler</a> from stm32f4xx_it.o(i.UART8_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[189]">UART8_PIN_CFG</a> from bsp_uart.o(i.UART8_PIN_CFG) referenced from bsp_uart.o(.constdata)
 <LI><a href="#[155]">UART9_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[124]">USART1_IRQHandler</a> from stm32f4xx_it.o(i.USART1_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[125]">USART2_IRQHandler</a> from stm32f4xx_it.o(i.USART2_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[126]">USART3_IRQHandler</a> from stm32f4xx_it.o(i.USART3_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[146]">USART6_IRQHandler</a> from stm32f4xx_it.o(i.USART6_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6]">USBH_Connected</a> from usbh_core.o(i.USBH_Connected) referenced 2 times from usbh_core.o(.data)
 <LI><a href="#[7]">USBH_Disconnected</a> from usbh_core.o(i.USBH_Disconnected) referenced 2 times from usbh_core.o(.data)
 <LI><a href="#[9]">USBH_PortDisabled</a> from usbh_core.o(i.USBH_PortDisabled) referenced 2 times from usbh_core.o(.data)
 <LI><a href="#[8]">USBH_PortEnabled</a> from usbh_core.o(i.USBH_PortEnabled) referenced 2 times from usbh_core.o(.data)
 <LI><a href="#[5]">USBH_SOF</a> from usbh_core.o(i.USBH_SOF) referenced 2 times from usbh_core.o(.data)
 <LI><a href="#[fa]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[ff]">WWDG_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[de]">YKC_BCRecvCard</a> from ykcframe.o(i.YKC_BCRecvCard) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[df]">YKC_BCRecvStart</a> from ykcframe.o(i.YKC_BCRecvStart) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[e5]">YKC_RecvBalance</a> from ykcframe.o(i.YKC_RecvBalance) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[dc]">YKC_RecvCard</a> from ykcframe.o(i.YKC_RecvCard) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[d9]">YKC_RecvHeartAck</a> from ykcframe.o(i.YKC_RecvHeartAck) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[db]">YKC_RecvPricAck</a> from ykcframe.o(i.YKC_RecvPricAck) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[e4]">YKC_RecvPricSet</a> from ykcframe.o(i.YKC_RecvPricSet) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[da]">YKC_RecvPrimodelAck</a> from ykcframe.o(i.YKC_RecvPrimodelAck) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[e7]">YKC_RecvQRcode</a> from ykcframe.o(i.YKC_RecvQRcode) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[e1]">YKC_RecvReadData</a> from ykcframe.o(i.YKC_RecvReadData) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[e2]">YKC_RecvRecordAck</a> from ykcframe.o(i.YKC_RecvRecordAck) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[d8]">YKC_RecvRegisterAck</a> from ykcframe.o(i.YKC_RecvRegisterAck) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[dd]">YKC_RecvStart</a> from ykcframe.o(i.YKC_RecvStart) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[e0]">YKC_RecvStop</a> from ykcframe.o(i.YKC_RecvStop) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[e3]">YKC_RecvTime</a> from ykcframe.o(i.YKC_RecvTime) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[e6]">YKC_RecvUpdate</a> from ykcframe.o(i.YKC_RecvUpdate) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[d6]">YKC_SendBSMGunACmd25</a> from ykcframe.o(i.YKC_SendBSMGunACmd25) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[d7]">YKC_SendBSMGunBCmd25</a> from ykcframe.o(i.YKC_SendBSMGunBCmd25) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[d0]">YKC_SendHearGunACmd3</a> from ykcframe.o(i.YKC_SendHearGunACmd3) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[d1]">YKC_SendHearGunBCmd3</a> from ykcframe.o(i.YKC_SendHearGunBCmd3) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[d2]">YKC_SendPriodSJDataGunACmd13</a> from ykcframe.o(i.YKC_SendPriodSJDataGunACmd13) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[d3]">YKC_SendPriodSJDataGunBCmd13</a> from ykcframe.o(i.YKC_SendPriodSJDataGunBCmd13) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[cf]">YKC_SendRegisterCmd1</a> from ykcframe.o(i.YKC_SendRegisterCmd1) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[d4]">YKC_SendSJDataGunACmd23</a> from ykcframe.o(i.YKC_SendSJDataGunACmd23) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[d5]">YKC_SendSJDataGunBCmd23</a> from ykcframe.o(i.YKC_SendSJDataGunBCmd23) referenced 2 times from ykcframe.o(.data)
 <LI><a href="#[bb]">ZF_SendDevState</a> from zfframe.o(i.ZF_SendDevState) referenced 2 times from zfframe.o(.data)
 <LI><a href="#[bc]">ZF_SendDevStateB</a> from zfframe.o(i.ZF_SendDevStateB) referenced 2 times from zfframe.o(.data)
 <LI><a href="#[ba]">ZF_SendHear</a> from zfframe.o(i.ZF_SendHear) referenced 2 times from zfframe.o(.data)
 <LI><a href="#[b9]">ZF_SendRegister</a> from zfframe.o(i.ZF_SendRegister) referenced 2 times from zfframe.o(.data)
 <LI><a href="#[9f]">_66_RecvCardStart</a> from _66frame.o(i._66_RecvCardStart) referenced 2 times from _66frame.o(.data)
 <LI><a href="#[9b]">_66_RecvDevFailAck</a> from _66frame.o(i._66_RecvDevFailAck) referenced 2 times from _66frame.o(.data)
 <LI><a href="#[97]">_66_RecvDevInfoAck</a> from _66frame.o(i._66_RecvDevInfoAck) referenced 2 times from _66frame.o(.data)
 <LI><a href="#[9a]">_66_RecvDevStopAck</a> from _66frame.o(i._66_RecvDevStopAck) referenced 2 times from _66frame.o(.data)
 <LI><a href="#[96]">_66_RecvHearAck</a> from _66frame.o(i._66_RecvHearAck) referenced 2 times from _66frame.o(.data)
 <LI><a href="#[9d]">_66_RecvQueryBill</a> from _66frame.o(i._66_RecvQueryBill) referenced 2 times from _66frame.o(.data)
 <LI><a href="#[9e]">_66_RecvQueryRate</a> from _66frame.o(i._66_RecvQueryRate) referenced 2 times from _66frame.o(.data)
 <LI><a href="#[a1]">_66_RecvRateFWSet</a> from _66frame.o(i._66_RecvRateFWSet) referenced 2 times from _66frame.o(.data)
 <LI><a href="#[9c]">_66_RecvRateSet</a> from _66frame.o(i._66_RecvRateSet) referenced 2 times from _66frame.o(.data)
 <LI><a href="#[99]">_66_RecvRecordAck</a> from _66frame.o(i._66_RecvRecordAck) referenced 2 times from _66frame.o(.data)
 <LI><a href="#[98]">_66_RecvRegisterAck</a> from _66frame.o(i._66_RecvRegisterAck) referenced 2 times from _66frame.o(.data)
 <LI><a href="#[a0]">_66_RecvSetInfo</a> from _66frame.o(i._66_RecvSetInfo) referenced 2 times from _66frame.o(.data)
 <LI><a href="#[94]">_66_RecvStartCharge</a> from _66frame.o(i._66_RecvStartCharge) referenced 2 times from _66frame.o(.data)
 <LI><a href="#[95]">_66_RecvStopCharge</a> from _66frame.o(i._66_RecvStopCharge) referenced 2 times from _66frame.o(.data)
 <LI><a href="#[92]">_66_SendDevStateA</a> from _66frame.o(i._66_SendDevStateA) referenced 2 times from _66frame.o(.data)
 <LI><a href="#[93]">_66_SendDevStateB</a> from _66frame.o(i._66_SendDevStateB) referenced 2 times from _66frame.o(.data)
 <LI><a href="#[91]">_66_SendHear</a> from _66frame.o(i._66_SendHear) referenced 2 times from _66frame.o(.data)
 <LI><a href="#[90]">_66_SendRegister</a> from _66frame.o(i._66_SendRegister) referenced 2 times from _66frame.o(.data)
 <LI><a href="#[161]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f429_439xx.o(.text)
 <LI><a href="#[16f]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0snprintf)
 <LI><a href="#[16e]">fputc</a> from bsp_debug_usart.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[181]">init_task_core</a> from main.o(i.init_task_core) referenced from main.o(i.main)
 <LI><a href="#[15f]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[161]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(.text)
</UL>
<P><STRONG><a name="[595]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[220]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[238]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[596]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[597]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[598]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[599]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[59a]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[59b]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[f5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[111]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[14d]"></a>AES_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[114]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[115]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[140]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[141]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[14b]"></a>CAN3_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[14c]"></a>CAN3_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[13c]"></a>DFSDM1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[13d]"></a>DFSDM1_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[15b]"></a>DFSDM2_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[15c]"></a>DFSDM2_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[15d]"></a>DFSDM2_FLT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[15e]"></a>DFSDM2_FLT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[10a]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[10b]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[10c]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[10d]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[10e]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[10f]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[110]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[12e]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[137]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[138]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[139]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[13b]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[143]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[144]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[145]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[105]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[127]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[106]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[107]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[108]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[109]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[116]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[103]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[159]"></a>FMPI2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[158]"></a>FMPI2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[14f]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[12f]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[11f]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[11e]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[121]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[120]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[148]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[147]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[15a]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[129]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[100]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[157]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[104]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[14e]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[128]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[102]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[154]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[122]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[123]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[132]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[152]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[153]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[101]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[117]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[11a]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[119]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[118]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[11b]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[11c]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[11d]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[131]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[135]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[136]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[12a]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[12d]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[12c]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[12b]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[156]"></a>UART10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[155]"></a>UART9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[ff]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[346]"></a>OS_CPU_SR_Save</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_IRQHandler
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_IRQHandler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_IRQHandler
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickHandler
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN3_TX_IRQHandler
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN3_RX0_IRQHandler
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_TX_IRQHandler
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_RX0_IRQHandler
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_TX_IRQHandler
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX0_IRQHandler
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveMsgHook
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_MsgDeal
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTWrite
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigTimeInit
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigInit
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxISR
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PushOneByte
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PopOneByte
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MPLSReset
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskIdle
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQFlush
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexCreate
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemPut
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemGet
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemCreate
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventNameSet
</UL>

<P><STRONG><a name="[348]"></a>OS_CPU_SR_Restore</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_IRQHandler
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_IRQHandler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_IRQHandler
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickHandler
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN3_TX_IRQHandler
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN3_RX0_IRQHandler
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_TX_IRQHandler
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_RX0_IRQHandler
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_TX_IRQHandler
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX0_IRQHandler
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveMsgHook
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_MsgDeal
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTWrite
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigTimeInit
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigInit
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxISR
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PushOneByte
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PopOneByte
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MPLSReset
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskIdle
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQFlush
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexCreate
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemPut
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemGet
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemCreate
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventNameSet
</UL>

<P><STRONG><a name="[49d]"></a>OSStartHighRdy</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
</UL>

<P><STRONG><a name="[4be]"></a>OSCtxSw</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[48e]"></a>OSIntCtxSw</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>

<P><STRONG><a name="[fd]"></a>OS_CPU_PendSVHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[222]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculationBill
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[224]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[59c]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[278]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_MsgDeal
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowCopy
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayGunQRCode
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_ProNumDispose
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_DevnumDispose
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ParaInit
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display66GunQRCode
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_Recode
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRecode_Dispose
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAnalysis
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_WriterBlock
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AuthKey
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculationRate
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowSet1
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardMsg
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectUpNChargeRecode
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectNextNChargeRecode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBRMB
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBRMA
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBCPB
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBCPA
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveBMSFrameB
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveBMSFrameA
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_VinWhiteListDispose
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendChargeInfoB
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendChargeInfoA
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCarInfoB
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCarInfoA
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvSTCmd
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvPricB47
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvPricB2
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvCardVinStartB11
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvCardB9
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvCardB7
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvB21VINCardRes
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvB19VINWL
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvB17CardWL
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvB16OFFLineRco
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendDevStateB
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendDevStateA
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66FreamSend
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendRegister
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendHear
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvStartCharge
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvSetInfo
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvRegisterAck
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvRecordAck
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvRateSet
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvRateFWSet
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvCardStart
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendQuerySetAck
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPOffLineBill
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPFSOffLineBill
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendVinInfo
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendQueryRateAck
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendVinWLAck
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendVinCardResAck
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCardWLAck
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendStopAck
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendStartAck
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendCardInfo
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendBill
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvFrameDispose
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendStartAck
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunBBSD
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendCardInfo
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBillData
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBill
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBCStartAck
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvFrameDispose
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreYKCBill
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHYBill
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPBill
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre66Bill
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendUpdataAck
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendStopAck
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendStartAck
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateB
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateA
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendCardInfo
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendBill
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvFrameDispose
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendVinInfo
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendTimeSharBill
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStopAck
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStartAck
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCardVinStart
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCardInfo
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendBill
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvFrameDispose
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetHYBatchNum
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAPBatchNum
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get66BatchNum
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeInfo
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPresetValue
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvUpdate
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvTime
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvStart
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvQRcode
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvPricSet
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvPricAck
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvCard
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvBalance
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_BCRecvStart
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_BCRecvCard
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYFreamSend
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendRegister
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendHear
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvVin
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvUpdata
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvStopCharge
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvStartCharge
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvRegisterAck
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvRecordAck
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvRateSet
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvCardStart
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTAFlashWriter
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTPDownloadDispose
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_ReadData_Ack
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ReRecv1Cmd_Ack
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ReRecv0Cmd_Ack
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunBCmd23
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunACmd23
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunBHand
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunBConf
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunAHand
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunAConf
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBSMGunBCmd25
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBSMGunACmd25
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>

<P><STRONG><a name="[33d]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CANRx_IRQHandler
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFormation
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigTimeInit
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigInit
</UL>

<P><STRONG><a name="[59d]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[226]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCEMState
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_VinWhiteListDispose
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCarInfoB
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCarInfoA
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvB21VINCardRes
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_CardWhiteListDispose
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[59e]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[59f]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[225]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ParaInit
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_Init
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartBillingInit
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MeterDataAnalyse
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingInit
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent10
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_FrameContextClear
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendChargeInfoB
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCarInfoB
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCarInfoA
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendDevStateB
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendDevStateA
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendHear
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendQuerySetAck
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBalanceAck
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPOffLineBill
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPFSOffLineBill
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendVinInfo
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendStartAck
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendCardInfo
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendBill
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendStartAck
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunBBSD
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendCardInfo
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBill
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBCStartAck
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600Reset
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreYKCBill
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPBill
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre66Bill
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateB
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendCardInfo
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendVinInfo
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendTimeSharBill
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStopAck
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStartAck
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCardVinStart
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCardInfo
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendBill
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParaInit
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ElectronicLockLockedGunB
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvPricSet
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvUpdata
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunBCmd23
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunACmd23
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunBHand
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunBConf
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunAConf
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBSMGunBCmd25
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBSMGunACmd25
</UL>

<P><STRONG><a name="[274]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GRecv
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_task_core
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_DataFilter
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowTime
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_HardwareInit
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayGunQRCode
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ParaInit
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display66GunQRCode
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_Recode
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_Init
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAnalysis
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_HardwareInit
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485MetterInit
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingInit
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitConnectBMSBCAN
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitConnectBMSACAN
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendDevStateB
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendDevState
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendSetPricB47Ack
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendSetPricB2Ack
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendChargeInfoB
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendChargeInfoA
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCarInfoB
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCarInfoA
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvPricB47
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvPricB2
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendRegister
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendBill
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunBCmd13
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunACmd13
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPOffLineBill
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPFSOffLineBill
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendVinWLAck
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendVinCardResAck
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCardWLAck
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSRecv_HardwareInit
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendStopAck
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendCardInfo
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendPriModel
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunABSD
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPBill
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateA
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendCardInfo
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendVinInfo
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendTimeSharBill
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStopAck
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStartAck
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendSetTimeAck
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCardVinStart
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCardInfo
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendBill
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ElectronicLockLockedGunA
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvPricAck
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvRateSet
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_HTTPPAR
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CFTPSLOGIN
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CFTPSGET
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendRegisterCmd1
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendPriodSJDataGunBCmd13
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendPriodSJDataGunACmd13
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunAHand
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCAN_Module
</UL>

<P><STRONG><a name="[5a0]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[227]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[428]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTPDownloadDispose
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_ReadData_Ack
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_HttpStart_Ack
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_HttpConect_Ack
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_FTPStart_Ack
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_SendAck1Cmd_Ack
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_SendAck0Cmd_Ack
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ReRecv1Cmd_Ack
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ReRecv0Cmd_Ack
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ConnectServer1_Ack
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ConnectServer1Cmd_Ack
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ConnectServer0_Ack
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ConnectServer0Cmd_Ack
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_CSQ_Ack
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_CIMI_Ack
</UL>

<P><STRONG><a name="[3f9]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayGunQRCode
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display66GunQRCode
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CIPRXGET
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600_RecvDesposeCmd
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_READ
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_HTTPPAR
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CIPCLOSE
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CFTPSRead
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CFTPSLOGIN
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CFTPSGET
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_ConnectServer
</UL>

<P><STRONG><a name="[429]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTPDownloadDispose
</UL>

<P><STRONG><a name="[44d]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendRegister
</UL>

<P><STRONG><a name="[38f]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardState2
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardState1
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardState
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardStartMoney
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardMoney1
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardMoney
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardID
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardNum_Judge
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600_RecvDesposeCmd
</UL>

<P><STRONG><a name="[4f3]"></a>strtok</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, strtok.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strtok
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_HttpGet_Ack
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ReRecv1Cmd_Ack
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ReRecv0Cmd_Ack
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ConnectServer1_Ack
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ConnectServer1Cmd_Ack
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ConnectServer0_Ack
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ConnectServer0Cmd_Ack
</UL>

<P><STRONG><a name="[228]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTPDownloadDispose
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_ReadData_Ack
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_HttpGet_Ack
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_CFTPSGET_Ack
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ReRecv1Cmd_Ack
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ReRecv0Cmd_Ack
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ConnectServer1_Ack
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ConnectServer1Cmd_Ack
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ConnectServer0_Ack
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ConnectServer0Cmd_Ack
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_CSQ_Ack
</UL>

<P><STRONG><a name="[22b]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[22f]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
</UL>

<P><STRONG><a name="[230]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[231]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSet_Group_Cur
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[232]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSet_Group_Cur
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[233]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
</UL>

<P><STRONG><a name="[234]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSet_Group_Cur
</UL>

<P><STRONG><a name="[4fd]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSet_Group_Cur
</UL>

<P><STRONG><a name="[584]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[5a1]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[587]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[223]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[5a2]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[22c]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[5a3]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[22a]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[5a4]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[22e]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[22d]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[237]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[221]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[5a5]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[235]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[236]"></a>_strtoul</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[239]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[5a6]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[5a7]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[335]"></a>ADC_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ADCInit
</UL>

<P><STRONG><a name="[331]"></a>ADC_CommonInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_adc.o(i.ADC_CommonInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_CommonInit
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ADCInit
</UL>

<P><STRONG><a name="[336]"></a>ADC_DMACmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ADCInit
</UL>

<P><STRONG><a name="[334]"></a>ADC_DMARequestAfterLastTransferCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_DMARequestAfterLastTransferCmd))
<BR><BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ADCInit
</UL>

<P><STRONG><a name="[23a]"></a>ADC_DeInit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f4xx_adc.o(i.ADC_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ADCInit
</UL>

<P><STRONG><a name="[332]"></a>ADC_Init</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, stm32f4xx_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ADCInit
</UL>

<P><STRONG><a name="[333]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, stm32f4xx_adc.o(i.ADC_RegularChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ADCInit
</UL>

<P><STRONG><a name="[337]"></a>ADC_SoftwareStartConv</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_SoftwareStartConv))
<BR><BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ADCInit
</UL>

<P><STRONG><a name="[330]"></a>ADC_StructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ADCInit
</UL>

<P><STRONG><a name="[1d0]"></a>APP_BCPFitCheckGunA</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, controlmain.o(i.APP_BCPFitCheckGunA))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = APP_BCPFitCheckGunA
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSBCPFitCheck
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSBCPFitCheck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[1de]"></a>APP_BCPFitCheckGunB</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, controlmain.o(i.APP_BCPFitCheckGunB))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = APP_BCPFitCheckGunB
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSBCPFitCheck
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSBCPFitCheck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[23e]"></a>APP_BatChargeAdjust</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, controlmain.o(i.APP_BatChargeAdjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = APP_BatChargeAdjust &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
</UL>

<P><STRONG><a name="[1d4]"></a>APP_ChargeBSDGunA</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, controlmain.o(i.APP_ChargeBSDGunA))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_ChargeBSDGunA &rArr; SetChargeInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[1e2]"></a>APP_ChargeBSDGunB</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, controlmain.o(i.APP_ChargeBSDGunB))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_ChargeBSDGunB &rArr; SetChargeInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[243]"></a>APP_ChargeOffLineFlashOperation</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, flashdatadeal.o(i.APP_ChargeOffLineFlashOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = APP_ChargeOffLineFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RWNetOFFLineRecode
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RWNetFSOFFLineRecode
</UL>

<P><STRONG><a name="[1d3]"></a>APP_ChargePauseGunA</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, controlmain.o(i.APP_ChargePauseGunA))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = APP_ChargePauseGunA &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargePauseState
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargePauseState
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[1e1]"></a>APP_ChargePauseGunB</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, controlmain.o(i.APP_ChargePauseGunB))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = APP_ChargePauseGunB &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargePauseState
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargePauseState
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[1d1]"></a>APP_ChargeReadyCheckGunA</STRONG> (Thumb, 810 bytes, Stack size 72 bytes, controlmain.o(i.APP_ChargeReadyCheckGunA))
<BR><BR>[Stack]<UL><LI>Max Depth = 148 + Unknown Stack Size
<LI>Call Chain = APP_ChargeReadyCheckGunA &rArr; GetRS_BatReverse &rArr; BSP_DataFilter &rArr; BubbleSort
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseK1K2
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStartFailType
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcuRemoteSignalState
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargeReady
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrDeal
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGBType
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_ENTER
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRS_BatReverse
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRM_DCOutVolt
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPowerDCState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeReady
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPresetValue
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[1df]"></a>APP_ChargeReadyCheckGunB</STRONG> (Thumb, 802 bytes, Stack size 72 bytes, controlmain.o(i.APP_ChargeReadyCheckGunB))
<BR><BR>[Stack]<UL><LI>Max Depth = 148 + Unknown Stack Size
<LI>Call Chain = APP_ChargeReadyCheckGunB &rArr; GetRS_BatReverse &rArr; BSP_DataFilter &rArr; BubbleSort
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseK1K2
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStartFailType
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcuRemoteSignalState
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargeReady
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrDeal
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGBType
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_ENTER
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRS_BatReverse
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRM_DCOutVolt
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPowerDCState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeReady
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPresetValue
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[255]"></a>APP_ChargeRecodeFlashOperation</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, flashdatadeal.o(i.APP_ChargeRecodeFlashOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = APP_ChargeRecodeFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RWChargeRecode
</UL>

<P><STRONG><a name="[1d2]"></a>APP_ChargeRunningGunA</STRONG> (Thumb, 696 bytes, Stack size 88 bytes, controlmain.o(i.APP_ChargeRunningGunA))
<BR><BR>[Stack]<UL><LI>Max Depth = 164 + Unknown Stack Size
<LI>Call Chain = APP_ChargeRunningGunA &rArr; APP_BatChargeAdjust &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenRunLed
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenK1K2
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCGetTime
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeRunningState
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispEvent
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStartFailType
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcuRemoteSignalState
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStartCharge
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSConnectStep
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargeMode
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGBType
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPowerDCState
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStopCharge
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargeRunningState
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPresetValue
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_BatChargeAdjust
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[1e0]"></a>APP_ChargeRunningGunB</STRONG> (Thumb, 752 bytes, Stack size 80 bytes, controlmain.o(i.APP_ChargeRunningGunB))
<BR><BR>[Stack]<UL><LI>Max Depth = 156 + Unknown Stack Size
<LI>Call Chain = APP_ChargeRunningGunB &rArr; APP_BatChargeAdjust &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenRunLed
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenK1K2
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCGetTime
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeRunningState
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispEvent
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStartFailType
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcuRemoteSignalState
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStartCharge
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSConnectStep
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargeMode
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGBType
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPowerDCState
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStopCharge
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargeRunningState
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPresetValue
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_BatChargeAdjust
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[262]"></a>APP_CheckPowerModule</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, controlmain.o(i.APP_CheckPowerModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = APP_CheckPowerModule &rArr; SetBcuRemoteSignalState &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcuRemoteSignalState
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
</UL>

<P><STRONG><a name="[2ef]"></a>APP_ClearRecodeInfo</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, displaymain.o(i.APP_ClearRecodeInfo))
<BR><BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectUpNChargeRecode
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent81
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent80
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent79
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent78
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent77
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent76
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent75
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent74
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent73
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent7
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent3
</UL>

<P><STRONG><a name="[265]"></a>APP_CloseModule</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, modulemanage.o(i.APP_CloseModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = APP_CloseModule &rArr; APP_SHCloseModule &rArr; SHOpenCloseOneModule &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_YKRCloseModule
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_YFYCloseModule
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SHCloseModule
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GWCloseModule
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPCUControl
</UL>

<P><STRONG><a name="[26a]"></a>APP_ControlHardwareInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, controlmain.o(i.APP_ControlHardwareInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_ControlHardwareInit &rArr; BSP_CloseLOCK &rArr; BSP_IOClose
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseK1K2
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseBMSPower
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskControlGunA
</UL>

<P><STRONG><a name="[26d]"></a>APP_ControlInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, controlmain.o(i.APP_ControlInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = APP_ControlInit &rArr; ControlParaInit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParaInit
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskControlGunA
</UL>

<P><STRONG><a name="[559]"></a>APP_DealReceiveDataA</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, connectbms.o(i.APP_DealReceiveDataA))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_DealReceiveDataA
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitConnectBMSmessageA
</UL>

<P><STRONG><a name="[55a]"></a>APP_DealReceiveDataB</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, connectbms.o(i.APP_DealReceiveDataB))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_DealReceiveDataB
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitConnectBMSmessageB
</UL>

<P><STRONG><a name="[270]"></a>APP_DisplayRecvDataAnalyze</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, displaymain.o(i.APP_DisplayRecvDataAnalyze))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = APP_DisplayRecvDataAnalyze &rArr; DealWithVari
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DealWithVari
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DealWithKey
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[1cd]"></a>APP_ElectronicLockLockedGunA</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, controlmain.o(i.APP_ElectronicLockLockedGunA))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = APP_ElectronicLockLockedGunA &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[1db]"></a>APP_ElectronicLockLockedGunB</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, controlmain.o(i.APP_ElectronicLockLockedGunB))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = APP_ElectronicLockLockedGunB &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[1ce]"></a>APP_ElectronicLockUnlockedGunA</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, controlmain.o(i.APP_ElectronicLockUnlockedGunA))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = APP_ElectronicLockUnlockedGunA &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseBMSPower
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[1dc]"></a>APP_ElectronicLockUnlockedGunB</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, controlmain.o(i.APP_ElectronicLockUnlockedGunB))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = APP_ElectronicLockUnlockedGunB &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseBMSPower
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[275]"></a>APP_FlashOperation</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, flashdatadeal.o(i.APP_FlashOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flashbuf
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchParaManagementTable
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProtocolFlashOperation
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriterFmBill
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFmBill
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetNetOFFLineRecodeNum
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetNetOFFLineRecodeNum
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu53_acinputupvalueDispose
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu53_acinputdownvalueDispose
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu53_MeterAddBDispose
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu53_MeterAddADispose
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_UseGunDispose
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_SOCDispose
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_ProNumDispose
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_OutDcVolDispose
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_OutDcCurDispose
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_ModuleNumDispose
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_MaxOutCurDispose
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_MacMinVolDispose
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_MacMaxVolDispose
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_DevnumDispose
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu48_PrcDispose
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_PortSert
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_NetNumSet
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_IP4Sert
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_IP3Sert
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_IP2Sert
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_IP1Sert
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ParaInit
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRecode_Dispose
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetCARDWL
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_PricSet
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent57
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent53
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent10
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_VinWhiteListDispose
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvPricB47
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvPricB2
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvB21VINCardRes
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_CardWhiteListDispose
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvPricSet
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvPricAck
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvRateSet
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Analyse_Protocol_Frame
</UL>

<P><STRONG><a name="[269]"></a>APP_GWCloseModule</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gwmoduletxrx.o(i.APP_GWCloseModule))
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_CloseModule
</UL>

<P><STRONG><a name="[27d]"></a>APP_GWPowerModulePeriodSend</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, gwmoduletxrx.o(i.APP_GWPowerModulePeriodSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = APP_GWPowerModulePeriodSend &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModulePeriodSend
</UL>

<P><STRONG><a name="[27e]"></a>APP_GWPowerModuleStop</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gwmoduletxrx.o(i.APP_GWPowerModuleStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = APP_GWPowerModuleStop &rArr; APP_CloseGun &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Close_Group
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_CloseGun
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModuleStop
</UL>

<P><STRONG><a name="[2cd]"></a>APP_Get4GMainEvent</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 4gmain.o(i.APP_Get4GMainEvent))
<BR><BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_State
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardAnalyze
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvSTCmd
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvCardVinStartB11
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvStopCharge
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvStartCharge
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvStop
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvStart
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvQRcode
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvCard
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_BCRecvStart
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_BCRecvCard
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvVin
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvStopCharge
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvStartCharge
</UL>

<P><STRONG><a name="[280]"></a>APP_Get66BatchNum</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, _66frame.o(i.APP_Get66BatchNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APP_Get66BatchNum
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetBatchNum
</UL>

<P><STRONG><a name="[293]"></a>APP_Get66NetMoney</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, _66frame.o(i.APP_Get66NetMoney))
<BR><BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetNetMoney
</UL>

<P><STRONG><a name="[571]"></a>APP_Get66StartType</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, _66frame.o(i.APP_Get66StartType))
<BR><BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_GetStartType
</UL>

<P><STRONG><a name="[281]"></a>APP_GetAPBatchNum</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, apframe.o(i.APP_GetAPBatchNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APP_GetAPBatchNum
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetBatchNum
</UL>

<P><STRONG><a name="[294]"></a>APP_GetAPQGNetMoney</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apframe.o(i.APP_GetAPQGNetMoney))
<BR><BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetNetMoney
</UL>

<P><STRONG><a name="[56f]"></a>APP_GetAPStartType</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, apframe.o(i.APP_GetAPStartType))
<BR><BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_GetStartType
</UL>

<P><STRONG><a name="[37c]"></a>APP_GetAPriceInfo</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, displaymain.o(i.APP_GetAPriceInfo))
<BR><BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculationRate
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculationBill
</UL>

<P><STRONG><a name="[298]"></a>APP_GetAppRegisterState</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, modulesim7600.o(i.APP_GetAppRegisterState))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetNetState
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardAnalyze
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendRegister
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendHear
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendDevStateB
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendDevState
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStartApp
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendRegister
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendChargeInfoB
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendChargeInfoA
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCarInfoB
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCarInfoA
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendDevStateB
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendDevStateA
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendRegister
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendHear
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendStartCharge
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendBill
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunBCmd13
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunACmd13
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendVinInfo
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendCardInfo
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunBBSD
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunABSD
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendCardInfo
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateB
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateA
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendCardInfo
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendRegister
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendHear
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunBCmd23
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunACmd23
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendRegisterCmd1
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendPriodSJDataGunBCmd13
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendPriodSJDataGunACmd13
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendHearGunBCmd3
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendHearGunACmd3
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunBHand
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunBConf
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunAHand
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunAConf
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBSMGunBCmd25
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBSMGunACmd25
</UL>

<P><STRONG><a name="[29c]"></a>APP_GetBMSBHM</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, connectbms.o(i.APP_GetBMSBHM))
<BR><BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
</UL>

<P><STRONG><a name="[37d]"></a>APP_GetBPriceInfo</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, displaymain.o(i.APP_GetBPriceInfo))
<BR><BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculationRate
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculationBill
</UL>

<P><STRONG><a name="[282]"></a>APP_GetBatchNum</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, 4gmain.o(i.APP_GetBatchNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APP_GetBatchNum &rArr; APP_GetHYBatchNum
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetYKCBatchNum
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetHYBatchNum
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAPBatchNum
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get66BatchNum
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRecode_Dispose
</UL>

<P><STRONG><a name="[510]"></a>APP_GetBillInfo</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, displaymain.o(i.APP_GetBillInfo))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[286]"></a>APP_GetCMLContext</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, controlmain.o(i.APP_GetCMLContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = APP_GetCMLContext
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPresetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CML_SendMaxVolandCurB
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CML_SendMaxVolandCurA
</UL>

<P><STRONG><a name="[287]"></a>APP_GetCSDContext</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, controlmain.o(i.APP_GetCSDContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_GetCSDContext
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGBType
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSD_DeviceChargeEndStatisticsB
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSD_DeviceChargeEndStatisticsA
</UL>

<P><STRONG><a name="[407]"></a>APP_GetCSQNum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modulesim7600.o(i.APP_GetCSQNum))
<BR><BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_CSQState
</UL>

<P><STRONG><a name="[289]"></a>APP_GetCSSContext</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, controlmain.o(i.APP_GetCSSContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_GetCSSContext
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargePauseState
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGBType
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_DeviceChargeStateB
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_DeviceChargeStateA
</UL>

<P><STRONG><a name="[377]"></a>APP_GetCSTContext</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, controlmain.o(i.APP_GetCSTContext))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CST_DeviceEndChargeB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CST_DeviceEndChargeA
</UL>

<P><STRONG><a name="[43a]"></a>APP_GetCarInfo</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, displaymain.o(i.APP_GetCarInfo))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu39
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu38
</UL>

<P><STRONG><a name="[507]"></a>APP_GetCardEvent</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, card_cpu.o(i.APP_GetCardEvent))
<BR><BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardMsg
</UL>

<P><STRONG><a name="[438]"></a>APP_GetChargeRecodeInfo</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, displaymain.o(i.APP_GetChargeRecodeInfo))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu32
</UL>

<P><STRONG><a name="[439]"></a>APP_GetChargeingInfo</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, displaymain.o(i.APP_GetChargeingInfo))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu51
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu50
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu37
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu36
</UL>

<P><STRONG><a name="[30b]"></a>APP_GetDevNum</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, displaymain.o(i.APP_GetDevNum))
<BR><BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Period_PowerRegulate
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendRegister
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendHear
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendDevStateB
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendDevState
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendSetPricB47Ack
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendSetPricB2Ack
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendRegister
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendChargeInfoB
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendChargeInfoA
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCarInfoB
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCarInfoA
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendDevStateB
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendDevStateA
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendRegister
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendHear
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendQuerySetAck
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendStartCharge
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendBill
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPOffLineBill
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPFSOffLineBill
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendVinInfo
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendStopAck
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendStartAck
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendCardInfo
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendBill
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendStartAck
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendCardInfo
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBCStartAck
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHYBill
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPBill
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre66Bill
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendUpdataAck
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendStopAck
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendStartAck
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateB
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateA
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendCardInfo
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendBill
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendVinInfo
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendTimeSharBill
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStopAck
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStartAck
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCardVinStart
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCardInfo
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendBill
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendRegister
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendHear
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendRegisterCmd1
</UL>

<P><STRONG><a name="[304]"></a>APP_GetDispControl</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, displaymain.o(i.APP_GetDispControl))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCharge_StopCard
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu33
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu32
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu22
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent81
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent80
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent79
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent78
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent77
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent76
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent75
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent74
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent73
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent59
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent58
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent56
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent41
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent40
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent39
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent38
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent37
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent36
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent33
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent32
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent3
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent22
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendDevStateB
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendDevState
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendChargeInfoB
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendChargeInfoA
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCarInfoB
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCarInfoA
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvCardB9
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvCardB7
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendDevStateB
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendDevStateA
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvRegisterAck
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendBill
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunBCmd13
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunACmd13
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPOffLineBill
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendStartAck
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendStartAck
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBCStartAck
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPBill
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendStartAck
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateB
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateA
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStopAck
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStartAck
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendBill
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvPricSet
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvPricAck
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendHear
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvUpdata
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvRegisterAck
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvHearAck
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunBCmd23
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunACmd23
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendPriodSJDataGunBCmd13
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendPriodSJDataGunACmd13
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBSMGunBCmd25
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBSMGunACmd25
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvRegisterAck
</UL>

<P><STRONG><a name="[256]"></a>APP_GetDispEvent</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, displaymain.o(i.APP_GetDispEvent))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispMsg_Send
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MeterToDispMsg_StopCharge
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSSelfCheck
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunB
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelfCheckFailGunB
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelfCheckFailGunA
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
</UL>

<P><STRONG><a name="[459]"></a>APP_GetDispUartStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, displaymain.o(i.APP_GetDispUartStatus))
<BR><BR>[Called By]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendToUart
</UL>

<P><STRONG><a name="[40b]"></a>APP_GetErrState</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, displaymain.o(i.APP_GetErrState))
<BR><BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_State
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent3
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_BCRecvStart
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendHearGunBCmd3
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendHearGunACmd3
</UL>

<P><STRONG><a name="[251]"></a>APP_GetGBType</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, connectbms.o(i.APP_GetGBType))
<BR><BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetCSSContext
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetCSDContext
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CST_DeviceEndChargeB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CST_DeviceEndChargeA
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CML_SendMaxVolandCurB
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CML_SendMaxVolandCurA
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_DeviceChargeStateB
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_DeviceChargeStateA
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveBMSFrameB
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveBMSFrameA
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepB
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepA
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrSwitch
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunB
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunA
</UL>

<P><STRONG><a name="[290]"></a>APP_GetGWModuleInfo</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gwmoduletxrx.o(i.APP_GetGWModuleInfo))
<BR><BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetModuleInfo
</UL>

<P><STRONG><a name="[310]"></a>APP_GetGunNum</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, displaymain.o(i.APP_GetGunNum))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendChargeInfoB
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCarInfoB
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendDevStateB
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendDevStateA
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendRegister
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateB
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateA
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendRegister
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendRegisterCmd1
</UL>

<P><STRONG><a name="[283]"></a>APP_GetHYBatchNum</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, hyframe.o(i.APP_GetHYBatchNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APP_GetHYBatchNum
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetBatchNum
</UL>

<P><STRONG><a name="[292]"></a>APP_GetHYNetMoney</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hyframe.o(i.APP_GetHYNetMoney))
<BR><BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetNetMoney
</UL>

<P><STRONG><a name="[570]"></a>APP_GetHYStartType</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hyframe.o(i.APP_GetHYStartType))
<BR><BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_GetStartType
</UL>

<P><STRONG><a name="[28a]"></a>APP_GetMeterAddr</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, displaymain.o(i.APP_GetMeterAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_GetMeterAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteHexToBcd
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMeterStk
</UL>

<P><STRONG><a name="[30c]"></a>APP_GetMeterPowerInfo</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rs485meter.o(i.APP_GetMeterPowerInfo))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendDevStateB
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendDevStateA
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendBill
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPOffLineBill
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPFSOffLineBill
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendBill
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBill
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreYKCBill
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHYBill
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPBill
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre66Bill
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateB
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateA
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendBill
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendTimeSharBill
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendBill
</UL>

<P><STRONG><a name="[2e4]"></a>APP_GetModuleConnectState</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, modulesim7600.o(i.APP_GetModuleConnectState))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GRecv
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Connect_4G
</UL>

<P><STRONG><a name="[28c]"></a>APP_GetModuleInfo</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, modulemanage.o(i.APP_GetModuleInfo))
<BR><BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetYKRModuleInfo
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetYFYModuleInfo
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSHModuleInfo
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGWModuleInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_ModuleInfo
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetModuleReturnACVol
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PeriodControlDataUpdata
</UL>

<P><STRONG><a name="[2e8]"></a>APP_GetModuleUserRange</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, controlapp.o(i.APP_GetModuleUserRange))
<BR><BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_SetGroupVI
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHOpenCloseGroupModule
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SHPowerModuleStop
</UL>

<P><STRONG><a name="[291]"></a>APP_GetNetMoney</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, 4gmain.o(i.APP_GetNetMoney))
<BR><BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetYKCNetMoney
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetHYNetMoney
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAPQGNetMoney
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get66NetMoney
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_ChargeingDate
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRecode_Dispose
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculationBill
</UL>

<P><STRONG><a name="[296]"></a>APP_GetNetOFFLineRecodeNum</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, displaymain.o(i.APP_GetNetOFFLineRecodeNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = APP_GetNetOFFLineRecodeNum &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ParaInit
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReSendOffLineBill
</UL>

<P><STRONG><a name="[297]"></a>APP_GetNetState</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, 4gmain.o(i.APP_GetNetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APP_GetNetState
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
</UL>
<BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_NetState
</UL>

<P><STRONG><a name="[432]"></a>APP_GetPcuControl</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, controlapp.o(i.APP_GetPcuControl))
<BR><BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetModuleReturnACVol
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskModuleTx
</UL>

<P><STRONG><a name="[ee]"></a>APP_GetPowerModuleAC</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, yfymoduletxrx.o(i.APP_GetPowerModuleAC))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = APP_GetPowerModuleAC &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yfymoduletxrx.o(.data)
</UL>
<P><STRONG><a name="[21e]"></a>APP_GetPowerModuleACAck</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, yfymoduletxrx.o(i.APP_GetPowerModuleACAck))
<BR>[Address Reference Count : 1]<UL><LI> yfymoduletxrx.o(.constdata)
</UL>
<P><STRONG><a name="[ed]"></a>APP_GetPowerModuleState</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, yfymoduletxrx.o(i.APP_GetPowerModuleState))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = APP_GetPowerModuleState &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yfymoduletxrx.o(.data)
</UL>
<P><STRONG><a name="[21d]"></a>APP_GetPowerModuleStateAck</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, yfymoduletxrx.o(i.APP_GetPowerModuleStateAck))
<BR>[Address Reference Count : 1]<UL><LI> yfymoduletxrx.o(.constdata)
</UL>
<P><STRONG><a name="[ec]"></a>APP_GetPowerModuleVI</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, yfymoduletxrx.o(i.APP_GetPowerModuleVI))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = APP_GetPowerModuleVI &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yfymoduletxrx.o(.data)
</UL>
<P><STRONG><a name="[21c]"></a>APP_GetPowerModuleVIAck</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, yfymoduletxrx.o(i.APP_GetPowerModuleVIAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = APP_GetPowerModuleVIAck &rArr; Set_Group_Fream &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Group_Fream
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenCloseOneModule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yfymoduletxrx.o(.constdata)
</UL>
<P><STRONG><a name="[248]"></a>APP_GetPresetValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, controlmain.o(i.APP_GetPresetValue))
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetCMLContext
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunB
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunA
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
</UL>

<P><STRONG><a name="[508]"></a>APP_GetPricEvent</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, charging_interface.o(i.APP_GetPricEvent))
<BR><BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPricMsg
</UL>

<P><STRONG><a name="[31e]"></a>APP_GetPriceInfo</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, displaymain.o(i.APP_GetPriceInfo))
<BR><BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculationRate
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculationBill
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPOffLineBill
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPFSOffLineBill
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendTimeSharBill
</UL>

<P><STRONG><a name="[420]"></a>APP_GetRecodeCurNum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, displaymain.o(i.APP_GetRecodeCurNum))
<BR><BR>[Called By]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_LocalUnLock
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent81
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent80
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent79
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent78
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent77
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent76
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent75
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent74
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent73
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent3
</UL>

<P><STRONG><a name="[526]"></a>APP_GetResendBillState</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, 4gmain.o(i.APP_GetResendBillState))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[28d]"></a>APP_GetSHModuleInfo</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, shmoduletxrx.o(i.APP_GetSHModuleInfo))
<BR><BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetModuleInfo
</UL>

<P><STRONG><a name="[464]"></a>APP_GetSIM7600Mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modulesim7600.o(i.APP_GetSIM7600Mode))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GRecv
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
</UL>

<P><STRONG><a name="[2e3]"></a>APP_GetSIM7600Status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modulesim7600.o(i.APP_GetSIM7600Status))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Connect_4G
</UL>

<P><STRONG><a name="[302]"></a>APP_GetSendTaskEvent</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 4gsend.o(i.APP_GetSendTaskEvent))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GRecv
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvTime
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvSTCmd
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvPricB47
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvPricB2
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvCardVinStartB11
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvCardB9
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvCardB7
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvB21VINCardRes
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvB19VINWL
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvB17CardWL
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvB16OFFLineRco
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvStopCharge
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvStartCharge
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvSetInfo
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvRateSet
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvRateFWSet
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvQueryRate
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvQueryBill
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvDevInfoAck
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvUpdate
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvTime
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvStop
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvStart
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvReadData
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvQRcode
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvPricSet
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvBalance
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_BCRecvStart
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvStopCharge
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvStartCharge
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvRateSet
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvQueryRate
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvQueryBill
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvDevInfoAck
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvRegisterAck
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvPrimodelAck
</UL>

<P><STRONG><a name="[4c2]"></a>APP_GetStartNetState</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, apframe.o(i.APP_GetStartNetState))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Period_WriterFmBill
</UL>

<P><STRONG><a name="[30d]"></a>APP_GetStopChargeReason</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, displaymain.o(i.APP_GetStopChargeReason))
<BR><BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPOffLineBill
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendStartAck
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendBill
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBill
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreYKCBill
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHYBill
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPBill
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre66Bill
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendBill
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendBill
</UL>

<P><STRONG><a name="[409]"></a>APP_GetWorkState</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, displaymain.o(i.APP_GetWorkState))
<BR><BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Period_WriterFmBill
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu51_HANDBDispose
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu50_HANDADispose
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_SOCThreshold
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_ChargeingDate
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_CardDate
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent81
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent80
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent79
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent78
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent77
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent76
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent75
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent74
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent73
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent3
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHYBill
</UL>

<P><STRONG><a name="[28e]"></a>APP_GetYFYModuleInfo</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, yfymoduletxrx.o(i.APP_GetYFYModuleInfo))
<BR><BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetModuleInfo
</UL>

<P><STRONG><a name="[284]"></a>APP_GetYKCBatchNum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ykcframe.o(i.APP_GetYKCBatchNum))
<BR><BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetBatchNum
</UL>

<P><STRONG><a name="[295]"></a>APP_GetYKCNetMoney</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ykcframe.o(i.APP_GetYKCNetMoney))
<BR><BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetNetMoney
</UL>

<P><STRONG><a name="[572]"></a>APP_GetYKCStartType</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ykcframe.o(i.APP_GetYKCStartType))
<BR><BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_GetStartType
</UL>

<P><STRONG><a name="[28f]"></a>APP_GetYKRModuleInfo</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ykrmoduletxrx.o(i.APP_GetYKRModuleInfo))
<BR><BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetModuleInfo
</UL>

<P><STRONG><a name="[2e5]"></a>APP_Get_ERR_Branch</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, controlmain.o(i.APP_Get_ERR_Branch))
<BR><BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_TimeoutErrB
</UL>

<P><STRONG><a name="[1cf]"></a>APP_InsulationCheckGunA</STRONG> (Thumb, 1900 bytes, Stack size 128 bytes, controlmain.o(i.APP_InsulationCheckGunA))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = APP_InsulationCheckGunA &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenPG1
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenNG2
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenK1K2
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ClosePG1
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseNG2
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseK1K2
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStartFailType
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcuRemoteSignalState
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSInsulationCheck
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrDeal
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGBType
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetBMSBHM
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_ENTER
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRS_BatReverse
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRM_DCOutVolt
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJY_DCOutVolt
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPowerDCState
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPresetValue
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[1dd]"></a>APP_InsulationCheckGunB</STRONG> (Thumb, 1920 bytes, Stack size 128 bytes, controlmain.o(i.APP_InsulationCheckGunB))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = APP_InsulationCheckGunB &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenPG1
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenNG2
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenK1K2
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ClosePG1
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseNG2
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseK1K2
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStartFailType
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcuRemoteSignalState
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSInsulationCheck
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrDeal
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGBType
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetBMSBHM
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_ENTER
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRS_BatReverse
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRM_DCOutVolt
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJY_DCOutVolt
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPowerDCState
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPresetValue
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[2b8]"></a>APP_PeriodControlDataUpdata</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, controlapp.o(i.APP_PeriodControlDataUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = APP_PeriodControlDataUpdata &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetModuleInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_GunDataInit
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskModulePeriod
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YFYReduceModule
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YFYFristOpenGun
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YFYAddModule
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHReduceModule
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHFristOpenGun
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHAddModule
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_GWReduceModule
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_GWFristOpenGun
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_GWAddModule
</UL>

<P><STRONG><a name="[52f]"></a>APP_PowerModuleDataDeal</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, pcumain.o(i.APP_PowerModuleDataDeal))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APP_PowerModuleDataDeal
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPCUMain
</UL>

<P><STRONG><a name="[2c4]"></a>APP_PowerModuleStop</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, modulemanage.o(i.APP_PowerModuleStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = APP_PowerModuleStop &rArr; APP_SHPowerModuleStop &rArr; SHOpenCloseGroupModule &rArr; SHSendOpenCloseGroupModule &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_YKRPowerModuleStop
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_YFYPowerModuleStop
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SHPowerModuleStop
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GWPowerModuleStop
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_DemandChargeDispose
</UL>

<P><STRONG><a name="[2c8]"></a>APP_RWChargeRecode</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, displaymain.o(i.APP_RWChargeRecode))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = APP_RWChargeRecode &rArr; APP_ChargeRecodeFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRecodeFlashOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRecode_Dispose
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_LocalUnLock
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectUpNChargeRecode
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectNextNChargeRecode
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectCurChargeRecode
</UL>

<P><STRONG><a name="[2c9]"></a>APP_RWNetFSOFFLineRecode</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, displaymain.o(i.APP_RWNetFSOFFLineRecode))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = APP_RWNetFSOFFLineRecode &rArr; APP_ChargeOffLineFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeOffLineFlashOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReSendOffLineBill
</UL>

<P><STRONG><a name="[2ca]"></a>APP_RWNetOFFLineRecode</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, displaymain.o(i.APP_RWNetOFFLineRecode))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = APP_RWNetOFFLineRecode &rArr; APP_ChargeOffLineFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeOffLineFlashOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvB16OFFLineRco
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReSendOffLineBill
</UL>

<P><STRONG><a name="[f4]"></a>APP_ReadModeACVolAck</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, ykrmoduletxrx.o(i.APP_ReadModeACVolAck))
<BR>[Address Reference Count : 1]<UL><LI> ykrmoduletxrx.o(.data)
</UL>
<P><STRONG><a name="[f3]"></a>APP_ReadModeInfoAck</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, ykrmoduletxrx.o(i.APP_ReadModeInfoAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = APP_ReadModeInfoAck &rArr; OpenCloseModule_YKR &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenCloseModule_YKR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykrmoduletxrx.o(.data)
</UL>
<P><STRONG><a name="[1ad]"></a>APP_ReceiveEndChargeA</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, connectbms.o(i.APP_ReceiveEndChargeA))
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1ae]"></a>APP_ReceiveEndChargeB</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, connectbms.o(i.APP_ReceiveEndChargeB))
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[467]"></a>APP_RecvDataControl</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, 4grecv.o(i.APP_RecvDataControl))
<BR><BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_HTTPDownload
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_FTPDownload
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTAFlashWriter
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_ReadData_Ack
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_HttpGet_Ack
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_CFTPSGET_Ack
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ReRecv1Cmd_Ack
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ReRecv0Cmd_Ack
</UL>

<P><STRONG><a name="[266]"></a>APP_SHCloseModule</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, shmoduletxrx.o(i.APP_SHCloseModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = APP_SHCloseModule &rArr; SHOpenCloseOneModule &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHOpenCloseOneModule
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_CloseModule
</UL>

<P><STRONG><a name="[2be]"></a>APP_SHPowerModulePeriodSend</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, shmoduletxrx.o(i.APP_SHPowerModulePeriodSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = APP_SHPowerModulePeriodSend &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModulePeriodSend
</UL>

<P><STRONG><a name="[2c5]"></a>APP_SHPowerModuleStop</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, shmoduletxrx.o(i.APP_SHPowerModuleStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = APP_SHPowerModuleStop &rArr; SHOpenCloseGroupModule &rArr; SHSendOpenCloseGroupModule &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetModuleUserRange
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHOpenCloseGroupModule
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModuleStop
</UL>

<P><STRONG><a name="[2ea]"></a>APP_SelectCurChargeRecode</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, displaymain.o(i.APP_SelectCurChargeRecode))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = APP_SelectCurChargeRecode &rArr; APP_RWChargeRecode &rArr; APP_ChargeRecodeFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum16uVariable
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RWChargeRecode
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_Recode
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent81
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent80
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent79
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent78
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent77
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent76
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent75
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent74
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent73
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent3
</UL>

<P><STRONG><a name="[2ed]"></a>APP_SelectNextNChargeRecode</STRONG> (Thumb, 266 bytes, Stack size 40 bytes, displaymain.o(i.APP_SelectNextNChargeRecode))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = APP_SelectNextNChargeRecode &rArr; APP_RWChargeRecode &rArr; APP_ChargeRecodeFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum16uVariable
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RWChargeRecode
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_Recode
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent8
</UL>

<P><STRONG><a name="[2ee]"></a>APP_SelectUpNChargeRecode</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, displaymain.o(i.APP_SelectUpNChargeRecode))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = APP_SelectUpNChargeRecode &rArr; APP_RWChargeRecode &rArr; APP_ChargeRecodeFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum16uVariable
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RWChargeRecode
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_Recode
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_NetPageDispos
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ClearRecodeInfo
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent9
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent8
</UL>

<P><STRONG><a name="[1d8]"></a>APP_SelfCheckFailGunA</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, controlmain.o(i.APP_SelfCheckFailGunA))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = APP_SelfCheckFailGunA &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseBMSPower
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispEvent
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStartCharge
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[1e6]"></a>APP_SelfCheckFailGunB</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, controlmain.o(i.APP_SelfCheckFailGunB))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = APP_SelfCheckFailGunB &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseBMSPower
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispEvent
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStartCharge
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[57c]"></a>APP_Set66StartType</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, _66frame.o(i.APP_Set66StartType))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SetStartType
</UL>

<P><STRONG><a name="[57a]"></a>APP_SetAPStartType</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, apframe.o(i.APP_SetAPStartType))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SetStartType
</UL>

<P><STRONG><a name="[ef]"></a>APP_SetAddressGetType</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, yfymoduletxrx.o(i.APP_SetAddressGetType))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = APP_SetAddressGetType &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yfymoduletxrx.o(.data)
</UL>
<P><STRONG><a name="[309]"></a>APP_SetAppRegisterState</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, modulesim7600.o(i.APP_SetAppRegisterState))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GRecv
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RegisteeAck
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvRegisterAck
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvRegisterAck
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvRegisterAck
</UL>

<P><STRONG><a name="[2f1]"></a>APP_SetCountDownTime</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, displaymain.o(i.APP_SetCountDownTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = APP_SetCountDownTime &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>

<P><STRONG><a name="[2f2]"></a>APP_SetDispUartStatus</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, displaymain.o(i.APP_SetDispUartStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = APP_SetDispUartStatus &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVariColor
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDwinVariable
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTime
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum32uVariable
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum16uVariable
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintIcon
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PraPerprintBackImage
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyControl
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayQRCode
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendToUart
</UL>

<P><STRONG><a name="[39c]"></a>APP_SetGBType</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, connectbms.o(i.APP_SetGBType))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSBMain
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSAMain
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
</UL>

<P><STRONG><a name="[f0]"></a>APP_SetGroupVI</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, yfymoduletxrx.o(i.APP_SetGroupVI))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = APP_SetGroupVI &rArr; Set_Group_VIout &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Group_VIout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yfymoduletxrx.o(.data)
</UL>
<P><STRONG><a name="[57b]"></a>APP_SetHYStartType</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hyframe.o(i.APP_SetHYStartType))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SetStartType
</UL>

<P><STRONG><a name="[50f]"></a>APP_SetNetNotConect</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, modulesim7600.o(i.APP_SetNetNotConect))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GRecv
</UL>

<P><STRONG><a name="[2f4]"></a>APP_SetNetOFFLineRecodeNum</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, displaymain.o(i.APP_SetNetOFFLineRecodeNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = APP_SetNetOFFLineRecodeNum &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ParaInit
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReSendOffLineBill
</UL>

<P><STRONG><a name="[21f]"></a>APP_SetPowerModuleGroupAck</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, yfymoduletxrx.o(i.APP_SetPowerModuleGroupAck))
<BR>[Address Reference Count : 1]<UL><LI> yfymoduletxrx.o(.constdata)
</UL>
<P><STRONG><a name="[441]"></a>APP_SetRecodeCurNum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, displaymain.o(i.APP_SetRecodeCurNum))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent53
</UL>

<P><STRONG><a name="[4e2]"></a>APP_SetResendBillState</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, 4gmain.o(i.APP_SetResendBillState))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFmBill
</UL>

<P><STRONG><a name="[444]"></a>APP_SetSIM7600Mode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, modulesim7600.o(i.APP_SetSIM7600Mode))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvUpdate
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvUpdata
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvHearAck
</UL>

<P><STRONG><a name="[2d5]"></a>APP_SetStartNetState</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, apframe.o(i.APP_SetStartNetState))
<BR><BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardAnalyze
</UL>

<P><STRONG><a name="[57d]"></a>APP_SetYKCStartType</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ykcframe.o(i.APP_SetYKCStartType))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SetStartType
</UL>

<P><STRONG><a name="[2a7]"></a>APP_Set_ERR_Branch</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, controlmain.o(i.APP_Set_ERR_Branch))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepB
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepA
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_TimeoutErrB
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
</UL>

<P><STRONG><a name="[1d9]"></a>APP_StartChargeGunA</STRONG> (Thumb, 570 bytes, Stack size 48 bytes, controlmain.o(i.APP_StartChargeGunA))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = APP_StartChargeGunA &rArr; APP_ChargeRunningGunA &rArr; APP_BatChargeAdjust &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenLOCK
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenBMSPower
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseRunLed
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseK1K2
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseFailLed
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseBMSPower
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeRunningState
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispEvent
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStartFailType
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargePauseState
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeMode
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcuRemoteSignalState
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStartCharge
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSSelfCheck
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSConnectStep
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSStartCharge
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_FrameContextClear
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_ControlInit
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeReady
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeDemandUpdateState
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStopOnce
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStopCharge
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSBCPFitCheck
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSStopCharge
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[1e7]"></a>APP_StartChargeGunB</STRONG> (Thumb, 596 bytes, Stack size 48 bytes, controlmain.o(i.APP_StartChargeGunB))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = APP_StartChargeGunB &rArr; APP_ChargeRunningGunB &rArr; APP_BatChargeAdjust &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenLOCK
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenBMSPower
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseRunLed
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseFailLed
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseBMSPower
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeRunningState
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispEvent
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStartFailType
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargePauseState
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeMode
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcuRemoteSignalState
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStartCharge
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSSelfCheck
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSConnectStep
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSStartCharge
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_FrameContextClear
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_ControlInit
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeReady
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeDemandUpdateState
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStopOnce
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStopCharge
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSBCPFitCheck
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSStopCharge
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[1d5]"></a>APP_StopChargeErrAGunA</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, controlmain.o(i.APP_StopChargeErrAGunA))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = APP_StopChargeErrAGunA &rArr; BMS_CONNECT_StepSet &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseRunLed
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseK1K2
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseBMSPower
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeRunningState
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDealFaultOverState
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeMode
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStartCharge
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSSelfCheck
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPowerDCState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeReady
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStopCharge
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[1e3]"></a>APP_StopChargeErrAGunB</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, controlmain.o(i.APP_StopChargeErrAGunB))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = APP_StopChargeErrAGunB &rArr; BMS_CONNECT_StepSet &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseRunLed
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseK1K2
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseBMSPower
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeRunningState
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDealFaultOverState
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeMode
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStartCharge
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSSelfCheck
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPowerDCState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeReady
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStopCharge
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[1d6]"></a>APP_StopChargeErrBGunA</STRONG> (Thumb, 406 bytes, Stack size 24 bytes, controlmain.o(i.APP_StopChargeErrBGunA))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = APP_StopChargeErrBGunA &rArr; SetBcuRemoteSignalState &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseRunLed
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseK1K2
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseBMSPower
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCGetTime
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeRunningState
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispEvent
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDealFaultOverState
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeMode
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcuRemoteSignalState
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStartCharge
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSSelfCheck
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrDeal
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_ENTER
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRM_DCOutVolt
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPowerDCState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeReady
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStopCharge
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSStopCharge
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[1e4]"></a>APP_StopChargeErrBGunB</STRONG> (Thumb, 410 bytes, Stack size 24 bytes, controlmain.o(i.APP_StopChargeErrBGunB))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = APP_StopChargeErrBGunB &rArr; SetBcuRemoteSignalState &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseRunLed
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseK1K2
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseBMSPower
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCGetTime
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeRunningState
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispEvent
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDealFaultOverState
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeMode
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcuRemoteSignalState
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStartCharge
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSSelfCheck
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrDeal
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_ENTER
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRM_DCOutVolt
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPowerDCState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeReady
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStopCharge
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSStopCharge
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[1d7]"></a>APP_StopChargeErrCGunA</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, controlmain.o(i.APP_StopChargeErrCGunA))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = APP_StopChargeErrCGunA &rArr; SetBcuRemoteSignalState &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseK1K2
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispEvent
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDealFaultOverState
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcuRemoteSignalState
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_ENTER
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPowerDCState
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStopCharge
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSStopCharge
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[1e5]"></a>APP_StopChargeErrCGunB</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, controlmain.o(i.APP_StopChargeErrCGunB))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = APP_StopChargeErrCGunB &rArr; SetBcuRemoteSignalState &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseK1K2
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispEvent
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDealFaultOverState
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcuRemoteSignalState
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_ENTER
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPowerDCState
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStopCharge
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSStopCharge
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[1da]"></a>APP_StopChargeGunA</STRONG> (Thumb, 514 bytes, Stack size 40 bytes, controlmain.o(i.APP_StopChargeGunA))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = APP_StopChargeGunA &rArr; SetBcuRemoteSignalState &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseRunLed
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseK1K2
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseBMSPower
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCGetTime
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeRunningState
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispEvent
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDealFaultOverState
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeMode
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcuRemoteSignalState
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStartCharge
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrDeal
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_ENTER
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRM_DCOutVolt
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPowerDCState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeReady
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStopOnce
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStopCharge
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSStopOnce
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSStopCharge
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[1e8]"></a>APP_StopChargeGunB</STRONG> (Thumb, 520 bytes, Stack size 32 bytes, controlmain.o(i.APP_StopChargeGunB))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = APP_StopChargeGunB &rArr; SetBcuRemoteSignalState &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseRunLed
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseK1K2
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseBMSPower
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCGetTime
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeRunningState
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispEvent
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDealFaultOverState
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeMode
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcuRemoteSignalState
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStartCharge
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrDeal
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_ENTER
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRM_DCOutVolt
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPowerDCState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeReady
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStopOnce
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStopCharge
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSStopOnce
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSStopCharge
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controlmain.o(.constdata)
</UL>
<P><STRONG><a name="[267]"></a>APP_YFYCloseModule</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, yfymoduletxrx.o(i.APP_YFYCloseModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = APP_YFYCloseModule &rArr; Set_Group_Fream &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Group_Fream
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenCloseOneModule
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_CloseModule
</UL>

<P><STRONG><a name="[2bc]"></a>APP_YFYPowerModulePeriodSend</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, yfymoduletxrx.o(i.APP_YFYPowerModulePeriodSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = APP_YFYPowerModulePeriodSend &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModulePeriodSend
</UL>

<P><STRONG><a name="[2c6]"></a>APP_YFYPowerModuleStop</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, yfymoduletxrx.o(i.APP_YFYPowerModuleStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = APP_YFYPowerModuleStop &rArr; Set_Group_Fream &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Group_Fream
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenCloseOneGrpModule
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModuleStop
</UL>

<P><STRONG><a name="[268]"></a>APP_YKRCloseModule</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, ykrmoduletxrx.o(i.APP_YKRCloseModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = APP_YKRCloseModule &rArr; OpenCloseModule_YKR &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenCloseModule_YKR
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_CloseModule
</UL>

<P><STRONG><a name="[2bd]"></a>APP_YKRPowerModulePeriodSend</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, ykrmoduletxrx.o(i.APP_YKRPowerModulePeriodSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = APP_YKRPowerModulePeriodSend &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModulePeriodSend
</UL>

<P><STRONG><a name="[2c7]"></a>APP_YKRPowerModuleStop</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, ykrmoduletxrx.o(i.APP_YKRPowerModuleStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = APP_YKRPowerModuleStop &rArr; OpenCloseModule_YKR &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenCloseModule_YKR
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModuleStop
</UL>

<P><STRONG><a name="[306]"></a>AP_RecvFrameDispose</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, apframe.o(i.AP_RecvFrameDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AP_RecvFrameDispose
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_RecvFrameDispose
</UL>

<P><STRONG><a name="[30a]"></a>AP_SendBill</STRONG> (Thumb, 962 bytes, Stack size 240 bytes, apframe.o(i.AP_SendBill))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = AP_SendBill &rArr; WriterFmBill &rArr; Pre4GBill &rArr; PreAPBill
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCDtoHEX
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriterFmBill
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetStopChargeReason
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetMeterPowerInfo
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendBill
</UL>

<P><STRONG><a name="[30f]"></a>AP_SendBillData</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apframe.o(i.AP_SendBillData))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = AP_SendBillData &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReSendBill
</UL>

<P><STRONG><a name="[311]"></a>AP_SendCardInfo</STRONG> (Thumb, 380 bytes, Stack size 232 bytes, apframe.o(i.AP_SendCardInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = AP_SendCardInfo &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEXtoBCD
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunCardInfo
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendCardInfo
</UL>

<P><STRONG><a name="[312]"></a>AP_SendCardVinStart</STRONG> (Thumb, 438 bytes, Stack size 232 bytes, apframe.o(i.AP_SendCardVinStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = AP_SendCardVinStart &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEXtoBCD
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunCardInfo
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendCardVinCharge
</UL>

<P><STRONG><a name="[313]"></a>AP_SendCardWLAck</STRONG> (Thumb, 170 bytes, Stack size 168 bytes, apframe.o(i.AP_SendCardWLAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = AP_SendCardWLAck &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[314]"></a>AP_SendFrameDispose</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, apframe.o(i.AP_SendFrameDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = AP_SendFrameDispose &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendFrameDispose
</UL>

<P><STRONG><a name="[315]"></a>AP_SendOffLineBillData</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apframe.o(i.AP_SendOffLineBillData))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = AP_SendOffLineBillData &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReSendOffLineBill
</UL>

<P><STRONG><a name="[316]"></a>AP_SendOffLineBillFSData</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, apframe.o(i.AP_SendOffLineBillFSData))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = AP_SendOffLineBillFSData &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReSendOffLineBill
</UL>

<P><STRONG><a name="[317]"></a>AP_SendRateAck</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, apframe.o(i.AP_SendRateAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = AP_SendRateAck &rArr; AP_SendSetPricB47Ack &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendSetPricB47Ack
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendSetPricB2Ack
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendRateAck
</UL>

<P><STRONG><a name="[31a]"></a>AP_SendSetTimeAck</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, apframe.o(i.AP_SendSetTimeAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = AP_SendSetTimeAck &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendSetTimeAck
</UL>

<P><STRONG><a name="[31b]"></a>AP_SendStartAck</STRONG> (Thumb, 408 bytes, Stack size 240 bytes, apframe.o(i.AP_SendStartAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = AP_SendStartAck &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCDtoHEX
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCGetTime
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendStartAck
</UL>

<P><STRONG><a name="[31c]"></a>AP_SendStopAck</STRONG> (Thumb, 378 bytes, Stack size 232 bytes, apframe.o(i.AP_SendStopAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = AP_SendStopAck &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCDtoHEX
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCGetTime
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendStopAck
</UL>

<P><STRONG><a name="[31d]"></a>AP_SendTimeSharBill</STRONG> (Thumb, 448 bytes, Stack size 288 bytes, apframe.o(i.AP_SendTimeSharBill))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = AP_SendTimeSharBill &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPriceInfo
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetMeterPowerInfo
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendBill
</UL>

<P><STRONG><a name="[31f]"></a>AP_SendVinCardResAck</STRONG> (Thumb, 122 bytes, Stack size 56 bytes, apframe.o(i.AP_SendVinCardResAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = AP_SendVinCardResAck &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[320]"></a>AP_SendVinInfo</STRONG> (Thumb, 284 bytes, Stack size 224 bytes, apframe.o(i.AP_SendVinInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = AP_SendVinInfo &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendVinInfo
</UL>

<P><STRONG><a name="[321]"></a>AP_SendVinWLAck</STRONG> (Thumb, 180 bytes, Stack size 272 bytes, apframe.o(i.AP_SendVinWLAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = AP_SendVinWLAck &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[322]"></a>Analyse_Protocol_Frame</STRONG> (Thumb, 874 bytes, Stack size 32 bytes, adadjust.o(i.Analyse_Protocol_Frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Analyse_Protocol_Frame &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GetTemp2
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GetTemp1
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_DataFilter
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskADJust
</UL>

<P><STRONG><a name="[49f]"></a>App_TCBInitHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_hooks.o(i.App_TCBInitHook))
<BR><BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTCBInitHook
</UL>

<P><STRONG><a name="[4a5]"></a>App_TaskCreateHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_hooks.o(i.App_TaskCreateHook))
<BR><BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateHook
</UL>

<P><STRONG><a name="[4aa]"></a>App_TaskDelHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_hooks.o(i.App_TaskDelHook))
<BR><BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelHook
</UL>

<P><STRONG><a name="[4ac]"></a>App_TaskIdleHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_hooks.o(i.App_TaskIdleHook))
<BR><BR>[Called By]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskIdleHook
</UL>

<P><STRONG><a name="[4ae]"></a>App_TaskReturnHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_hooks.o(i.App_TaskReturnHook))
<BR><BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskReturnHook
</UL>

<P><STRONG><a name="[4b0]"></a>App_TaskStatHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_hooks.o(i.App_TaskStatHook))
<BR><BR>[Called By]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStatHook
</UL>

<P><STRONG><a name="[4b2]"></a>App_TaskSwHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_hooks.o(i.App_TaskSwHook))
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSwHook
</UL>

<P><STRONG><a name="[324]"></a>App_TimeTickHook</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_hooks.o(i.App_TimeTickHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = App_TimeTickHook &rArr; UART_ReceiveMsgHook &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveMsgHook
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MPLSScan
</UL>
<BR>[Called By]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTickHook
</UL>

<P><STRONG><a name="[307]"></a>BCDtoHEX</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, dwinprotocol.o(i.BCDtoHEX))
<BR><BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCSetTime
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_EndChargeDate
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_Recode
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvPricB47
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPOffLineBill
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSetTimeAck
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBill
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreYKCBill
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPBill
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStopAck
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStartAck
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendBill
</UL>

<P><STRONG><a name="[2b2]"></a>BMS_CONNECT_ControlInit</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, connectbms.o(i.BMS_CONNECT_ControlInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BMS_CONNECT_ControlInit &rArr; SetCEMState
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCEMState
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSBMain
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSAMain
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorGunState
</UL>

<P><STRONG><a name="[2fe]"></a>BMS_CONNECT_StateSet</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, connectbms.o(i.BMS_CONNECT_StateSet))
<BR><BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBSTB
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBSTA
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBSPB
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBSPA
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBSMB
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBSMA
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBSDB
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBSDA
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBROB
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBROA
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBRMB
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBRMA
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBMVB
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBMVA
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBMTB
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBMTA
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBHMB
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBHMA
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBEMB
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBEMA
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBCSB
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBCSA
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBCPB
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBCPA
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBCLB
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationBCLA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
</UL>

<P><STRONG><a name="[2b1]"></a>BMS_CONNECT_StepSet</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, connectbms.o(i.BMS_CONNECT_StepSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = BMS_CONNECT_StepSet &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSBMain
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSAMain
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepB
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepA
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepB
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepA
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrSwitch
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeEndStepB
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeEndStepA
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrMethodC
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrMethodB
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunB
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunB
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunA
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorGunState
</UL>

<P><STRONG><a name="[2f5]"></a>BMS_FrameContextClear</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, connectbms.o(i.BMS_FrameContextClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BMS_FrameContextClear
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSBMain
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSAMain
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
</UL>

<P><STRONG><a name="[328]"></a>BMS_FrameRx_TimeoutA</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, bmstimeout.o(i.BMS_FrameRx_TimeoutA))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = BMS_FrameRx_TimeoutA &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_ENTER
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
</UL>

<P><STRONG><a name="[329]"></a>BMS_FrameRx_TimeoutB</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, bmstimeout.o(i.BMS_FrameRx_TimeoutB))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = BMS_FrameRx_TimeoutB &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_ENTER
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
</UL>

<P><STRONG><a name="[24f]"></a>BMS_TIMEOUT_CHECK</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bmstimeout.o(i.BMS_TIMEOUT_CHECK))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = BMS_TIMEOUT_CHECK &rArr; BMS_FrameRx_TimeoutB &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_FrameRx_TimeoutB
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_FrameRx_TimeoutA
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepB
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepA
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepB
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepA
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrSwitch
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeEndStepB
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeEndStepA
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSSelfCheck
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunB
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunB
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunA
</UL>

<P><STRONG><a name="[24e]"></a>BMS_TIMEOUT_ENTER</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bmstimeout.o(i.BMS_TIMEOUT_ENTER))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = BMS_TIMEOUT_ENTER &rArr; BMS_FrameRx_TimeoutB &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_FrameRx_TimeoutB
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_FrameRx_TimeoutA
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepB
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepA
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepB
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepA
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrSwitch
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSSelfCheck
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunB
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunB
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunA
</UL>

<P><STRONG><a name="[32a]"></a>BSP_ADCInit</STRONG> (Thumb, 350 bytes, Stack size 128 bytes, bsp_adc.o(i.BSP_ADCInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = BSP_ADCInit &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConv
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMARequestAfterLastTransferCmd
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMACmd
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CommonInit
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_task_core
</UL>

<P><STRONG><a name="[339]"></a>BSP_CANRx_IRQHandler</STRONG> (Thumb, 196 bytes, Stack size 48 bytes, bsp_can.o(i.BSP_CANRx_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 140 + Unknown Stack Size
<LI>Call Chain = BSP_CANRx_IRQHandler &rArr; BSP_CanDataProcess &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Receive
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_GetITStatus
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_ClearITPendingBit
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CanDataProcess
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN3_RX0_IRQHandler
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_RX0_IRQHandler
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[33f]"></a>BSP_CANTx_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, bsp_can.o(i.BSP_CANTx_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = BSP_CANTx_IRQHandler &rArr; CAN_ClearITPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_GetITStatus
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN3_TX_IRQHandler
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_TX_IRQHandler
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_TX_IRQHandler
</UL>

<P><STRONG><a name="[340]"></a>BSP_CAN_GPIOInit</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, bsp_can.o(i.BSP_CAN_GPIOInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BSP_CAN_GPIOInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Init
</UL>

<P><STRONG><a name="[342]"></a>BSP_CAN_Init</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, bsp_can.o(i.BSP_CAN_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BSP_CAN_Init &rArr; CAN_Configuration &rArr; CAN_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_ITConfig
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Configuration
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_GPIOInit
</UL>
<BR>[Called By]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitConnectBMSBCAN
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitConnectBMSACAN
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCAN_Module
</UL>

<P><STRONG><a name="[345]"></a>BSP_CAN_Write</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, bsp_can.o(i.BSP_CAN_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 28 + Unknown Stack Size
<LI>Call Chain = BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reply_BMSFrame_CTSB
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reply_BMSFrame_CTSA
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reply_TPCM_EndofMsgAckFrameB
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reply_TPCM_EndofMsgAckFrameA
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTS_SendSynTimeMessageB
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTS_SendSynTimeMessageA
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CST_DeviceEndChargeB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CST_DeviceEndChargeA
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSD_DeviceChargeEndStatisticsB
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSD_DeviceChargeEndStatisticsA
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRO_SendChargeDevUnstandbyB
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRO_SendChargeDevUnstandbyA
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRO_SendChargeDevStandbyB
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRO_SendChargeDevStandbyA
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRM_SendShakeHandIdentifyFrameB
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRM_SendShakeHandIdentifyFrameA
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CML_SendMaxVolandCurB
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CML_SendMaxVolandCurA
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHM_SendShakeHandFrameB
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHM_SendShakeHandFrameA
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CEM_DeviceChargeErrB
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CEM_DeviceChargeErrA
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_DeviceChargeStateB
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_DeviceChargeStateA
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>

<P><STRONG><a name="[33e]"></a>BSP_CanDataProcess</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, bsp_can.o(i.BSP_CanDataProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + Unknown Stack Size
<LI>Call Chain = BSP_CanDataProcess &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFormation
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GetRxBuffPosotion
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CANRx_IRQHandler
</UL>

<P><STRONG><a name="[26b]"></a>BSP_CloseBMSPower</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bsp_io.o(i.BSP_CloseBMSPower))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_CloseBMSPower &rArr; BSP_IOClose
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOClose
</UL>
<BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepB
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepA
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParaInit
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunB
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunA
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelfCheckFailGunB
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelfCheckFailGunA
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ElectronicLockUnlockedGunB
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ElectronicLockUnlockedGunA
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ControlHardwareInit
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
</UL>

<P><STRONG><a name="[2f8]"></a>BSP_CloseFailLed</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bsp_io.o(i.BSP_CloseFailLed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_CloseFailLed &rArr; BSP_IOOpen
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPeriod
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParaInit
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
</UL>

<P><STRONG><a name="[252]"></a>BSP_CloseK1K2</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, bsp_io.o(i.BSP_CloseK1K2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_CloseK1K2 &rArr; BSP_IOClose
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOClose
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRecode_Dispose
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParaInit
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunB
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunB
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunA
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ControlHardwareInit
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunB
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunA
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
</UL>

<P><STRONG><a name="[26c]"></a>BSP_CloseLOCK</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bsp_io.o(i.BSP_CloseLOCK))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_CloseLOCK &rArr; BSP_IOClose
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOClose
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent81
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent80
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent79
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent78
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent77
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent76
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent75
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent74
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent73
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent3
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeEndStepB
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeEndStepA
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunB
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunA
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelfCheckFailGunB
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelfCheckFailGunA
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ElectronicLockUnlockedGunB
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ElectronicLockUnlockedGunA
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ElectronicLockLockedGunB
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ElectronicLockLockedGunA
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ControlHardwareInit
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorRemoteSignalState
</UL>

<P><STRONG><a name="[2a1]"></a>BSP_CloseNG2</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bsp_io.o(i.BSP_CloseNG2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_CloseNG2 &rArr; BSP_IOClose
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOClose
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
</UL>

<P><STRONG><a name="[2a0]"></a>BSP_ClosePG1</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bsp_io.o(i.BSP_ClosePG1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_ClosePG1 &rArr; BSP_IOClose
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOClose
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
</UL>

<P><STRONG><a name="[2f7]"></a>BSP_CloseRunLed</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bsp_io.o(i.BSP_CloseRunLed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_CloseRunLed &rArr; BSP_IOOpen
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRecode_Dispose
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParaInit
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunB
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunA
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
</UL>

<P><STRONG><a name="[323]"></a>BSP_DataFilter</STRONG> (Thumb, 88 bytes, Stack size 56 bytes, bsp_adc.o(i.BSP_DataFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = BSP_DataFilter &rArr; BubbleSort
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BubbleSort
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GetTemp2
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GetTemp1
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GetOUTBAT
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GetJYVol
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GetHandVolt
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRS_BatReverse
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Analyse_Protocol_Frame
</UL>

<P><STRONG><a name="[34f]"></a>BSP_GetHandVolt</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, bsp_adc.o(i.BSP_GetHandVolt))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = BSP_GetHandVolt &rArr; BSP_DataFilter &rArr; BubbleSort
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_DataFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Period_GerDivStatus
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMRealTime_Check
</UL>

<P><STRONG><a name="[350]"></a>BSP_GetJYVol</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, bsp_adc.o(i.BSP_GetJYVol))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = BSP_GetJYVol &rArr; BSP_DataFilter &rArr; BubbleSort
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_DataFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMRealTime_Check
</UL>

<P><STRONG><a name="[2b6]"></a>BSP_GetLockState</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, bsp_mpulse.o(i.BSP_GetLockState))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = BSP_GetLockState
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MPLSState
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorRemoteSignalState
</UL>

<P><STRONG><a name="[351]"></a>BSP_GetOUTBAT</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, bsp_adc.o(i.BSP_GetOUTBAT))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = BSP_GetOUTBAT &rArr; BSP_DataFilter &rArr; BubbleSort
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_DataFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMRealTime_Check
</UL>

<P><STRONG><a name="[349]"></a>BSP_GetRxBuffPosotion</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bsp_can.o(i.BSP_GetRxBuffPosotion))
<BR><BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CanDataProcess
</UL>

<P><STRONG><a name="[2ac]"></a>BSP_GetTemp1</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bsp_adc.o(i.BSP_GetTemp1))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = BSP_GetTemp1 &rArr; BSP_DataFilter &rArr; BubbleSort
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_DataFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMRealTime_Check
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Analyse_Protocol_Frame
</UL>

<P><STRONG><a name="[2ad]"></a>BSP_GetTemp2</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bsp_adc.o(i.BSP_GetTemp2))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = BSP_GetTemp2 &rArr; BSP_DataFilter &rArr; BubbleSort
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_DataFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMRealTime_Check
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Analyse_Protocol_Frame
</UL>

<P><STRONG><a name="[34c]"></a>BSP_IOClose</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp_io.o(i.BSP_IOClose))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_IOClose
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOTurnover
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOInit
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RLCWrite
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenRunLed
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenFailLed
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ClosePG1
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseNG2
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseK1K2
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseBMSPower
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_ACSW
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600Reset
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_FJDispose
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_MiddleSW
</UL>

<P><STRONG><a name="[353]"></a>BSP_IOInit</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, bsp_io.o(i.BSP_IOInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BSP_IOInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOClose
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_task_core
</UL>

<P><STRONG><a name="[34d]"></a>BSP_IOOpen</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp_io.o(i.BSP_IOOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_IOOpen
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOTurnover
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RLCWrite
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenPG1
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenNG2
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenLOCK
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenK1K2
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenBMSPower
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseRunLed
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseFailLed
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_ACSW
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600Reset
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_MiddleSW
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_UseAllMdule
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_AvegMode
</UL>

<P><STRONG><a name="[355]"></a>BSP_IOTurnover</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bsp_io.o(i.BSP_IOTurnover))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_IOTurnover &rArr; BSP_IOOpen
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOOpen
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOClose
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_task_core
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RLCWrite
</UL>

<P><STRONG><a name="[356]"></a>BSP_MPLSInit</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, bsp_mpulse.o(i.BSP_MPLSInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = BSP_MPLSInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MPLSReset
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_task_core
</UL>

<P><STRONG><a name="[357]"></a>BSP_MPLSReset</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp_mpulse.o(i.BSP_MPLSReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = BSP_MPLSReset
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MPLSInit
</UL>

<P><STRONG><a name="[326]"></a>BSP_MPLSScan</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, bsp_mpulse.o(i.BSP_MPLSScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BSP_MPLSScan
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TimeTickHook
</UL>

<P><STRONG><a name="[2a4]"></a>BSP_MPLSState</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bsp_mpulse.o(i.BSP_MPLSState))
<BR><BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GetLockState
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Period_GerDivStatus
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ErrLedState
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorRemoteSignalState
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
</UL>

<P><STRONG><a name="[2f9]"></a>BSP_OpenBMSPower</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bsp_io.o(i.BSP_OpenBMSPower))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_OpenBMSPower &rArr; BSP_IOOpen
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
</UL>

<P><STRONG><a name="[359]"></a>BSP_OpenFailLed</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bsp_io.o(i.BSP_OpenFailLed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_OpenFailLed &rArr; BSP_IOClose
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOClose
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPeriod
</UL>

<P><STRONG><a name="[25b]"></a>BSP_OpenK1K2</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, bsp_io.o(i.BSP_OpenK1K2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_OpenK1K2 &rArr; BSP_IOOpen
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
</UL>

<P><STRONG><a name="[2b4]"></a>BSP_OpenLOCK</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bsp_io.o(i.BSP_OpenLOCK))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_OpenLOCK &rArr; BSP_IOOpen
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent81
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent80
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent79
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent78
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent77
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent76
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent75
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent74
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent73
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent3
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorRemoteSignalState
</UL>

<P><STRONG><a name="[29f]"></a>BSP_OpenNG2</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bsp_io.o(i.BSP_OpenNG2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_OpenNG2 &rArr; BSP_IOOpen
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
</UL>

<P><STRONG><a name="[29e]"></a>BSP_OpenPG1</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bsp_io.o(i.BSP_OpenPG1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_OpenPG1 &rArr; BSP_IOOpen
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
</UL>

<P><STRONG><a name="[25e]"></a>BSP_OpenRunLed</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bsp_io.o(i.BSP_OpenRunLed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_OpenRunLed &rArr; BSP_IOClose
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOClose
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
</UL>

<P><STRONG><a name="[305]"></a>BSP_RLCWrite</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, bsp_io.o(i.BSP_RLCWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_RLCWrite &rArr; BSP_IOTurnover &rArr; BSP_IOOpen
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOTurnover
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOOpen
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOClose
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskUsbTask
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAnalysis
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCharge_StopCard
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCharge_StartCard
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StopCard
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StartCard
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_Query_Card
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvCardVinStartB11
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvCardB9
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvCardB7
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvCardStart
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvCardStart
</UL>

<P><STRONG><a name="[260]"></a>BSP_RTCGetTime</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, bsp_rtc.o(i.BSP_RTCGetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BSP_RTCGetTime &rArr; RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEXtoBCD
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskRTC
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Period_WriterFmBill
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTS_SendSynTimeMessageB
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTS_SendSynTimeMessageA
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStopAck
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStartAck
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
</UL>

<P><STRONG><a name="[308]"></a>BSP_RTCSetTime</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, bsp_rtc.o(i.BSP_RTCSetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = BSP_RTCSetTime &rArr; RTC_TimeAndDate_Set &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCDtoHEX
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskRTC
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu54_SetTimeDispose
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvTime
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvSetInfo
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvTime
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvRegisterAck
</UL>

<P><STRONG><a name="[35d]"></a>BSP_UARTConfigInit</STRONG> (Thumb, 688 bytes, Stack size 56 bytes, bsp_uart.o(i.BSP_UARTConfigInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 132 + Unknown Stack Size
<LI>Call Chain = BSP_UARTConfigInit &rArr; BSP_UARTTxDMAConfigInit &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetCmdStatus
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTTxDMAConfigInit
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommHandle
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetComPort
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemCreate
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_HardwareInit
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_HardwareInit
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485MetterInit
</UL>

<P><STRONG><a name="[368]"></a>BSP_UARTConfigTimeInit</STRONG> (Thumb, 688 bytes, Stack size 56 bytes, bsp_uart.o(i.BSP_UARTConfigTimeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 132 + Unknown Stack Size
<LI>Call Chain = BSP_UARTConfigTimeInit &rArr; BSP_UARTTxDMAConfigInit &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetCmdStatus
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTTxDMAConfigInit
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommHandle
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetComPort
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemCreate
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSRecv_HardwareInit
</UL>

<P><STRONG><a name="[58f]"></a>BSP_UARTInit</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, bsp_uart.o(i.BSP_UARTInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BSP_UARTInit
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_task_core
</UL>

<P><STRONG><a name="[362]"></a>BSP_UARTTxDMAConfigInit</STRONG> (Thumb, 256 bytes, Stack size 64 bytes, bsp_uart.o(i.BSP_UARTTxDMAConfigInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = BSP_UARTTxDMAConfigInit &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigTimeInit
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigInit
</UL>

<P><STRONG><a name="[369]"></a>BSP_UARTWrite</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, bsp_uart.o(i.BSP_UARTWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_RDCmd
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxMode
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PushBytes
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetComPort
</UL>
<BR>[Called By]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendToUart
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_WriterBlock
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_ReadBlock
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_InitWallet
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AuthKey
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_ActiveCard
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchMeterData
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
</UL>

<P><STRONG><a name="[36e]"></a>BootLoadWrite</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flashdatadeal.o(i.BootLoadWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = BootLoadWrite &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskUsbTask
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_HTTPDownload
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_FTPDownload
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTAFlashWriter
</UL>

<P><STRONG><a name="[f9]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[383]"></a>ByteBcdToHex</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, dealwithchar.o(i.ByteBcdToHex))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskRTC
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FiveByteBcdToHex
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTime
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculationRate
</UL>

<P><STRONG><a name="[28b]"></a>ByteHexToBcd</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, dealwithchar.o(i.ByteHexToBcd))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetMeterAddr
</UL>

<P><STRONG><a name="[113]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.CAN1_RX0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 148 + Unknown Stack Size
<LI>Call Chain = CAN1_RX0_IRQHandler &rArr; BSP_CANRx_IRQHandler &rArr; BSP_CanDataProcess &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CANRx_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[112]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.CAN1_TX_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = CAN1_TX_IRQHandler &rArr; BSP_CANTx_IRQHandler &rArr; CAN_ClearITPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CANTx_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[13f]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.CAN2_RX0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 148 + Unknown Stack Size
<LI>Call Chain = CAN2_RX0_IRQHandler &rArr; BSP_CANRx_IRQHandler &rArr; BSP_CanDataProcess &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CANRx_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[13e]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.CAN2_TX_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = CAN2_TX_IRQHandler &rArr; BSP_CANTx_IRQHandler &rArr; CAN_ClearITPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CANTx_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[14a]"></a>CAN3_RX0_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.CAN3_RX0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 148 + Unknown Stack Size
<LI>Call Chain = CAN3_RX0_IRQHandler &rArr; BSP_CANRx_IRQHandler &rArr; BSP_CanDataProcess &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CANRx_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[149]"></a>CAN3_TX_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.CAN3_TX_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = CAN3_TX_IRQHandler &rArr; BSP_CANTx_IRQHandler &rArr; CAN_ClearITPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CANTx_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[33c]"></a>CAN_ClearITPendingBit</STRONG> (Thumb, 132 bytes, Stack size 12 bytes, stm32f4xx_can.o(i.CAN_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CAN_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CANTx_IRQHandler
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CANRx_IRQHandler
</UL>

<P><STRONG><a name="[343]"></a>CAN_Configuration</STRONG> (Thumb, 292 bytes, Stack size 48 bytes, bsp_can.o(i.CAN_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CAN_Configuration &rArr; CAN_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Init
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_FilterInit
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_DeInit
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Init
</UL>

<P><STRONG><a name="[372]"></a>CAN_DeInit</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, stm32f4xx_can.o(i.CAN_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAN_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Configuration
</UL>

<P><STRONG><a name="[374]"></a>CAN_FilterInit</STRONG> (Thumb, 222 bytes, Stack size 8 bytes, stm32f4xx_can.o(i.CAN_FilterInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAN_FilterInit
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Configuration
</UL>

<P><STRONG><a name="[33a]"></a>CAN_GetITStatus</STRONG> (Thumb, 200 bytes, Stack size 0 bytes, stm32f4xx_can.o(i.CAN_GetITStatus))
<BR><BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CANTx_IRQHandler
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CANRx_IRQHandler
</UL>

<P><STRONG><a name="[344]"></a>CAN_ITConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_can.o(i.CAN_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Init
</UL>

<P><STRONG><a name="[373]"></a>CAN_Init</STRONG> (Thumb, 260 bytes, Stack size 8 bytes, stm32f4xx_can.o(i.CAN_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAN_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Configuration
</UL>

<P><STRONG><a name="[33b]"></a>CAN_Receive</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, stm32f4xx_can.o(i.CAN_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAN_Receive
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CANRx_IRQHandler
</UL>

<P><STRONG><a name="[347]"></a>CAN_Transmit</STRONG> (Thumb, 182 bytes, Stack size 12 bytes, stm32f4xx_can.o(i.CAN_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CAN_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
</UL>

<P><STRONG><a name="[82]"></a>CCS_DeviceChargeStateA</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, connectbmsframe.o(i.CCS_DeviceChargeStateA))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = CCS_DeviceChargeStateA &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetCSSContext
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGBType
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.data)
</UL>
<P><STRONG><a name="[8c]"></a>CCS_DeviceChargeStateB</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, connectbmsframe.o(i.CCS_DeviceChargeStateB))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + Unknown Stack Size
<LI>Call Chain = CCS_DeviceChargeStateB &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetCSSContext
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGBType
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.data)
</UL>
<P><STRONG><a name="[85]"></a>CEM_DeviceChargeErrA</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, connectbmsframe.o(i.CEM_DeviceChargeErrA))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = CEM_DeviceChargeErrA &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.data)
</UL>
<P><STRONG><a name="[8f]"></a>CEM_DeviceChargeErrB</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, connectbmsframe.o(i.CEM_DeviceChargeErrB))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = CEM_DeviceChargeErrB &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.data)
</UL>
<P><STRONG><a name="[7c]"></a>CHM_SendShakeHandFrameA</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, connectbmsframe.o(i.CHM_SendShakeHandFrameA))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = CHM_SendShakeHandFrameA &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.data)
</UL>
<P><STRONG><a name="[86]"></a>CHM_SendShakeHandFrameB</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, connectbmsframe.o(i.CHM_SendShakeHandFrameB))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = CHM_SendShakeHandFrameB &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.data)
</UL>
<P><STRONG><a name="[7f]"></a>CML_SendMaxVolandCurA</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, connectbmsframe.o(i.CML_SendMaxVolandCurA))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = CML_SendMaxVolandCurA &rArr; APP_GetCMLContext
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetCMLContext
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGBType
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.data)
</UL>
<P><STRONG><a name="[89]"></a>CML_SendMaxVolandCurB</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, connectbmsframe.o(i.CML_SendMaxVolandCurB))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = CML_SendMaxVolandCurB &rArr; APP_GetCMLContext
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetCMLContext
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGBType
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.data)
</UL>
<P><STRONG><a name="[7d]"></a>CRM_SendShakeHandIdentifyFrameA</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, connectbmsframe.o(i.CRM_SendShakeHandIdentifyFrameA))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = CRM_SendShakeHandIdentifyFrameA &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.data)
</UL>
<P><STRONG><a name="[87]"></a>CRM_SendShakeHandIdentifyFrameB</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, connectbmsframe.o(i.CRM_SendShakeHandIdentifyFrameB))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = CRM_SendShakeHandIdentifyFrameB &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.data)
</UL>
<P><STRONG><a name="[80]"></a>CRO_SendChargeDevStandbyA</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, connectbmsframe.o(i.CRO_SendChargeDevStandbyA))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = CRO_SendChargeDevStandbyA &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.data)
</UL>
<P><STRONG><a name="[8a]"></a>CRO_SendChargeDevStandbyB</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, connectbmsframe.o(i.CRO_SendChargeDevStandbyB))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = CRO_SendChargeDevStandbyB &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.data)
</UL>
<P><STRONG><a name="[81]"></a>CRO_SendChargeDevUnstandbyA</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, connectbmsframe.o(i.CRO_SendChargeDevUnstandbyA))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = CRO_SendChargeDevUnstandbyA &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.data)
</UL>
<P><STRONG><a name="[8b]"></a>CRO_SendChargeDevUnstandbyB</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, connectbmsframe.o(i.CRO_SendChargeDevUnstandbyB))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = CRO_SendChargeDevUnstandbyB &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.data)
</UL>
<P><STRONG><a name="[84]"></a>CSD_DeviceChargeEndStatisticsA</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, connectbmsframe.o(i.CSD_DeviceChargeEndStatisticsA))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = CSD_DeviceChargeEndStatisticsA &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetCSDContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.data)
</UL>
<P><STRONG><a name="[8e]"></a>CSD_DeviceChargeEndStatisticsB</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, connectbmsframe.o(i.CSD_DeviceChargeEndStatisticsB))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = CSD_DeviceChargeEndStatisticsB &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetCSDContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.data)
</UL>
<P><STRONG><a name="[83]"></a>CST_DeviceEndChargeA</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, connectbmsframe.o(i.CST_DeviceEndChargeA))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = CST_DeviceEndChargeA &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetCSTContext
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGBType
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.data)
</UL>
<P><STRONG><a name="[8d]"></a>CST_DeviceEndChargeB</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, connectbmsframe.o(i.CST_DeviceEndChargeB))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + Unknown Stack Size
<LI>Call Chain = CST_DeviceEndChargeB &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetCSTContext
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGBType
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.data)
</UL>
<P><STRONG><a name="[7e]"></a>CTS_SendSynTimeMessageA</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, connectbmsframe.o(i.CTS_SendSynTimeMessageA))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + Unknown Stack Size
<LI>Call Chain = CTS_SendSynTimeMessageA &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCGetTime
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.data)
</UL>
<P><STRONG><a name="[88]"></a>CTS_SendSynTimeMessageB</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, connectbmsframe.o(i.CTS_SendSynTimeMessageB))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + Unknown Stack Size
<LI>Call Chain = CTS_SendSynTimeMessageB &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCGetTime
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.data)
</UL>
<P><STRONG><a name="[509]"></a>CalcBCC</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, card_cpu.o(i.CalcBCC))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CalcBCC
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitCardmessage
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_WriterBlock
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_ReadBlock
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_InitWallet
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AuthKey
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_ActiveCard
</UL>

<P><STRONG><a name="[378]"></a>CalculationBill</STRONG> (Thumb, 1784 bytes, Stack size 48 bytes, rs485meter.o(i.CalculationBill))
<BR><BR>[Stack]<UL><LI>Max Depth = 100 + Unknown Stack Size
<LI>Call Chain = CalculationBill &rArr; MeterToDispMsg_StopCharge &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunCardInfo
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetNetMoney
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPriceInfo
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetBPriceInfo
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAPriceInfo
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingStatus
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPowerChangeFlag
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargingStatus
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPowerChangeFlag
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurRate
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MeterToDispMsg_StopCharge
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurUnixTimestamp
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskBillStk
</UL>

<P><STRONG><a name="[382]"></a>CalculationRate</STRONG> (Thumb, 728 bytes, Stack size 664 bytes, rs485meter.o(i.CalculationRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = CalculationRate
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteBcdToHex
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPriceInfo
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetBPriceInfo
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAPriceInfo
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurTime
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskBillStk
</UL>

<P><STRONG><a name="[1b6]"></a>CanProtocolOperationBCLA</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBCLA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBCLA
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1c4]"></a>CanProtocolOperationBCLB</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBCLB))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBCLB
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1b4]"></a>CanProtocolOperationBCPA</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBCPA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBCPA
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1c2]"></a>CanProtocolOperationBCPB</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBCPB))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBCPB
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1b7]"></a>CanProtocolOperationBCSA</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBCSA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBCSA
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1c5]"></a>CanProtocolOperationBCSB</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBCSB))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBCSB
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1be]"></a>CanProtocolOperationBEMA</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBEMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBEMA
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1cc]"></a>CanProtocolOperationBEMB</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBEMB))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBEMB
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1b2]"></a>CanProtocolOperationBHMA</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBHMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBHMA
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1c0]"></a>CanProtocolOperationBHMB</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBHMB))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBHMB
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1ba]"></a>CanProtocolOperationBMTA</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBMTA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBMTA
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1c8]"></a>CanProtocolOperationBMTB</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBMTB))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBMTB
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1b9]"></a>CanProtocolOperationBMVA</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBMVA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBMVA
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1c7]"></a>CanProtocolOperationBMVB</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBMVB))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBMVB
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1b3]"></a>CanProtocolOperationBRMA</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBRMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBRMA
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1c1]"></a>CanProtocolOperationBRMB</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBRMB))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBRMB
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1b5]"></a>CanProtocolOperationBROA</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBROA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBROA
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1c3]"></a>CanProtocolOperationBROB</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBROB))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBROB
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1bd]"></a>CanProtocolOperationBSDA</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBSDA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBSDA
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1cb]"></a>CanProtocolOperationBSDB</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBSDB))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBSDB
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1b8]"></a>CanProtocolOperationBSMA</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBSMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBSMA
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1c6]"></a>CanProtocolOperationBSMB</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBSMB))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBSMB
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1bb]"></a>CanProtocolOperationBSPA</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBSPA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBSPA
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1c9]"></a>CanProtocolOperationBSPB</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBSPB))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBSPB
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1bc]"></a>CanProtocolOperationBSTA</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBSTA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBSTA
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1ca]"></a>CanProtocolOperationBSTB</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationBSTB))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanProtocolOperationBSTB
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StateSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1b1]"></a>CanProtocolOperationRTSA</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationRTSA))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + Unknown Stack Size
<LI>Call Chain = CanProtocolOperationRTSA &rArr; Reply_BMSFrame_CTSA &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reply_BMSFrame_CTSA
</UL>
<BR>[Called By]<UL><LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveBMSFrameA
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1bf]"></a>CanProtocolOperationRTSB</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, connectbmsinterface.o(i.CanProtocolOperationRTSB))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + Unknown Stack Size
<LI>Call Chain = CanProtocolOperationRTSB &rArr; Reply_BMSFrame_CTSB &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reply_BMSFrame_CTSB
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveBMSFrameB
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[4e7]"></a>CanSearchParaManagementTable</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, connectbms.o(i.CanSearchParaManagementTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CanSearchParaManagementTable
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveBMSFrameB
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveBMSFrameA
</UL>

<P><STRONG><a name="[386]"></a>CardAnalysis</STRONG> (Thumb, 342 bytes, Stack size 24 bytes, card_cpu.o(i.CardAnalysis))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = CardAnalysis &rArr; Charge_StartCard &rArr; Dispose_LocalUnLock &rArr; APP_RWChargeRecode &rArr; APP_ChargeRecodeFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RLCWrite
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCardInfoStatus
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCardWorkStatus
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCharge_StopCard
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCharge_StartCard
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_WriterCardUnLock
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StopCard
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StartCard
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_Query_Card
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCardStk
</UL>

<P><STRONG><a name="[390]"></a>CardUart_MsgFree</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, card_cpu.o(i.CardUart_MsgFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = CardUart_MsgFree &rArr; OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_MsgDeal
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_FreeOneMsg
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCardStk
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_LocalUnLock
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_WriterCardUnLock
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_WriterCardStartMoney
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_WriterCardMoney
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardState2
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardState1
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardState
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardStartMoney
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardMoney1
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardMoney
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardID
</UL>

<P><STRONG><a name="[394]"></a>Card_FrameRx_Timeout</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, waittimeout.o(i.Card_FrameRx_Timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = Card_FrameRx_Timeout &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_LocalUnLock
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCharge_StopCard
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCharge_StartCard
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_WriterCardUnLock
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_WriterCardStartMoney
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_WriterCardMoney
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardState2
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardState1
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardState
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardStartMoney
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardMoney1
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardMoney
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardID
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StopCard
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StartCard
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_Query_Card
</UL>

<P><STRONG><a name="[397]"></a>Card_Init</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, card_cpu.o(i.Card_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = Card_Init &rArr; OSTaskSuspend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCardStk
</UL>

<P><STRONG><a name="[532]"></a>Change2Unixstamp</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, rtc_task.o(i.Change2Unixstamp))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Change2Unixstamp
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskRTC
</UL>

<P><STRONG><a name="[398]"></a>ChargeBMSHandshakeA</STRONG> (Thumb, 896 bytes, Stack size 40 bytes, connectbms.o(i.ChargeBMSHandshakeA))
<BR><BR>[Stack]<UL><LI>Max Depth = 156 + Unknown Stack Size
<LI>Call Chain = ChargeBMSHandshakeA &rArr; WaitConnectBMSmessageA &rArr; ReciveBMSFrameA &rArr; CanProtocolOperationRTSA &rArr; Reply_BMSFrame_CTSA &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseBMSPower
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get4GMainEvent
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStartFailType
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcuRemoteSignalState
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStartCharge
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSInsulationCheck
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSConnectStep
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargeMode
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSInsulationCheck
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitConnectBMSmessageA
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCEMState
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSErrState
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckHWConnectforBMS
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrSwitch
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetGBType
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGBType
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_ENTER
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSAMain
</UL>

<P><STRONG><a name="[39f]"></a>ChargeBMSHandshakeB</STRONG> (Thumb, 892 bytes, Stack size 40 bytes, connectbms.o(i.ChargeBMSHandshakeB))
<BR><BR>[Stack]<UL><LI>Max Depth = 156 + Unknown Stack Size
<LI>Call Chain = ChargeBMSHandshakeB &rArr; WaitConnectBMSmessageB &rArr; ReciveBMSFrameB &rArr; CanProtocolOperationRTSB &rArr; Reply_BMSFrame_CTSB &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseBMSPower
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get4GMainEvent
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStartFailType
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcuRemoteSignalState
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStartCharge
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSInsulationCheck
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSConnectStep
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargeMode
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSInsulationCheck
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitConnectBMSmessageB
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCEMState
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSErrState
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckHWConnectforBMS
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrSwitch
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetGBType
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGBType
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_ENTER
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSBMain
</UL>

<P><STRONG><a name="[3a1]"></a>ChargeBMSSelfCheck</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, connectbms.o(i.ChargeBMSSelfCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = ChargeBMSSelfCheck &rArr; SetBcuRemoteSignalState &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispEvent
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStartFailType
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcuRemoteSignalState
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetElecLockState
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargeMode
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSSelfCheck
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_ENTER
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSBMain
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSAMain
</UL>

<P><STRONG><a name="[3a3]"></a>ChargeEndStepA</STRONG> (Thumb, 206 bytes, Stack size 40 bytes, connectbms.o(i.ChargeEndStepA))
<BR><BR>[Stack]<UL><LI>Max Depth = 156 + Unknown Stack Size
<LI>Call Chain = ChargeEndStepA &rArr; WaitConnectBMSmessageA &rArr; ReciveBMSFrameA &rArr; CanProtocolOperationRTSA &rArr; Reply_BMSFrame_CTSA &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitConnectBMSmessageA
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCEMState
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrDeal
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSAMain
</UL>

<P><STRONG><a name="[3a4]"></a>ChargeEndStepB</STRONG> (Thumb, 206 bytes, Stack size 40 bytes, connectbms.o(i.ChargeEndStepB))
<BR><BR>[Stack]<UL><LI>Max Depth = 156 + Unknown Stack Size
<LI>Call Chain = ChargeEndStepB &rArr; WaitConnectBMSmessageB &rArr; ReciveBMSFrameB &rArr; CanProtocolOperationRTSB &rArr; Reply_BMSFrame_CTSB &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitConnectBMSmessageB
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCEMState
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrDeal
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSBMain
</UL>

<P><STRONG><a name="[250]"></a>ChargeErrDeal</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, connectbms.o(i.ChargeErrDeal))
<BR><BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepB
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepA
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepB
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepA
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrSwitch
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeEndStepB
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeEndStepA
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunB
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunA
</UL>

<P><STRONG><a name="[1af]"></a>ChargeErrHandleA</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, connectbms.o(i.ChargeErrHandleA))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + Unknown Stack Size
<LI>Call Chain = ChargeErrHandleA &rArr; ChargeErrMethodC &rArr; BMS_CONNECT_StepSet &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSErrState
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSErrMethodRetry
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrMethodC
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrMethodB
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrMethodA
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[1b0]"></a>ChargeErrHandleB</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, connectbms.o(i.ChargeErrHandleB))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + Unknown Stack Size
<LI>Call Chain = ChargeErrHandleB &rArr; ChargeErrMethodC &rArr; BMS_CONNECT_StepSet &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSErrState
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSErrMethodRetry
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrMethodC
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrMethodB
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrMethodA
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(.constdata)
</UL>
<P><STRONG><a name="[39e]"></a>ChargeErrSwitch</STRONG> (Thumb, 272 bytes, Stack size 16 bytes, connectbms.o(i.ChargeErrSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + Unknown Stack Size
<LI>Call Chain = ChargeErrSwitch &rArr; BMS_CONNECT_StepSet &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDealFaultOverState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSConnectStep
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDealFaultOverState
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSErrMethodRetry
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSErrState
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrDeal
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGBType
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_TimeoutErrB
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_ENTER
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepB
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepA
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepB
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepA
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
</UL>

<P><STRONG><a name="[3ac]"></a>ChargeParameterConfigStepA</STRONG> (Thumb, 922 bytes, Stack size 40 bytes, connectbms.o(i.ChargeParameterConfigStepA))
<BR><BR>[Stack]<UL><LI>Max Depth = 156 + Unknown Stack Size
<LI>Call Chain = ChargeParameterConfigStepA &rArr; WaitConnectBMSmessageA &rArr; ReciveBMSFrameA &rArr; CanProtocolOperationRTSA &rArr; Reply_BMSFrame_CTSA &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseBMSPower
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStartFailType
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeMode
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSConnectStep
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargeReady
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargeMode
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSBCPFitCheck
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitConnectBMSmessageA
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCEMState
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrSwitch
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrDeal
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGBType
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_ENTER
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSAMain
</UL>

<P><STRONG><a name="[3ad]"></a>ChargeParameterConfigStepB</STRONG> (Thumb, 928 bytes, Stack size 40 bytes, connectbms.o(i.ChargeParameterConfigStepB))
<BR><BR>[Stack]<UL><LI>Max Depth = 156 + Unknown Stack Size
<LI>Call Chain = ChargeParameterConfigStepB &rArr; WaitConnectBMSmessageB &rArr; ReciveBMSFrameB &rArr; CanProtocolOperationRTSB &rArr; Reply_BMSFrame_CTSB &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseBMSPower
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStartFailType
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeMode
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSConnectStep
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargeReady
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargeMode
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSBCPFitCheck
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitConnectBMSmessageB
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCEMState
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrSwitch
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrDeal
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGBType
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_ENTER
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSBMain
</UL>

<P><STRONG><a name="[3ae]"></a>ChargeRunningStepA</STRONG> (Thumb, 1496 bytes, Stack size 48 bytes, connectbms.o(i.ChargeRunningStepA))
<BR><BR>[Stack]<UL><LI>Max Depth = 164 + Unknown Stack Size
<LI>Call Chain = ChargeRunningStepA &rArr; WaitConnectBMSmessageA &rArr; ReciveBMSFrameA &rArr; CanProtocolOperationRTSA &rArr; Reply_BMSFrame_CTSA &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Set_ERR_Branch
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargePauseState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSConnectStep
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargePauseState
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSStartCharge
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitConnectBMSmessageA
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCEMState
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrSwitch
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrDeal
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_ENTER
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSAMain
</UL>

<P><STRONG><a name="[3af]"></a>ChargeRunningStepB</STRONG> (Thumb, 1518 bytes, Stack size 48 bytes, connectbms.o(i.ChargeRunningStepB))
<BR><BR>[Stack]<UL><LI>Max Depth = 164 + Unknown Stack Size
<LI>Call Chain = ChargeRunningStepB &rArr; WaitConnectBMSmessageB &rArr; ReciveBMSFrameB &rArr; CanProtocolOperationRTSB &rArr; Reply_BMSFrame_CTSB &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Set_ERR_Branch
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargePauseState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSConnectStep
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargePauseState
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSStartCharge
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitConnectBMSmessageB
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCEMState
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrSwitch
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrDeal
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_ENTER
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_TIMEOUT_CHECK
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSBMain
</UL>

<P><STRONG><a name="[3b0]"></a>Charge_AddModule</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, modulemanage.o(i.Charge_AddModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = Charge_AddModule &rArr; Charge_SHAddModule &rArr; SHOpenCloseGroupModule &rArr; SHSendOpenCloseGroupModule &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YKRAddModule
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YFYAddModule
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHAddModule
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_GWAddModule
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_UseAllMdule
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_AvegMode
</UL>

<P><STRONG><a name="[3b7]"></a>Charge_FristOpenGun</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, modulemanage.o(i.Charge_FristOpenGun))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = Charge_FristOpenGun &rArr; Charge_SHFristOpenGun &rArr; SHOpenCloseGroupModule &rArr; SHSendOpenCloseGroupModule &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YKRFristOpenGun
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YFYFristOpenGun
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHFristOpenGun
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_GWFristOpenGun
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_UseAllMdule
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_AvegMode
</UL>

<P><STRONG><a name="[3b4]"></a>Charge_GWAddModule</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, gwmoduletxrx.o(i.Charge_GWAddModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = Charge_GWAddModule &rArr; Set_GWGroup_Fream &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PeriodControlDataUpdata
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_GWGroup_VI
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_GWGroup_Fream
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_AddModule
</UL>

<P><STRONG><a name="[3be]"></a>Charge_GWFristOpenGun</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, gwmoduletxrx.o(i.Charge_GWFristOpenGun))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = Charge_GWFristOpenGun &rArr; Set_GWGroup_Fream &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PeriodControlDataUpdata
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_GWGroup_VI
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_GWGroup_Fream
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_FristOpenGun
</UL>

<P><STRONG><a name="[3c1]"></a>Charge_GWReduceModule</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, gwmoduletxrx.o(i.Charge_GWReduceModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = Charge_GWReduceModule &rArr; Set_Close_OneModule &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PeriodControlDataUpdata
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_GWGroup_VI
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Close_OneModule
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_ReduceModule
</UL>

<P><STRONG><a name="[3c3]"></a>Charge_GWSetModuleVI</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gwmoduletxrx.o(i.Charge_GWSetModuleVI))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Charge_GWSetModuleVI &rArr; Set_GWGroup_VI
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_GWGroup_VI
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SetModuleVI
</UL>

<P><STRONG><a name="[3ba]"></a>Charge_ReduceModule</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, modulemanage.o(i.Charge_ReduceModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = Charge_ReduceModule &rArr; Charge_SHReduceModule &rArr; Send_SetGroupVI &rArr; SHSet_Group_Vol &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YKRReduceModule
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YFYReduceModule
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHReduceModule
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_GWReduceModule
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_UseAllMdule
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_QZMode
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_AvegMode
</UL>

<P><STRONG><a name="[3b1]"></a>Charge_SHAddModule</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, shmoduletxrx.o(i.Charge_SHAddModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = Charge_SHAddModule &rArr; SHOpenCloseGroupModule &rArr; SHSendOpenCloseGroupModule &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PeriodControlDataUpdata
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_SetGroupVI
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSetVolGears_750V
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSetVolGears_500V
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHOpenCloseGroupModule
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_AddModule
</UL>

<P><STRONG><a name="[3bb]"></a>Charge_SHFristOpenGun</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, shmoduletxrx.o(i.Charge_SHFristOpenGun))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = Charge_SHFristOpenGun &rArr; SHOpenCloseGroupModule &rArr; SHSendOpenCloseGroupModule &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PeriodControlDataUpdata
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_SetGroupVI
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSetVolGears_750V
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSetVolGears_500V
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHOpenCloseGroupModule
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_FristOpenGun
</UL>

<P><STRONG><a name="[3cd]"></a>Charge_SHReduceModule</STRONG> (Thumb, 214 bytes, Stack size 40 bytes, shmoduletxrx.o(i.Charge_SHReduceModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = Charge_SHReduceModule &rArr; Send_SetGroupVI &rArr; SHSet_Group_Vol &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PeriodControlDataUpdata
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_SetGroupVI
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSetVolGears_750V
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSetVolGears_500V
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHOpenCloseOneModule
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_ReduceModule
</UL>

<P><STRONG><a name="[3d3]"></a>Charge_SHSetModuleVI</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, shmoduletxrx.o(i.Charge_SHSetModuleVI))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = Charge_SHSetModuleVI &rArr; Send_SetGroupVI &rArr; SHSet_Group_Vol &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_SetGroupVI
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSetVolGears_750V
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSetVolGears_500V
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SetModuleVI
</UL>

<P><STRONG><a name="[3b8]"></a>Charge_SetModuleVI</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, modulemanage.o(i.Charge_SetModuleVI))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = Charge_SetModuleVI &rArr; Charge_SHSetModuleVI &rArr; Send_SetGroupVI &rArr; SHSet_Group_Vol &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YKRSetModuleVI
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YFYSetModuleVI
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHSetModuleVI
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_GWSetModuleVI
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_UseAllMdule
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_AvegMode
</UL>

<P><STRONG><a name="[3b2]"></a>Charge_YFYAddModule</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, yfymoduletxrx.o(i.Charge_YFYAddModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = Charge_YFYAddModule &rArr; Set_Group_VIout &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PeriodControlDataUpdata
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Group_VIout
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Group_Fream
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenCloseOneModule
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_AddModule
</UL>

<P><STRONG><a name="[3bc]"></a>Charge_YFYFristOpenGun</STRONG> (Thumb, 166 bytes, Stack size 48 bytes, yfymoduletxrx.o(i.Charge_YFYFristOpenGun))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = Charge_YFYFristOpenGun &rArr; Set_Group_Fream &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PeriodControlDataUpdata
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Group_Fream
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenCloseOneGrpModule
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_FristOpenGun
</UL>

<P><STRONG><a name="[3ce]"></a>Charge_YFYReduceModule</STRONG> (Thumb, 176 bytes, Stack size 48 bytes, yfymoduletxrx.o(i.Charge_YFYReduceModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = Charge_YFYReduceModule &rArr; Set_Group_VIout &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PeriodControlDataUpdata
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Group_VIout
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Group_Fream
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenCloseOneModule
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_ReduceModule
</UL>

<P><STRONG><a name="[3d4]"></a>Charge_YFYSetModuleVI</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, yfymoduletxrx.o(i.Charge_YFYSetModuleVI))
<BR><BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SetModuleVI
</UL>

<P><STRONG><a name="[3b3]"></a>Charge_YKRAddModule</STRONG> (Thumb, 210 bytes, Stack size 48 bytes, ykrmoduletxrx.o(i.Charge_YKRAddModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = Charge_YKRAddModule &rArr; SetModuleVI_YKR &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ModuleInfoNum
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModuleVI_YKR
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenCloseModule_YKR
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_AddModule
</UL>

<P><STRONG><a name="[3bd]"></a>Charge_YKRFristOpenGun</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, ykrmoduletxrx.o(i.Charge_YKRFristOpenGun))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = Charge_YKRFristOpenGun &rArr; SetModuleVI_YKR &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ModuleInfoNum
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModuleVI_YKR
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenCloseModule_YKR
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_FristOpenGun
</UL>

<P><STRONG><a name="[3cf]"></a>Charge_YKRReduceModule</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, ykrmoduletxrx.o(i.Charge_YKRReduceModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = Charge_YKRReduceModule &rArr; SetModuleVI_YKR &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ModuleInfoNum
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModuleVI_YKR
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenCloseModule_YKR
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_ReduceModule
</UL>

<P><STRONG><a name="[3d5]"></a>Charge_YKRSetModuleVI</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, ykrmoduletxrx.o(i.Charge_YKRSetModuleVI))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = Charge_YKRSetModuleVI &rArr; SetModuleVI_YKR &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ModuleInfoNum
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModuleVI_YKR
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SetModuleVI
</UL>

<P><STRONG><a name="[3de]"></a>ChargingAnalyse</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rs485meter.o(i.ChargingAnalyse))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ChargingAnalyse &rArr; StartBillingInit
</UL>
<BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartBillingInit
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargingStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskBillStk
</UL>

<P><STRONG><a name="[3e0]"></a>ChargingInit</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, rs485meter.o(i.ChargingInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = ChargingInit &rArr; OSTaskSuspend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskBillStk
</UL>

<P><STRONG><a name="[39d]"></a>CheckHWConnectforBMS</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, connectbms.o(i.CheckHWConnectforBMS))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CheckHWConnectforBMS
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSSelfCheck
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSInsulationCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
</UL>

<P><STRONG><a name="[527]"></a>ClearCanFrameInformation</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, connectbms.o(i.ClearCanFrameInformation))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSBMain
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSAMain
</UL>

<P><STRONG><a name="[2d3]"></a>CmpNBuf</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, dealwithchar.o(i.CmpNBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CmpNBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardAnalyze
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_VinWhiteListDispose
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvB16OFFLineRco
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_CardWhiteListDispose
</UL>

<P><STRONG><a name="[45f]"></a>CompareAddr</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, rs485meter.o(i.CompareAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CompareAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MeterDataAnalyse
</UL>

<P><STRONG><a name="[26f]"></a>ControlParaInit</STRONG> (Thumb, 192 bytes, Stack size 8 bytes, controlmain.o(i.ControlParaInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ControlParaInit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseRunLed
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseK1K2
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseFailLed
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseBMSPower
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeRunningState
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDealFaultOverState
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargePauseState
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeMode
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStartCharge
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSSelfCheck
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSInsulationCheck
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGunState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeReady
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStopOnce
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStopCharge
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSBCPFitCheck
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ControlInit
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorGunState
</UL>

<P><STRONG><a name="[13a]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bsp_sdio_sd.o(i.DMA2_Stream3_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessDMAIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4f6]"></a>DMA_ClearFlag</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessDMAIRQ
</UL>

<P><STRONG><a name="[338]"></a>DMA_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ADCInit
</UL>

<P><STRONG><a name="[32d]"></a>DMA_DeInit</STRONG> (Thumb, 278 bytes, Stack size 28 bytes, stm32f4xx_dma.o(i.DMA_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DMA_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ADCInit
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigTimeInit
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigInit
</UL>

<P><STRONG><a name="[361]"></a>DMA_GetCmdStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_GetCmdStatus))
<BR><BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigTimeInit
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigInit
</UL>

<P><STRONG><a name="[32e]"></a>DMA_Init</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, stm32f4xx_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ADCInit
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTTxDMAConfigInit
</UL>

<P><STRONG><a name="[273]"></a>DealWithKey</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dispkey.o(i.DealWithKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DealWithKey
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_DisplayRecvDataAnalyze
</UL>

<P><STRONG><a name="[fc]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3ee]"></a>Debug_USART_Config</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, bsp_debug_usart.o(i.Debug_USART_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Debug_USART_Config &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_task_core
</UL>

<P><STRONG><a name="[4b5]"></a>DelayInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, delay.o(i.DelayInit))
<BR><BR>[Called By]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTick_Init
</UL>

<P><STRONG><a name="[3f0]"></a>Dis_Show</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, dispshowstatus.o(i.Dis_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = Dis_Show &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowSet3
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowNet
</UL>

<P><STRONG><a name="[3f2]"></a>Dis_ShowCopy</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, dispshowstatus.o(i.Dis_ShowCopy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Dis_ShowCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_Recode
</UL>

<P><STRONG><a name="[3f3]"></a>Dis_ShowDivStatus</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, dispshowstatus.o(i.Dis_ShowDivStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = Dis_ShowDivStatus &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVariColor
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_StatusDivInfo
</UL>

<P><STRONG><a name="[3f5]"></a>Dis_ShowErr</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, dispshowstatus.o(i.Dis_ShowErr))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = Dis_ShowErr &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVariColor
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_State
</UL>

<P><STRONG><a name="[2de]"></a>Dis_ShowStatus</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, dispshowstatus.o(i.Dis_ShowStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = Dis_ShowStatus &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVariColor
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_EndChargeDate
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu48_PrcDispose
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardDispose
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu37
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu36
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent47
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent46
</UL>

<P><STRONG><a name="[3f6]"></a>Dis_ShowTime</STRONG> (Thumb, 100 bytes, Stack size 160 bytes, dispshowstatus.o(i.Dis_ShowTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = Dis_ShowTime &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVariColor
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_ShowRTC
</UL>

<P><STRONG><a name="[2da]"></a>DispShow_EndChargeDate</STRONG> (Thumb, 408 bytes, Stack size 32 bytes, displaymain.o(i.DispShow_EndChargeDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = DispShow_EndChargeDate &rArr; Dis_ShowStatus &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCDtoHEX
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStartFailType
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardDispose
</UL>

<P><STRONG><a name="[40d]"></a>DispShow_StatusDivInfo</STRONG> (Thumb, 206 bytes, Stack size 40 bytes, displaymain.o(i.DispShow_StatusDivInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = DispShow_StatusDivInfo &rArr; Dis_ShowDivStatus &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum16uVariable
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowDivStatus
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu44
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu43
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu42
</UL>

<P><STRONG><a name="[2f0]"></a>Disp_NetPageDispos</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, displaymain.o(i.Disp_NetPageDispos))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Disp_NetPageDispos
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_PricSet
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectUpNChargeRecode
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent9
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent83
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent82
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent8
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent44
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent43
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent42
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent4
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent10
</UL>

<P><STRONG><a name="[2cf]"></a>DisplayCommonMenu</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, dispkeyfunction.o(i.DisplayCommonMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum16uVariable
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBackImage
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetCountDownTime
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu3_CodeDispose
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu3_16_CodeDispose
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardDispose
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardAnalyze
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_PricSet
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectUpNChargeRecode
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectNextNChargeRecode
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectCurChargeRecode
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent9
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent83
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent82
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent81
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent80
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent8
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent79
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent78
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent77
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent76
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent75
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent74
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent73
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent7
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent60
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent6
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent59
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent58
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent57
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent56
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent54
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent53
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent52
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent51
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent50
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent49
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent48
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent47
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent46
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent44
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent43
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent42
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent41
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent40
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent4
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent39
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent38
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent37
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent36
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent34
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent33
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent32
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent3
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent28
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent27
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent26
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent25
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent24
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent23
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent22
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent21
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent16
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent14
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent10
</UL>

<P><STRONG><a name="[413]"></a>DisplayGunQRCode</STRONG> (Thumb, 1802 bytes, Stack size 216 bytes, displaymain.o(i.DisplayGunQRCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = DisplayGunQRCode &rArr; DisplayQRCode &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayQRCode
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[411]"></a>DisplayQRCode</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, dwinprotocol.o(i.DisplayQRCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = DisplayQRCode &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetDispUartStatus
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendTwoBytes
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendToUart
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendByteToBuf
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dwin_FrameHead
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayGunQRCode
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display66GunQRCode
</UL>

<P><STRONG><a name="[418]"></a>Display_HardwareInit</STRONG> (Thumb, 136 bytes, Stack size 64 bytes, displaymain.o(i.Display_HardwareInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = Display_HardwareInit &rArr; BSP_UARTConfigInit &rArr; BSP_UARTTxDMAConfigInit &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigInit
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[41b]"></a>Display_PricSet</STRONG> (Thumb, 1598 bytes, Stack size 240 bytes, displaymain.o(i.Display_PricSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = Display_PricSet &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum16uVariable
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_NetPageDispos
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu48_PrcDispose
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent83
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent82
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent81
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent80
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent79
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent78
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent77
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent76
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent75
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent74
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent73
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent47
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent46
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent3
</UL>

<P><STRONG><a name="[41c]"></a>Display_ShowNet</STRONG> (Thumb, 246 bytes, Stack size 40 bytes, displaymain.o(i.Display_ShowNet))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = Display_ShowNet &rArr; Dis_Show &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_Show
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_PortSert
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_NetNumSet
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_IP4Sert
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_IP3Sert
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_IP2Sert
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_IP1Sert
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent47
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent10
</UL>

<P><STRONG><a name="[41d]"></a>Display_ShowSet1</STRONG> (Thumb, 156 bytes, Stack size 56 bytes, displaymain.o(i.Display_ShowSet1))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = Display_ShowSet1 &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu52
</UL>

<P><STRONG><a name="[41e]"></a>Display_ShowSet2</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, displaymain.o(i.Display_ShowSet2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = Display_ShowSet2 &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum16uVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu53
</UL>

<P><STRONG><a name="[41f]"></a>Display_ShowSet3</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, displaymain.o(i.Display_ShowSet3))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = Display_ShowSet3 &rArr; Dis_Show &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_Show
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent57
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent53
</UL>

<P><STRONG><a name="[3da]"></a>Dispose_LocalUnLock</STRONG> (Thumb, 228 bytes, Stack size 120 bytes, card_cpu.o(i.Dispose_LocalUnLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = Dispose_LocalUnLock &rArr; APP_RWChargeRecode &rArr; APP_ChargeRecodeFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RWChargeRecode
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_FrameRx_Timeout
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCardWorkStatus
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardUart_MsgFree
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_InitWallet
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_WriterCardMoney
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetRecodeCurNum
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StartCard
</UL>

<P><STRONG><a name="[58d]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitRTC
</UL>

<P><STRONG><a name="[592]"></a>FLASH_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash
</UL>

<P><STRONG><a name="[424]"></a>FLASH_EraseSector</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, stm32f4xx_flash.o(i.FLASH_EraseSector))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_EraseSector &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash
</UL>

<P><STRONG><a name="[427]"></a>FLASH_GetStatus</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[594]"></a>FLASH_Lock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash
</UL>

<P><STRONG><a name="[52b]"></a>FLASH_PrefetchBufferCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_PrefetchBufferCmd))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[426]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f4xx_flash.o(i.FLASH_ProgramHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash
</UL>

<P><STRONG><a name="[52a]"></a>FLASH_SetLatency</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_SetLatency))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[591]"></a>FLASH_Unlock</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash
</UL>

<P><STRONG><a name="[425]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
</UL>

<P><STRONG><a name="[163]"></a>FTPDownloadDispose</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, modulesim7600.o(i.FTPDownloadDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = FTPDownloadDispose &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(i.Module_FTPDownload)
</UL>
<P><STRONG><a name="[42a]"></a>FTPDownloadWriter</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, modulesim7600.o(i.FTPDownloadWriter))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = FTPDownloadWriter &rArr; OTAFlashWriter &rArr; BootLoadWrite &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTAFlashWriter
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GRecv
</UL>

<P><STRONG><a name="[42c]"></a>FiveByteBcdToHex</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, dealwithchar.o(i.FiveByteBcdToHex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FiveByteBcdToHex
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteBcdToHex
</UL>
<BR>[Called By]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MeterDataAnalyse
</UL>

<P><STRONG><a name="[42d]"></a>FlishW25QXXInit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, w25qxx.o(i.FlishW25QXXInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FlishW25QXXInit &rArr; bsp_InitSPI2 &rArr; bsp_InitSPI2_IO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitSPI2
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadID
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_task_core
</UL>

<P><STRONG><a name="[32c]"></a>GPIO_Init</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, stm32f4xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MPLSInit
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOInit
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ADCInit
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_to_app
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_GPIOInit
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitSPI2_IO
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_RD2Init
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_PIN_CFG
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_PIN_CFG
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART6_PIN_CFG
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_PIN_CFG
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_PIN_CFG
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_PIN_CFG
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_PIN_CFG
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_PIN_CFG
</UL>

<P><STRONG><a name="[341]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_GPIOInit
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitSPI2_IO
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_PIN_CFG
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_PIN_CFG
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART6_PIN_CFG
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_PIN_CFG
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_PIN_CFG
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_PIN_CFG
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_PIN_CFG
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_PIN_CFG
</UL>

<P><STRONG><a name="[358]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MPLSScan
</UL>

<P><STRONG><a name="[4ce]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_RD2Init
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_RDCmd
</UL>

<P><STRONG><a name="[354]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOInit
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_RDCmd
</UL>

<P><STRONG><a name="[352]"></a>GPIO_WriteBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_WriteBit))
<BR><BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOOpen
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOClose
</UL>

<P><STRONG><a name="[23c]"></a>GetBMSBCPFitCheck</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, controlmain.o(i.GetBMSBCPFitCheck))
<BR><BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepB
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepA
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_BCPFitCheckGunB
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_BCPFitCheckGunA
</UL>

<P><STRONG><a name="[39a]"></a>GetBMSErrState</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, connectbms.o(i.GetBMSErrState))
<BR><BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrSwitch
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
</UL>

<P><STRONG><a name="[399]"></a>GetBMSInsulationCheck</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, controlmain.o(i.GetBMSInsulationCheck))
<BR><BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
</UL>

<P><STRONG><a name="[3a2]"></a>GetBMSSelfCheck</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, controlmain.o(i.GetBMSSelfCheck))
<BR><BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSSelfCheck
</UL>

<P><STRONG><a name="[2a5]"></a>GetBMSStartCharge</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, controlmain.o(i.GetBMSStartCharge))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSBMain
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSAMain
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepB
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepA
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorGunState
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskModulePeriod
</UL>

<P><STRONG><a name="[2a6]"></a>GetBMSStopCharge</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, controlmain.o(i.GetBMSStopCharge))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunB
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorGunState
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
</UL>

<P><STRONG><a name="[2ff]"></a>GetBMSStopOnce</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, controlmain.o(i.GetBMSStopOnce))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
</UL>

<P><STRONG><a name="[2dc]"></a>GetCardInfo</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, card_cpu.o(i.GetCardInfo))
<BR><BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardDispose
</UL>

<P><STRONG><a name="[3cc]"></a>GetCardInfoStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, card_cpu.o(i.GetCardInfoStatus))
<BR><BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCharge_StopCard
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCharge_StartCard
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StopCard
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StartCard
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_Query_Card
</UL>

<P><STRONG><a name="[436]"></a>GetCardWorkStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, card_cpu.o(i.GetCardWorkStatus))
<BR><BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCardDispose
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu3_16_CodeDispose
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu33
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu32
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu22
</UL>

<P><STRONG><a name="[257]"></a>GetChargeMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, controlmain.o(i.GetChargeMode))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSBMain
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSAMain
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepB
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepA
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSSelfCheck
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
</UL>

<P><STRONG><a name="[246]"></a>GetChargePauseState</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, controlmain.o(i.GetChargePauseState))
<BR><BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetCSSContext
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepB
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepA
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargePauseGunB
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargePauseGunA
</UL>

<P><STRONG><a name="[249]"></a>GetChargeReady</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, controlmain.o(i.GetChargeReady))
<BR><BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepB
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepA
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunB
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunA
</UL>

<P><STRONG><a name="[25a]"></a>GetChargeRunningState</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, controlmain.o(i.GetChargeRunningState))
<BR><BR>[Called By]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkState
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
</UL>

<P><STRONG><a name="[288]"></a>GetChargingInfo</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, charging_interface.o(i.GetChargingInfo))
<BR><BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_ChargeingDate
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRecode_Dispose
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu33
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetCSSContext
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetCSDContext
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendDevStateB
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendDevState
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendChargeInfoB
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendChargeInfoA
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCarInfoB
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCarInfoA
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendDevStateB
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendDevStateA
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvRateSet
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvRateFWSet
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendBill
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunBCmd13
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunACmd13
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPOffLineBill
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPFSOffLineBill
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendBill
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunBBSD
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunABSD
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBill
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreYKCBill
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHYBill
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPBill
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre66Bill
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateB
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateA
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendBill
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendTimeSharBill
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStopAck
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStartAck
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendBill
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunBCmd23
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunACmd23
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendPriodSJDataGunBCmd13
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendPriodSJDataGunACmd13
</UL>

<P><STRONG><a name="[379]"></a>GetChargingStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, charging_interface.o(i.GetChargingStatus))
<BR><BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartBillingInit
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculationBill
</UL>

<P><STRONG><a name="[271]"></a>GetCurMenu</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dispkeyfunction.o(i.GetCurMenu))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowTime
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowErr
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowDivStatus
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowCopy
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_Show
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_DisplayRecvDataAnalyze
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCardDispose
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardDispose
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_StatusDivInfo
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_PricSet
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowStatus
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent81
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent80
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent79
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent78
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent77
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent76
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent75
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent74
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent73
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent3
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DealWithKey
</UL>

<P><STRONG><a name="[381]"></a>GetCurRate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rs485meter.o(i.GetCurRate))
<BR><BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculationBill
</UL>

<P><STRONG><a name="[2e1]"></a>GetCurTime</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtc_task.o(i.GetCurTime))
<BR><BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_ShowRTC
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartBillingInit
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculationRate
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent57
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent46
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSetTimeAck
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreYKCBill
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHYBill
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPBill
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre66Bill
</UL>

<P><STRONG><a name="[37a]"></a>GetCurUnixTimestamp</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rtc_task.o(i.GetCurUnixTimestamp))
<BR><BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartBillingInit
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculationBill
</UL>

<P><STRONG><a name="[3ab]"></a>GetDealFaultOverState</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, controlmain.o(i.GetDealFaultOverState))
<BR><BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrSwitch
</UL>

<P><STRONG><a name="[2a9]"></a>GetElecLockState</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, controlmain.o(i.GetElecLockState))
<BR><BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSSelfCheck
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
</UL>

<P><STRONG><a name="[2a8]"></a>GetEmergencyState</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, controlmain.o(i.GetEmergencyState))
<BR><BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_State
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendChargeInfoB
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendChargeInfoA
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateB
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateA
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorRemoteSignalState
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
</UL>

<P><STRONG><a name="[34a]"></a>GetFormation</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, bsp_can.o(i.GetFormation))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetFormation
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CanDataProcess
</UL>

<P><STRONG><a name="[2d1]"></a>GetGunCardInfo</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, card_cpu.o(i.GetGunCardInfo))
<BR><BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_ChargeingDate
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRecode_Dispose
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardDispose
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardAnalyze
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculationBill
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPOffLineBill
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendCardInfo
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendCardInfo
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBill
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendCardInfo
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCardVinStart
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCardInfo
</UL>

<P><STRONG><a name="[2a3]"></a>GetGunState</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, controlmain.o(i.GetGunState))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_ACSW
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_State
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent81
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent80
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent79
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent78
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent77
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent76
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent75
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent74
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent73
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent3
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSSelfCheck
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendDevStateB
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendDevState
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendChargeInfoB
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendChargeInfoA
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendDevStateB
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendDevStateA
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunBCmd13
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunACmd13
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendStartAck
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBCStartAck
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateB
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateA
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorGunState
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendPriodSJDataGunBCmd13
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendPriodSJDataGunACmd13
</UL>

<P><STRONG><a name="[29d]"></a>GetJY_DCOutVolt</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, adsamplemain.o(i.GetJY_DCOutVolt))
<BR><BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
</UL>

<P><STRONG><a name="[40c]"></a>GetMeterStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, charging_interface.o(i.GetMeterStatus))
<BR><BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Period_GerDivStatus
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_State
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent3
</UL>

<P><STRONG><a name="[2aa]"></a>GetModuleReturnACVol</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, pcumain.o(i.GetModuleReturnACVol))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetModuleReturnACVol
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPcuControl
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetModuleInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
</UL>

<P><STRONG><a name="[37b]"></a>GetPowerChangeFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rs485meter.o(i.GetPowerChangeFlag))
<BR><BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculationBill
</UL>

<P><STRONG><a name="[2ab]"></a>GetPowerDCState</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, controlmain.o(i.GetPowerDCState))
<BR><BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
</UL>

<P><STRONG><a name="[24a]"></a>GetRM_DCOutVolt</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, adsamplemain.o(i.GetRM_DCOutVolt))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunB
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunA
</UL>

<P><STRONG><a name="[40e]"></a>GetRM_GunT1Temp</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, adsamplemain.o(i.GetRM_GunT1Temp))
<BR><BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_ShowGunT
</UL>

<P><STRONG><a name="[40f]"></a>GetRM_GunT2Temp</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, adsamplemain.o(i.GetRM_GunT2Temp))
<BR><BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_ShowGunT
</UL>

<P><STRONG><a name="[2af]"></a>GetRM_HandVolt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, adsamplemain.o(i.GetRM_HandVolt))
<BR><BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_HandSta
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorGunState
</UL>

<P><STRONG><a name="[24b]"></a>GetRS_BatReverse</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, adsamplemain.o(i.GetRS_BatReverse))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = GetRS_BatReverse &rArr; BSP_DataFilter &rArr; BubbleSort
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_DataFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunB
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunA
</UL>

<P><STRONG><a name="[593]"></a>GetSector</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, flashdatadeal.o(i.GetSector))
<BR><BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash
</UL>

<P><STRONG><a name="[2e0]"></a>GetStartFailType</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, controlmain.o(i.GetStartFailType))
<BR><BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_EndChargeDate
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunBCmd13
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunACmd13
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendPriodSJDataGunBCmd13
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendPriodSJDataGunACmd13
</UL>

<P><STRONG><a name="[434]"></a>GetWorkState</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, controlmain.o(i.GetWorkState))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GetWorkState
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargeRunningState
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPeriod
</UL>

<P><STRONG><a name="[435]"></a>Get_ErrLedState</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, controlmain.o(i.Get_ErrLedState))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Get_ErrLedState &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MPLSState
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPeriod
</UL>

<P><STRONG><a name="[3b5]"></a>Get_ModuleInfoNum</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, controlapp.o(i.Get_ModuleInfoNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Get_ModuleInfoNum
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Judge_ModuleSwitch
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Judge_Gun_FreeModule
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_UseAllMdule
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_AvegMode
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YKRSetModuleVI
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YKRReduceModule
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YKRFristOpenGun
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YKRAddModule
</UL>

<P><STRONG><a name="[2d2]"></a>HEXtoBCD</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, dwinprotocol.o(i.HEXtoBCD))
<BR><BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCGetTime
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu54_SetTimeDispose
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardAnalyze
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvTime
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPOffLineBill
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCardVinStart
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCardInfo
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvTime
</UL>

<P><STRONG><a name="[17]"></a>HYDisplayMenu10</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu10))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>HYDisplayMenu14</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu14))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>HYDisplayMenu16</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu16))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>HYDisplayMenu21</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu21))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>HYDisplayMenu22</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, dispkeyfunction.o(i.HYDisplayMenu22))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + Unknown Stack Size
<LI>Call Chain = HYDisplayMenu22 &rArr; SendCardMsg &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCardWorkStatus
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardMsg
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>HYDisplayMenu23</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu23))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>HYDisplayMenu24</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu24))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[25]"></a>HYDisplayMenu25</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu25))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[27]"></a>HYDisplayMenu26</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu26))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>HYDisplayMenu27</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu27))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>HYDisplayMenu28</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu28))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>HYDisplayMenu3</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu3))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[2d]"></a>HYDisplayMenu30</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu30))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[2f]"></a>HYDisplayMenu31</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu31))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[31]"></a>HYDisplayMenu32</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, dispkeyfunction.o(i.HYDisplayMenu32))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + Unknown Stack Size
<LI>Call Chain = HYDisplayMenu32 &rArr; SendCardMsg &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCardWorkStatus
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetChargeRecodeInfo
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardMsg
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[33]"></a>HYDisplayMenu33</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, dispkeyfunction.o(i.HYDisplayMenu33))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + Unknown Stack Size
<LI>Call Chain = HYDisplayMenu33 &rArr; SendCardMsg &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCardWorkStatus
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardMsg
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[35]"></a>HYDisplayMenu34</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu34))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[37]"></a>HYDisplayMenu35</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu35))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[39]"></a>HYDisplayMenu36</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, dispkeyfunction.o(i.HYDisplayMenu36))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = HYDisplayMenu36 &rArr; Dis_ShowStatus &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetChargeingInfo
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[3b]"></a>HYDisplayMenu37</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, dispkeyfunction.o(i.HYDisplayMenu37))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = HYDisplayMenu37 &rArr; Dis_ShowStatus &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetChargeingInfo
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[3d]"></a>HYDisplayMenu38</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dispkeyfunction.o(i.HYDisplayMenu38))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYDisplayMenu38 &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetCarInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[3f]"></a>HYDisplayMenu39</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dispkeyfunction.o(i.HYDisplayMenu39))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYDisplayMenu39 &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetCarInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>HYDisplayMenu4</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu4))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[41]"></a>HYDisplayMenu40</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu40))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[43]"></a>HYDisplayMenu41</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu41))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[45]"></a>HYDisplayMenu42</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu42))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = HYDisplayMenu42 &rArr; DispShow_StatusDivInfo &rArr; Dis_ShowDivStatus &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_StatusDivInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[47]"></a>HYDisplayMenu43</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu43))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = HYDisplayMenu43 &rArr; DispShow_StatusDivInfo &rArr; Dis_ShowDivStatus &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_StatusDivInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[49]"></a>HYDisplayMenu44</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu44))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = HYDisplayMenu44 &rArr; DispShow_StatusDivInfo &rArr; Dis_ShowDivStatus &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_StatusDivInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[4b]"></a>HYDisplayMenu46</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu46))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[4d]"></a>HYDisplayMenu47</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu47))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[4f]"></a>HYDisplayMenu48</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu48))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[51]"></a>HYDisplayMenu49</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu49))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[53]"></a>HYDisplayMenu50</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, dispkeyfunction.o(i.HYDisplayMenu50))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYDisplayMenu50 &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum16uVariable
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetChargeingInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[55]"></a>HYDisplayMenu51</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, dispkeyfunction.o(i.HYDisplayMenu51))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYDisplayMenu51 &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum16uVariable
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetChargeingInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[57]"></a>HYDisplayMenu52</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu52))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = HYDisplayMenu52 &rArr; Display_ShowSet1 &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowSet1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[59]"></a>HYDisplayMenu53</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu53))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYDisplayMenu53 &rArr; Display_ShowSet2 &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowSet2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[5b]"></a>HYDisplayMenu54</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu54))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[5d]"></a>HYDisplayMenu56</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu56))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[5f]"></a>HYDisplayMenu57</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu57))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[61]"></a>HYDisplayMenu58</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu58))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[63]"></a>HYDisplayMenu59</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu59))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>HYDisplayMenu6</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu6))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[65]"></a>HYDisplayMenu60</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu60))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>HYDisplayMenu7</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu7))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[67]"></a>HYDisplayMenu73</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu73))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[69]"></a>HYDisplayMenu74</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu74))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[6b]"></a>HYDisplayMenu75</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu75))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[6d]"></a>HYDisplayMenu76</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu76))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[6f]"></a>HYDisplayMenu77</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu77))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[71]"></a>HYDisplayMenu78</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu78))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[73]"></a>HYDisplayMenu79</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu79))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>HYDisplayMenu8</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu8))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[75]"></a>HYDisplayMenu80</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu80))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[77]"></a>HYDisplayMenu81</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu81))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[79]"></a>HYDisplayMenu82</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu82))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[7b]"></a>HYDisplayMenu83</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu83))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>HYDisplayMenu9</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkeyfunction.o(i.HYDisplayMenu9))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[43b]"></a>HYFreamSend</STRONG> (Thumb, 138 bytes, Stack size 520 bytes, hyframe.o(i.HYFreamSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = HYFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_crc_Data
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendVinInfo
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendQueryRateAck
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendUpdataAck
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendStopAck
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendStartAck
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendRateAck
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateB
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateA
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendCardInfo
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendBillData
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendBill
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendRegister
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendHear
</UL>

<P><STRONG><a name="[16]"></a>HYKeyEvent10</STRONG> (Thumb, 1320 bytes, Stack size 48 bytes, dispkey.o(i.HYKeyEvent10))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent10 &rArr; Display_ShowNet &rArr; Dis_Show &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowNet
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_NetPageDispos
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>HYKeyEvent14</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dispkey.o(i.HYKeyEvent14))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent14 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>HYKeyEvent16</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, dispkey.o(i.HYKeyEvent16))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent16 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>HYKeyEvent21</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, dispkey.o(i.HYKeyEvent21))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent21 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>HYKeyEvent22</STRONG> (Thumb, 304 bytes, Stack size 16 bytes, dispkey.o(i.HYKeyEvent22))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent22 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SetStartType
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_VIN_Success
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_StartCharge
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>HYKeyEvent23</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, dispkey.o(i.HYKeyEvent23))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent23 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyControl
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>HYKeyEvent24</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, dispkey.o(i.HYKeyEvent24))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent24 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>HYKeyEvent25</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, dispkey.o(i.HYKeyEvent25))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent25 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>HYKeyEvent26</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, dispkey.o(i.HYKeyEvent26))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent26 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[28]"></a>HYKeyEvent27</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, dispkey.o(i.HYKeyEvent27))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent27 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>HYKeyEvent28</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, dispkey.o(i.HYKeyEvent28))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent28 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>HYKeyEvent3</STRONG> (Thumb, 514 bytes, Stack size 40 bytes, dispkey.o(i.HYKeyEvent3))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent3 &rArr; Display_PricSet &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenLOCK
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyControl
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMeterStatus
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_PricSet
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectCurChargeRecode
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetWorkState
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetRecodeCurNum
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetErrState
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ClearRecodeInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[2c]"></a>HYKeyEvent30</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkey.o(i.HYKeyEvent30))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[2e]"></a>HYKeyEvent31</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkey.o(i.HYKeyEvent31))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[30]"></a>HYKeyEvent32</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, dispkey.o(i.HYKeyEvent32))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent32 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[32]"></a>HYKeyEvent33</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, dispkey.o(i.HYKeyEvent33))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent33 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[34]"></a>HYKeyEvent34</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, dispkey.o(i.HYKeyEvent34))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent34 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[36]"></a>HYKeyEvent35</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dispkey.o(i.HYKeyEvent35))
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[38]"></a>HYKeyEvent36</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, dispkey.o(i.HYKeyEvent36))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent36 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_GetStartType
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_StopCharge
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[3a]"></a>HYKeyEvent37</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, dispkey.o(i.HYKeyEvent37))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent37 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_GetStartType
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_StopCharge
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[3c]"></a>HYKeyEvent38</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, dispkey.o(i.HYKeyEvent38))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent38 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[3e]"></a>HYKeyEvent39</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, dispkey.o(i.HYKeyEvent39))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent39 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>HYKeyEvent4</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, dispkey.o(i.HYKeyEvent4))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent4 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_NetPageDispos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[40]"></a>HYKeyEvent40</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, dispkey.o(i.HYKeyEvent40))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent40 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[42]"></a>HYKeyEvent41</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, dispkey.o(i.HYKeyEvent41))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent41 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[44]"></a>HYKeyEvent42</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, dispkey.o(i.HYKeyEvent42))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent42 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_NetPageDispos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[46]"></a>HYKeyEvent43</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, dispkey.o(i.HYKeyEvent43))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent43 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_NetPageDispos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[48]"></a>HYKeyEvent44</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, dispkey.o(i.HYKeyEvent44))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent44 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_NetPageDispos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[4a]"></a>HYKeyEvent46</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, dispkey.o(i.HYKeyEvent46))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent46 &rArr; Display_PricSet &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTime
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurTime
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_PricSet
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[4c]"></a>HYKeyEvent47</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, dispkey.o(i.HYKeyEvent47))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent47 &rArr; Display_PricSet &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardMsg
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowNet
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_PricSet
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[4e]"></a>HYKeyEvent48</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, dispkey.o(i.HYKeyEvent48))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent48 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDwinVariable
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[50]"></a>HYKeyEvent49</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, dispkey.o(i.HYKeyEvent49))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent49 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[52]"></a>HYKeyEvent50</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, dispkey.o(i.HYKeyEvent50))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent50 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDwinVariable
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStopChargeMsg
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[54]"></a>HYKeyEvent51</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, dispkey.o(i.HYKeyEvent51))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent51 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDwinVariable
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStopChargeMsg
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[56]"></a>HYKeyEvent52</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, dispkey.o(i.HYKeyEvent52))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent52 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[58]"></a>HYKeyEvent53</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, dispkey.o(i.HYKeyEvent53))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent53 &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowSet3
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetRecodeCurNum
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[5a]"></a>HYKeyEvent54</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, dispkey.o(i.HYKeyEvent54))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent54 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDwinVariable
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[5c]"></a>HYKeyEvent56</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, dispkey.o(i.HYKeyEvent56))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent56 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[5e]"></a>HYKeyEvent57</STRONG> (Thumb, 626 bytes, Stack size 40 bytes, dispkey.o(i.HYKeyEvent57))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent57 &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTime
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurTime
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowSet3
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[60]"></a>HYKeyEvent58</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, dispkey.o(i.HYKeyEvent58))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent58 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStopChargeMsg
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStartChargeMsg
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[62]"></a>HYKeyEvent59</STRONG> (Thumb, 470 bytes, Stack size 40 bytes, dispkey.o(i.HYKeyEvent59))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent59 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStopChargeMsg
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStartChargeMsg
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>HYKeyEvent6</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dispkey.o(i.HYKeyEvent6))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent6 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[64]"></a>HYKeyEvent60</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dispkey.o(i.HYKeyEvent60))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent60 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>HYKeyEvent7</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, dispkey.o(i.HYKeyEvent7))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent7 &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ClearRecodeInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[66]"></a>HYKeyEvent73</STRONG> (Thumb, 468 bytes, Stack size 24 bytes, dispkey.o(i.HYKeyEvent73))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent73 &rArr; Display_PricSet &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenLOCK
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyControl
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_PricSet
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectCurChargeRecode
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetWorkState
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetRecodeCurNum
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ClearRecodeInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[68]"></a>HYKeyEvent74</STRONG> (Thumb, 502 bytes, Stack size 24 bytes, dispkey.o(i.HYKeyEvent74))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent74 &rArr; Display_PricSet &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenLOCK
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyControl
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_PricSet
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectCurChargeRecode
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetWorkState
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetRecodeCurNum
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ClearRecodeInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[6a]"></a>HYKeyEvent75</STRONG> (Thumb, 500 bytes, Stack size 24 bytes, dispkey.o(i.HYKeyEvent75))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent75 &rArr; Display_PricSet &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenLOCK
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyControl
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_PricSet
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectCurChargeRecode
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetWorkState
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetRecodeCurNum
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ClearRecodeInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[6c]"></a>HYKeyEvent76</STRONG> (Thumb, 534 bytes, Stack size 24 bytes, dispkey.o(i.HYKeyEvent76))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent76 &rArr; Display_PricSet &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenLOCK
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyControl
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_PricSet
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectCurChargeRecode
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetWorkState
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetRecodeCurNum
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ClearRecodeInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[6e]"></a>HYKeyEvent77</STRONG> (Thumb, 534 bytes, Stack size 24 bytes, dispkey.o(i.HYKeyEvent77))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent77 &rArr; Display_PricSet &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenLOCK
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyControl
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_PricSet
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectCurChargeRecode
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetWorkState
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetRecodeCurNum
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ClearRecodeInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[70]"></a>HYKeyEvent78</STRONG> (Thumb, 534 bytes, Stack size 24 bytes, dispkey.o(i.HYKeyEvent78))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent78 &rArr; Display_PricSet &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenLOCK
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyControl
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_PricSet
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectCurChargeRecode
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetWorkState
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetRecodeCurNum
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ClearRecodeInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[72]"></a>HYKeyEvent79</STRONG> (Thumb, 534 bytes, Stack size 24 bytes, dispkey.o(i.HYKeyEvent79))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent79 &rArr; Display_PricSet &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenLOCK
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyControl
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_PricSet
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectCurChargeRecode
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetWorkState
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetRecodeCurNum
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ClearRecodeInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>HYKeyEvent8</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, dispkey.o(i.HYKeyEvent8))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent8 &rArr; APP_SelectNextNChargeRecode &rArr; APP_RWChargeRecode &rArr; APP_ChargeRecodeFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_NetPageDispos
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectUpNChargeRecode
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectNextNChargeRecode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[74]"></a>HYKeyEvent80</STRONG> (Thumb, 534 bytes, Stack size 24 bytes, dispkey.o(i.HYKeyEvent80))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent80 &rArr; Display_PricSet &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenLOCK
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyControl
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_PricSet
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectCurChargeRecode
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetWorkState
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetRecodeCurNum
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ClearRecodeInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[76]"></a>HYKeyEvent81</STRONG> (Thumb, 534 bytes, Stack size 24 bytes, dispkey.o(i.HYKeyEvent81))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent81 &rArr; Display_PricSet &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenLOCK
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyControl
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_PricSet
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectCurChargeRecode
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetWorkState
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetRecodeCurNum
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ClearRecodeInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[78]"></a>HYKeyEvent82</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, dispkey.o(i.HYKeyEvent82))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent82 &rArr; Display_PricSet &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_PricSet
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_NetPageDispos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[7a]"></a>HYKeyEvent83</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, dispkey.o(i.HYKeyEvent83))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent83 &rArr; Display_PricSet &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_PricSet
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_NetPageDispos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>HYKeyEvent9</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, dispkey.o(i.HYKeyEvent9))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = HYKeyEvent9 &rArr; APP_SelectUpNChargeRecode &rArr; APP_RWChargeRecode &rArr; APP_ChargeRecodeFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_NetPageDispos
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectUpNChargeRecode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menudisp.o(.data)
</UL>
<P><STRONG><a name="[442]"></a>HY_RecvFrameDispose</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, hyframe.o(i.HY_RecvFrameDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HY_RecvFrameDispose
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_RecvFrameDispose
</UL>

<P><STRONG><a name="[446]"></a>HY_SendBill</STRONG> (Thumb, 574 bytes, Stack size 40 bytes, hyframe.o(i.HY_SendBill))
<BR><BR>[Stack]<UL><LI>Max Depth = 728 + Unknown Stack Size
<LI>Call Chain = HY_SendBill &rArr; HYFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriterFmBill
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetStopChargeReason
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetMeterPowerInfo
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYFreamSend
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendBill
</UL>

<P><STRONG><a name="[447]"></a>HY_SendBillData</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, hyframe.o(i.HY_SendBillData))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = HY_SendBillData &rArr; HYFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYFreamSend
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReSendBill
</UL>

<P><STRONG><a name="[448]"></a>HY_SendCardInfo</STRONG> (Thumb, 290 bytes, Stack size 224 bytes, hyframe.o(i.HY_SendCardInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 912 + Unknown Stack Size
<LI>Call Chain = HY_SendCardInfo &rArr; HYFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunCardInfo
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYFreamSend
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendCardInfo
</UL>

<P><STRONG><a name="[bf]"></a>HY_SendDevStateA</STRONG> (Thumb, 346 bytes, Stack size 32 bytes, hyframe.o(i.HY_SendDevStateA))
<BR><BR>[Stack]<UL><LI>Max Depth = 720 + Unknown Stack Size
<LI>Call Chain = HY_SendDevStateA &rArr; HYFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmergencyState
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGunNum
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetMeterPowerInfo
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYFreamSend
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendDevState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hyframe.o(.data)
</UL>
<P><STRONG><a name="[c0]"></a>HY_SendDevStateB</STRONG> (Thumb, 382 bytes, Stack size 32 bytes, hyframe.o(i.HY_SendDevStateB))
<BR><BR>[Stack]<UL><LI>Max Depth = 720 + Unknown Stack Size
<LI>Call Chain = HY_SendDevStateB &rArr; HYFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmergencyState
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGunNum
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetMeterPowerInfo
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYFreamSend
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendDevState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hyframe.o(.data)
</UL>
<P><STRONG><a name="[449]"></a>HY_SendFrameDispose</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, hyframe.o(i.HY_SendFrameDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = HY_SendFrameDispose &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendFrameDispose
</UL>

<P><STRONG><a name="[44b]"></a>HY_SendQueryRateAck</STRONG> (Thumb, 58 bytes, Stack size 112 bytes, hyframe.o(i.HY_SendQueryRateAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 800 + Unknown Stack Size
<LI>Call Chain = HY_SendQueryRateAck &rArr; HYFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYFreamSend
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[44c]"></a>HY_SendRateAck</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hyframe.o(i.HY_SendRateAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = HY_SendRateAck &rArr; HYFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYFreamSend
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendRateAck
</UL>

<P><STRONG><a name="[44e]"></a>HY_SendStartAck</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, hyframe.o(i.HY_SendStartAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = HY_SendStartAck &rArr; HYFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYFreamSend
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendStartAck
</UL>

<P><STRONG><a name="[44f]"></a>HY_SendStopAck</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, hyframe.o(i.HY_SendStopAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 696 + Unknown Stack Size
<LI>Call Chain = HY_SendStopAck &rArr; HYFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYFreamSend
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendStopAck
</UL>

<P><STRONG><a name="[443]"></a>HY_SendUpdataAck</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hyframe.o(i.HY_SendUpdataAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 696 + Unknown Stack Size
<LI>Call Chain = HY_SendUpdataAck &rArr; HYFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYFreamSend
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvHearAck
</UL>

<P><STRONG><a name="[44a]"></a>HY_SendVinInfo</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, hyframe.o(i.HY_SendVinInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = HY_SendVinInfo &rArr; HYFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYFreamSend
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendHear
</UL>

<P><STRONG><a name="[f7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[27b]"></a>IWDG_Config</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, main.o(i.IWDG_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IWDG_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_WriteAccessCmd
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetReload
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetPrescaler
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_task_core
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
</UL>

<P><STRONG><a name="[5a8]"></a>IWDG_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_iwdg.o(i.IWDG_Enable), UNUSED)

<P><STRONG><a name="[279]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_iwdg.o(i.IWDG_ReloadCounter))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskUsbTask
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_task_core
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
</UL>

<P><STRONG><a name="[451]"></a>IWDG_SetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_iwdg.o(i.IWDG_SetPrescaler))
<BR><BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[452]"></a>IWDG_SetReload</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_iwdg.o(i.IWDG_SetReload))
<BR><BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[450]"></a>IWDG_WriteAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_iwdg.o(i.IWDG_WriteAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[453]"></a>InitCAN_Module</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, modulemanage.o(i.InitCAN_Module))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = InitCAN_Module &rArr; BSP_CAN_Init &rArr; CAN_Configuration &rArr; CAN_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Init
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskModuleRx
</UL>

<P><STRONG><a name="[454]"></a>InitConnectBMSACAN</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, connectbms.o(i.InitConnectBMSACAN))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = InitConnectBMSACAN &rArr; BSP_CAN_Init &rArr; CAN_Configuration &rArr; CAN_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Init
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSAMain
</UL>

<P><STRONG><a name="[455]"></a>InitConnectBMSBCAN</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, connectbms.o(i.InitConnectBMSBCAN))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = InitConnectBMSBCAN &rArr; BSP_CAN_Init &rArr; CAN_Configuration &rArr; CAN_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Init
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSBMain
</UL>

<P><STRONG><a name="[53b]"></a>IsEmpty</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bsp_uart.o(i.IsEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveMsgHook
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PopOneByte
</UL>

<P><STRONG><a name="[53d]"></a>IsFull</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, bsp_uart.o(i.IsFull))
<BR><BR>[Called By]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PushOneByte
</UL>

<P><STRONG><a name="[43e]"></a>KeyControl</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, dwinprotocol.o(i.KeyControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = KeyControl &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetDispUartStatus
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendToUart
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendByteToBuf
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dwin_FrameHead
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent81
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent80
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent79
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent78
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent77
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent76
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent75
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent74
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent73
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent3
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent23
</UL>

<P><STRONG><a name="[f8]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[45e]"></a>MeterDataAnalyse</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, rs485meter.o(i.MeterDataAnalyse))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = MeterDataAnalyse &rArr; FiveByteBcdToHex
</UL>
<BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FiveByteBcdToHex
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPowerChangeFlag
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareAddr
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMeterTask
</UL>

<P><STRONG><a name="[52e]"></a>ModuleInfoIint</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, controlapp.o(i.ModuleInfoIint))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ModuleInfoIint
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPCUControl
</UL>

<P><STRONG><a name="[3e9]"></a>ModuleSIM7600_ConnectServer</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, modulesim7600.o(i.ModuleSIM7600_ConnectServer))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = ModuleSIM7600_ConnectServer &rArr; Module_ConnectServer &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_NETOPEN
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_ConnectServer
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Connect_4G
</UL>

<P><STRONG><a name="[30e]"></a>ModuleSIM7600_SendData</STRONG> (Thumb, 386 bytes, Stack size 104 bytes, modulesim7600.o(i.ModuleSIM7600_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTWrite
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSIM7600Mode
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetModuleConnectState
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendRegister
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendHear
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendDevStateB
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendDevState
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStartApp
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendSetPricB47Ack
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendSetPricB2Ack
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendRegister
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendHear
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendChargeInfoB
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendChargeInfoA
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCarInfoB
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCarInfoA
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66FreamSend
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendStartCharge
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendBill
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendVinWLAck
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendVinCardResAck
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCardWLAck
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendVinInfo
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendTimeSharBill
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStopAck
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStartAck
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendSetTimeAck
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendOffLineBillFSData
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendOffLineBillData
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCardVinStart
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCardInfo
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendBillData
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendBill
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYFreamSend
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
</UL>

<P><STRONG><a name="[466]"></a>Module_FTPDownload</STRONG> (Thumb, 548 bytes, Stack size 48 bytes, modulesim7600.o(i.Module_FTPDownload))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = Module_FTPDownload &rArr; Send_AT_CFTPSLOGIN &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BootLoadWrite
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvDataControl
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_EnterATCmd
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CFTPSTYPE
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CFTPSSTART
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CFTPSRead
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CFTPSLOGIN
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CFTPSGET
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
</UL>

<P><STRONG><a name="[46e]"></a>Module_HTTPDownload</STRONG> (Thumb, 498 bytes, Stack size 40 bytes, modulesim7600.o(i.Module_HTTPDownload))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = Module_HTTPDownload &rArr; Send_AT_HTTPPAR &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BootLoadWrite
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvDataControl
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_READ
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_HTTPTERM
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_HTTPPAR
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_HTTPINIT
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_GET
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_EnterATCmd
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
</UL>

<P><STRONG><a name="[3e8]"></a>Module_SIM7600Test</STRONG> (Thumb, 380 bytes, Stack size 24 bytes, modulesim7600.o(i.Module_SIM7600Test))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = Module_SIM7600Test &rArr; Send_AT_CSQ &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CSQ
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CIPMODE
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_SetCIPRXGET
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_NOTCIPMODE
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CIMI
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CGDCONT
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Connect_4G
</UL>

<P><STRONG><a name="[258]"></a>NB_WriterReason</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, displaymain.o(i.NB_WriterReason))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NB_WriterReason
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu51_HANDBDispose
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu50_HANDADispose
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_SOCThreshold
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardDispose
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardAnalyze
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent37
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent36
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepB
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepA
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepB
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepA
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrSwitch
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSSelfCheck
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
</UL>

<P><STRONG><a name="[f6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[47b]"></a>NVIC_Configuration</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, sysconfig.o(i.NVIC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = NVIC_Configuration &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVectorTable
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47e]"></a>NVIC_Init</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>

<P><STRONG><a name="[47d]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>

<P><STRONG><a name="[47c]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, misc.o(i.NVIC_SetVectorTable))
<BR><BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>

<P><STRONG><a name="[2d6]"></a>Net_StartCharge</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, displaymain.o(i.Net_StartCharge))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = Net_StartCharge &rArr; SendPricMsg &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPricMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardAnalyze
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent22
</UL>

<P><STRONG><a name="[2d7]"></a>Net_StopCharge</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, displaymain.o(i.Net_StopCharge))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = Net_StopCharge &rArr; SendStopChargeMsg &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStopChargeMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardAnalyze
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent37
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent36
</UL>

<P><STRONG><a name="[47f]"></a>OSEventNameSet</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ucos_ii.o(i.OSEventNameSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSEventNameSet
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Init
</UL>

<P><STRONG><a name="[480]"></a>OSInit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, ucos_ii.o(i.OSInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = OSInit &rArr; OSTmr_Init &rArr; OSTmr_InitTask &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInitHookEnd
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInitHookBegin
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_QInit
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemInit
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagInit
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Init
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskStat
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTCBList
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitRdyList
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitMisc
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitEventList
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[481]"></a>OSInitHookBegin</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSInitHookBegin))
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[48c]"></a>OSInitHookEnd</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSInitHookEnd))
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[36f]"></a>OSIntEnter</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ucos_ii.o(i.OSIntEnter))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_IRQHandler
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_IRQHandler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_IRQHandler
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickHandler
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN3_TX_IRQHandler
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN3_RX0_IRQHandler
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_TX_IRQHandler
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_RX0_IRQHandler
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_TX_IRQHandler
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[370]"></a>OSIntExit</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, ucos_ii.o(i.OSIntExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntCtxSw
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SchedNew
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_IRQHandler
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_IRQHandler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_IRQHandler
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickHandler
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN3_TX_IRQHandler
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN3_RX0_IRQHandler
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_TX_IRQHandler
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_RX0_IRQHandler
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_TX_IRQHandler
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[34b]"></a>OSMboxPost</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, ucos_ii.o(i.OSMboxPost))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + Unknown Stack Size
<LI>Call Chain = OSMboxPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CanDataProcess
</UL>

<P><STRONG><a name="[360]"></a>OSMemCreate</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, ucos_ii.o(i.OSMemCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = OSMemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigTimeInit
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigInit
</UL>

<P><STRONG><a name="[491]"></a>OSMemGet</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, ucos_ii.o(i.OSMemGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSMemGet
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveMsgHook
</UL>

<P><STRONG><a name="[492]"></a>OSMemPut</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, ucos_ii.o(i.OSMemPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSMemPut
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_FreeOneMsg
</UL>

<P><STRONG><a name="[493]"></a>OSMutexCreate</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, ucos_ii.o(i.OSMutexCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = OSMutexCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskModuleTx
</UL>

<P><STRONG><a name="[462]"></a>OSMutexPend</STRONG> (Thumb, 468 bytes, Stack size 48 bytes, ucos_ii.o(i.OSMutexPend))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>

<P><STRONG><a name="[463]"></a>OSMutexPost</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, ucos_ii.o(i.OSMutexPost))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutex_RdyAtPrio
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>

<P><STRONG><a name="[26e]"></a>OSQCreate</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, ucos_ii.o(i.OSQCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSQCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskADJust
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_HardwareInit
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_Init
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_HardwareInit
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485MetterInit
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingInit
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSendBMSBFrame
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSendBMSAFrame
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitConnectBMSBCAN
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitConnectBMSACAN
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSRecv_HardwareInit
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ControlInit
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPCUControl
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPCUMain
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCAN_Module
</UL>

<P><STRONG><a name="[498]"></a>OSQFlush</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ucos_ii.o(i.OSQFlush))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OSQFlush
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSBMain
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSAMain
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCardStk
</UL>

<P><STRONG><a name="[393]"></a>OSQPend</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, ucos_ii.o(i.OSQPend))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskControlGunB
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskControlGunA
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCardStk
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskBillStk
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskADJust
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GRecv
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitCardmessage
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardUart_MsgFree
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMeterTask
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitConnectBMSmessageB
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitConnectBMSmessageA
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSendBMSBFrame
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSendBMSAFrame
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPCUControl
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskModuleRx
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPCUMain
</UL>

<P><STRONG><a name="[23f]"></a>OSQPost</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, ucos_ii.o(i.OSQPost))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + Unknown Stack Size
<LI>Call Chain = OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GRecv
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CanDataProcess
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveMsgHook
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPricMsg
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu60_Just2Dispose
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu60_Just1Dispose
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu59_Just2Dispose
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu59_Just1Dispose
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu58_Just2Dispose
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu58_Just1Dispose
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu57_Just2Dispose
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu57_Just1Dispose
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_State
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardAnalyze
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispMsg_Send
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MeterToDispMsg_StopCharge
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStopChargeMsg
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStartChargeMsg
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardMsg
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent59
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepB
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepA
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepB
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepA
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrSwitch
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeEndStepB
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeEndStepA
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSSelfCheck
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrMethodC
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrMethodB
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrMethodA
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvTime
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvSTCmd
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvPricB47
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvPricB2
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvCardVinStartB11
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvCardB9
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvCardB7
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvB21VINCardRes
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvB19VINWL
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvB17CardWL
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvB16OFFLineRco
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvStopCharge
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvStartCharge
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvSetInfo
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvRateSet
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvRateFWSet
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvQueryRate
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvQueryBill
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunB
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunB
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunA
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelfCheckFailGunB
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelfCheckFailGunA
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunB
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunA
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargePauseGunB
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargePauseGunA
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_BatChargeAdjust
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvUpdate
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvTime
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvStop
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvStart
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvReadData
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvQRcode
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvPricSet
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvCard
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvBalance
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_BCRecvStart
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_BCRecvCard
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvStopCharge
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvStartCharge
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvRateSet
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvQueryRate
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvQueryBill
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvDevInfoAck
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvRegisterAck
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvPrimodelAck
</UL>

<P><STRONG><a name="[2b9]"></a>OSSchedLock</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ucos_ii.o(i.OSSchedLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OSSchedLock
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPeriod
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Task
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetDispUartStatus
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendByteToBuf
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendBufLenClear
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMeterTask
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MeterDataAnalyse
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetCountDownTime
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCurMenu
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_StopCharge
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_StartCharge
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reply_BMSFrame_CTSB
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reply_BMSFrame_CTSA
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcuRemoteSignalState
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reply_TPCM_EndofMsgAckFrameB
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reply_TPCM_EndofMsgAckFrameA
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTS_SendSynTimeMessageB
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTS_SendSynTimeMessageA
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CST_DeviceEndChargeB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CST_DeviceEndChargeA
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSD_DeviceChargeEndStatisticsB
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSD_DeviceChargeEndStatisticsA
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRO_SendChargeDevUnstandbyB
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRO_SendChargeDevUnstandbyA
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRO_SendChargeDevStandbyB
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRO_SendChargeDevStandbyA
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRM_SendShakeHandIdentifyFrameB
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRM_SendShakeHandIdentifyFrameA
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CML_SendMaxVolandCurB
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CML_SendMaxVolandCurA
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHM_SendShakeHandFrameB
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHM_SendShakeHandFrameA
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CEM_DeviceChargeErrB
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CEM_DeviceChargeErrA
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_DeviceChargeStateB
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_DeviceChargeStateA
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_ModuleInfo
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunB
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunB
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunA
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_ReadDone_Ack
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_ReadData_Ack
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_HttpStart_Ack
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_HttpGet_Ack
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_HttpConect_Ack
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_FTPStart_Ack
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_FTPLOGIN_Ack
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_CFTPSTYPE_Ack
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_CFTPSGET_Ack
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_SetReAct_Ack
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_SendAck1Cmd_Ack
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_SendAck0Cmd_Ack
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_NETOPEN_Ack
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ConnectServer1_Ack
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ConnectServer1Cmd_Ack
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ConnectServer0_Ack
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ConnectServer0Cmd_Ack
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_CSQ_Ack
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_CIPMODE_Ack
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_CIMI_Ack
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_CGDCONT_Ack
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PeriodControlDataUpdata
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserModule_FailOffline_Dispose
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_DemandChargeDispose
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPCUMain
</UL>

<P><STRONG><a name="[2ba]"></a>OSSchedUnlock</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, ucos_ii.o(i.OSSchedUnlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPeriod
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Task
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetDispUartStatus
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendByteToBuf
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendBufLenClear
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMeterTask
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MeterDataAnalyse
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetCountDownTime
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCurMenu
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_StopCharge
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_StartCharge
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reply_BMSFrame_CTSB
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reply_BMSFrame_CTSA
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcuRemoteSignalState
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reply_TPCM_EndofMsgAckFrameB
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reply_TPCM_EndofMsgAckFrameA
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTS_SendSynTimeMessageB
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTS_SendSynTimeMessageA
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CST_DeviceEndChargeB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CST_DeviceEndChargeA
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSD_DeviceChargeEndStatisticsB
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSD_DeviceChargeEndStatisticsA
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRO_SendChargeDevUnstandbyB
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRO_SendChargeDevUnstandbyA
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRO_SendChargeDevStandbyB
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRO_SendChargeDevStandbyA
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRM_SendShakeHandIdentifyFrameB
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRM_SendShakeHandIdentifyFrameA
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CML_SendMaxVolandCurB
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CML_SendMaxVolandCurA
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHM_SendShakeHandFrameB
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHM_SendShakeHandFrameA
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CEM_DeviceChargeErrB
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CEM_DeviceChargeErrA
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_DeviceChargeStateB
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_DeviceChargeStateA
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_ModuleInfo
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunB
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunB
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunA
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_ReadDone_Ack
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_ReadData_Ack
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_HttpStart_Ack
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_HttpGet_Ack
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_HttpConect_Ack
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_FTPStart_Ack
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_FTPLOGIN_Ack
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_CFTPSTYPE_Ack
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_CFTPSGET_Ack
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_SetReAct_Ack
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_SendAck1Cmd_Ack
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_SendAck0Cmd_Ack
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_NETOPEN_Ack
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ConnectServer1_Ack
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ConnectServer1Cmd_Ack
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ConnectServer0_Ack
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_ConnectServer0Cmd_Ack
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_CSQ_Ack
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_CIPMODE_Ack
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_CIMI_Ack
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_CGDCONT_Ack
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PeriodControlDataUpdata
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserModule_FailOffline_Dispose
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_DemandChargeDispose
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPCUMain
</UL>

<P><STRONG><a name="[499]"></a>OSSemCreate</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ucos_ii.o(i.OSSemCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Init
</UL>

<P><STRONG><a name="[49a]"></a>OSSemPend</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, ucos_ii.o(i.OSSemPend))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Task
</UL>

<P><STRONG><a name="[49b]"></a>OSSemPost</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, ucos_ii.o(i.OSSemPost))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + Unknown Stack Size
<LI>Call Chain = OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrSignal
</UL>

<P><STRONG><a name="[49c]"></a>OSStart</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ucos_ii.o(i.OSStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OSStart
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStartHighRdy
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SchedNew
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[49e]"></a>OSTCBInitHook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTCBInitHook))
<BR><BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TCBInitHook
</UL>
<BR>[Called By]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
</UL>

<P><STRONG><a name="[4a0]"></a>OSTaskCreateExt</STRONG> (Thumb, 140 bytes, Stack size 64 bytes, ucos_ii.o(i.OSTaskCreateExt))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkInit
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStkClr
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestMain
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSBMain
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSAMain
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_task_core
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskStat
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_InitTask
</UL>

<P><STRONG><a name="[4a4]"></a>OSTaskCreateHook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTaskCreateHook))
<BR><BR>[Calls]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskCreateHook
</UL>
<BR>[Called By]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
</UL>

<P><STRONG><a name="[4a6]"></a>OSTaskDel</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, ucos_ii.o(i.OSTaskDel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = OSTaskDel &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelHook
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagUnlink
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemove
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Dummy
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskReturn
</UL>

<P><STRONG><a name="[4a9]"></a>OSTaskDelHook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTaskDelHook))
<BR><BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskDelHook
</UL>
<BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[4ab]"></a>OSTaskIdleHook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTaskIdleHook))
<BR><BR>[Calls]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskIdleHook
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskIdle
</UL>

<P><STRONG><a name="[4ad]"></a>OSTaskReturnHook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTaskReturnHook))
<BR><BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskReturnHook
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskReturn
</UL>

<P><STRONG><a name="[4af]"></a>OSTaskStatHook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTaskStatHook))
<BR><BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStatHook
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
</UL>

<P><STRONG><a name="[4b1]"></a>OSTaskStkChk</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, ucos_ii.o(i.OSTaskStkChk))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSTaskStkChk
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStatStkChk
</UL>

<P><STRONG><a name="[4a2]"></a>OSTaskStkInit</STRONG> (Thumb, 258 bytes, Stack size 8 bytes, os_cpu_c.o(i.OSTaskStkInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTaskStkInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>

<P><STRONG><a name="[396]"></a>OSTaskSuspend</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, ucos_ii.o(i.OSTaskSuspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = OSTaskSuspend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskRTC
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_HardwareInit
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_Init
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_HardwareInit
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485MetterInit
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingInit
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSRecv_HardwareInit
</UL>

<P><STRONG><a name="[162]"></a>OSTaskSwHook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTaskSwHook))
<BR><BR>[Calls]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskSwHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_a.o(.text)
</UL>
<P><STRONG><a name="[4b3]"></a>OSTick_Init</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, sysconfig.o(i.OSTick_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OSTick_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayInit
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[240]"></a>OSTimeDly</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, ucos_ii.o(i.OSTimeDly))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskUsbTask
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSample
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskRTC
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPeriod
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMeterStk
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskControlGunB
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskControlGunA
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSBMain
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSAMain
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCardStk
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskBillStk
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GRecv
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_task_core
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTWrite
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVariColor
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDwinVariable
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTime
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum32uVariable
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum16uVariable
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintIcon
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PraPerprintBackImage
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyControl
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayQRCode
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendToUart
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ParaInit
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAnalysis
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_WriterBlock
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_ReadBlock
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_InitWallet
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AuthKey
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_ActiveCard
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCharge_StopCard
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCharge_StartCard
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StopCard
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StartCard
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_Query_Card
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchMeterData
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardMsg
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent81
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent80
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent79
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent78
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent77
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent76
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent75
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent74
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent73
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent3
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent23
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepB
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepA
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepB
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepA
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrSwitch
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSSelfCheck
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrMethodC
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrMethodB
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrMethodA
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvCardVinStartB11
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvCardB9
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvCardB7
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvCardStart
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600Reset
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_SIM7600Test
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_HTTPDownload
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_FTPDownload
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_ConnectServer
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunB
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelfCheckFailGunB
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelfCheckFailGunA
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunB
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunA
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargePauseGunB
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargePauseGunA
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_BatChargeAdjust
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorRemoteSignalState
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvCardStart
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_MiddleSW
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPCUControl
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskModuleTx
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskModulePeriod
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPCUMain
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_YFYPowerModuleStop
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>

<P><STRONG><a name="[4b6]"></a>OSTimeDlyHMSM</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, ucos_ii.o(i.OSTimeDlyHMSM))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSBMain
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSAMain
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSendBMSBFrame
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSendBMSAFrame
</UL>

<P><STRONG><a name="[25f]"></a>OSTimeGet</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ucos_ii.o(i.OSTimeGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GRecv
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_SendStartCharge
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_ACSW
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardDispose
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_FrameRx_Timeout
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu33
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu32
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu22
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent81
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent80
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent79
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent78
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent77
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent76
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent75
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent74
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent73
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent3
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSendBMSBFrame
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSendBMSAFrame
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_FrameRx_TimeoutB
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_FrameRx_TimeoutA
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendFrameDispose
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendFrameDispose
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendBill
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendFrameDispose
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBill
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_HTTPDownload
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_FTPDownload
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendFrameDispose
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendBill
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendFrameDispose
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendBill
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReSendOffLineBill
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReSendBill
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_ModuleInfo
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_FJDispose
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskModuleRx
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskModulePeriod
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_YKRPowerModulePeriodSend
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_YFYPowerModulePeriodSend
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SHPowerModulePeriodSend
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GWPowerModulePeriodSend
</UL>

<P><STRONG><a name="[4b7]"></a>OSTimeTick</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, ucos_ii.o(i.OSTimeTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 108 + Unknown Stack Size
<LI>Call Chain = OSTimeTick &rArr; OSTimeTickHook &rArr; App_TimeTickHook &rArr; UART_ReceiveMsgHook &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTickHook
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickHandler
</UL>

<P><STRONG><a name="[4b8]"></a>OSTimeTickHook</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, os_cpu_c.o(i.OSTimeTickHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 84 + Unknown Stack Size
<LI>Call Chain = OSTimeTickHook &rArr; App_TimeTickHook &rArr; UART_ReceiveMsgHook &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrSignal
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TimeTickHook
</UL>
<BR>[Called By]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
</UL>

<P><STRONG><a name="[4b9]"></a>OSTmrSignal</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ucos_ii.o(i.OSTmrSignal))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + Unknown Stack Size
<LI>Call Chain = OSTmrSignal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTickHook
</UL>

<P><STRONG><a name="[48b]"></a>OSTmr_Init</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, ucos_ii.o(i.OSTmr_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = OSTmr_Init &rArr; OSTmr_InitTask &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventNameSet
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_InitTask
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[fe]"></a>OS_CPU_SysTickHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.OS_CPU_SysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 116 + Unknown Stack Size
<LI>Call Chain = OS_CPU_SysTickHandler &rArr; OSTimeTick &rArr; OSTimeTickHook &rArr; App_TimeTickHook &rArr; UART_ReceiveMsgHook &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4a8]"></a>OS_Dummy</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ucos_ii.o(i.OS_Dummy))
<BR><BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[48f]"></a>OS_EventTaskRdy</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, ucos_ii.o(i.OS_EventTaskRdy))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
</UL>

<P><STRONG><a name="[496]"></a>OS_EventTaskRemove</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ucos_ii.o(i.OS_EventTaskRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_EventTaskRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
</UL>

<P><STRONG><a name="[495]"></a>OS_EventTaskWait</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, ucos_ii.o(i.OS_EventTaskWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OS_EventTaskWait
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
</UL>

<P><STRONG><a name="[494]"></a>OS_EventWaitListInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ucos_ii.o(i.OS_EventWaitListInit))
<BR><BR>[Called By]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexCreate
</UL>

<P><STRONG><a name="[486]"></a>OS_FlagInit</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, ucos_ii.o(i.OS_FlagInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_FlagInit
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[4a7]"></a>OS_FlagUnlink</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ucos_ii.o(i.OS_FlagUnlink))
<BR><BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[4ba]"></a>OS_MemClr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ucos_ii.o(i.OS_MemClr))
<BR><BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_QInit
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemInit
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagInit
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Init
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTCBList
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitEventList
</UL>

<P><STRONG><a name="[487]"></a>OS_MemInit</STRONG> (Thumb, 68 bytes, Stack size 4 bytes, ucos_ii.o(i.OS_MemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = OS_MemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[488]"></a>OS_QInit</STRONG> (Thumb, 64 bytes, Stack size 4 bytes, ucos_ii.o(i.OS_QInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = OS_QInit
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[490]"></a>OS_Sched</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, ucos_ii.o(i.OS_Sched))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSCtxSw
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SchedNew
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
</UL>

<P><STRONG><a name="[4a3]"></a>OS_TCBInit</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, ucos_ii.o(i.OS_TCBInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateHook
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTCBInitHook
</UL>
<BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>

<P><STRONG><a name="[166]"></a>OS_TaskIdle</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ucos_ii.o(i.OS_TaskIdle))
<BR><BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskIdleHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ucos_ii.o(i.OS_InitTaskIdle)
</UL>
<P><STRONG><a name="[164]"></a>OS_TaskReturn</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ucos_ii.o(i.OS_TaskReturn))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = OS_TaskReturn &rArr; OSTaskDel &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskReturnHook
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_c.o(i.OSTaskStkInit)
</UL>
<P><STRONG><a name="[167]"></a>OS_TaskStat</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, ucos_ii.o(i.OS_TaskStat))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = OS_TaskStat &rArr; OS_TaskStatStkChk &rArr; OSTaskStkChk
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStatHook
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStatStkChk
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ucos_ii.o(i.OS_InitTaskStat)
</UL>
<P><STRONG><a name="[4bf]"></a>OS_TaskStatStkChk</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, ucos_ii.o(i.OS_TaskStatStkChk))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = OS_TaskStatStkChk &rArr; OSTaskStkChk
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
</UL>

<P><STRONG><a name="[4a1]"></a>OS_TaskStkClr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ucos_ii.o(i.OS_TaskStkClr))
<BR><BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>

<P><STRONG><a name="[42b]"></a>OTAFlashWriter</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, modulesim7600.o(i.OTAFlashWriter))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = OTAFlashWriter &rArr; BootLoadWrite &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BootLoadWrite
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvDataControl
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTPDownloadWriter
</UL>

<P><STRONG><a name="[142]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.OTG_FS_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 124 + Unknown Stack Size
<LI>Call Chain = OTG_FS_IRQHandler &rArr; USBH_OTG_ISR_Handler &rArr; USB_OTG_USBH_handle_hc_ISR &rArr; USB_OTG_USBH_handle_hc_n_In_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2cb]"></a>OpenCloseModule_YKR</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, ykrmoduletxrx.o(i.OpenCloseModule_YKR))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = OpenCloseModule_YKR &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ReadModeInfoAck
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YKRReduceModule
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YKRFristOpenGun
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YKRAddModule
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_YKRPowerModuleStop
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_YKRCloseModule
</UL>

<P><STRONG><a name="[4d0]"></a>PWR_BackupAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_pwr.o(i.PWR_BackupAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitRTC
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[4c3]"></a>PraPerprintBackImage</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, dwinprotocol.o(i.PraPerprintBackImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = PraPerprintBackImage &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetDispUartStatus
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendToUart
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendByteToBuf
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dwin_FrameHead
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBackImage
</UL>

<P><STRONG><a name="[4c4]"></a>Pre4GBill</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, 4gmain.o(i.Pre4GBill))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = Pre4GBill &rArr; PreAPBill
</UL>
<BR>[Calls]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreYKCBill
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHYBill
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPBill
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre66Bill
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriterFmBill
</UL>

<P><STRONG><a name="[4c6]"></a>Pre66Bill</STRONG> (Thumb, 394 bytes, Stack size 40 bytes, _66frame.o(i.Pre66Bill))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Pre66Bill
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetStopChargeReason
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetMeterPowerInfo
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurTime
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre4GBill
</UL>

<P><STRONG><a name="[4c7]"></a>PreAPBill</STRONG> (Thumb, 952 bytes, Stack size 256 bytes, apframe.o(i.PreAPBill))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = PreAPBill
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCDtoHEX
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetStopChargeReason
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetMeterPowerInfo
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurTime
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre4GBill
</UL>

<P><STRONG><a name="[4c9]"></a>PreAPFSOffLineBill</STRONG> (Thumb, 448 bytes, Stack size 288 bytes, apframe.o(i.PreAPFSOffLineBill))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = PreAPFSOffLineBill
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPriceInfo
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetMeterPowerInfo
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[4ca]"></a>PreAPOffLineBill</STRONG> (Thumb, 1056 bytes, Stack size 352 bytes, apframe.o(i.PreAPOffLineBill))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = PreAPOffLineBill
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEXtoBCD
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCDtoHEX
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunCardInfo
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetStopChargeReason
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPriceInfo
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetMeterPowerInfo
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[4c5]"></a>PreHYBill</STRONG> (Thumb, 520 bytes, Stack size 40 bytes, hyframe.o(i.PreHYBill))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PreHYBill
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetStopChargeReason
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetMeterPowerInfo
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurTime
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetWorkState
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre4GBill
</UL>

<P><STRONG><a name="[4c8]"></a>PreYKCBill</STRONG> (Thumb, 588 bytes, Stack size 32 bytes, ykcframe.o(i.PreYKCBill))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PreYKCBill
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCDtoHEX
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetStopChargeReason
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetMeterPowerInfo
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurTime
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre4GBill
</UL>

<P><STRONG><a name="[412]"></a>PrintBackImage</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dwinprotocol.o(i.PrintBackImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = PrintBackImage &rArr; PraPerprintBackImage &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PraPerprintBackImage
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>

<P><STRONG><a name="[408]"></a>PrintIcon</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, dwinprotocol.o(i.PrintIcon))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = PrintIcon &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetDispUartStatus
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendTwoBytes
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendToUart
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendByteToBuf
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dwin_FrameHead
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_State
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_NetState
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_CSQState
</UL>

<P><STRONG><a name="[2ec]"></a>PrintNum16uVariable</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, dwinprotocol.o(i.PrintNum16uVariable))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetDispUartStatus
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendTwoBytes
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendToUart
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendByteToBuf
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dwin_FrameHead
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_ShowGunT
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountDownDispose
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowSet2
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_StatusDivInfo
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu51
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu50
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_PricSet
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectUpNChargeRecode
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectNextNChargeRecode
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectCurChargeRecode
</UL>

<P><STRONG><a name="[2dd]"></a>PrintNum32uVariable</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, dwinprotocol.o(i.PrintNum32uVariable))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = PrintNum32uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetDispUartStatus
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendTwoBytes
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendToUart
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendFourBytes
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendByteToBuf
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dwin_FrameHead
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardDispose
</UL>

<P><STRONG><a name="[3f1]"></a>PrintStr</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, dwinprotocol.o(i.PrintStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetDispUartStatus
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendTwoBytes
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendToUart
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendByteToBuf
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dwin_FrameHead
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowTime
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowErr
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowDivStatus
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_Show
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_EndChargeDate
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_Recode
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_ChargeingDate
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_CardDate
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowSet2
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowSet1
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu39
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu38
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu37
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu36
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowNet
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowStatus
</UL>

<P><STRONG><a name="[43f]"></a>PrintTime</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, dwinprotocol.o(i.PrintTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = PrintTime &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteBcdToHex
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetDispUartStatus
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendTwoBytes
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendToUart
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendByteToBuf
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dwin_FrameHead
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent57
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent46
</UL>

<P><STRONG><a name="[32b]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MPLSInit
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOInit
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ADCInit
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_GPIOInit
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitSPI2_IO
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_RD2Init
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigTimeInit
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigInit
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_PIN_CFG
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_PIN_CFG
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART6_PIN_CFG
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_PIN_CFG
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_PIN_CFG
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_PIN_CFG
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_PIN_CFG
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_PIN_CFG
</UL>

<P><STRONG><a name="[371]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Configuration
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_CfgSPI2
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_PIN_CFG
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_PIN_CFG
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_PIN_CFG
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_PIN_CFG
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_PIN_CFG
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_PIN_CFG
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitRTC
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[375]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_DeInit
</UL>

<P><STRONG><a name="[32f]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ADCInit
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART6_PIN_CFG
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_PIN_CFG
</UL>

<P><STRONG><a name="[23b]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
</UL>

<P><STRONG><a name="[4b4]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTick_Init
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[4d2]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitRTC
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[4d1]"></a>RCC_LSEConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_LSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[4d4]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_RTCCLKCmd))
<BR><BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[4d3]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_RTCCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[4cb]"></a>RMRealTime_Check</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, adsamplemain.o(i.RMRealTime_Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = RMRealTime_Check &rArr; BSP_GetOUTBAT &rArr; BSP_DataFilter &rArr; BubbleSort
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GetTemp2
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GetTemp1
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GetOUTBAT
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GetJYVol
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GetHandVolt
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSample
</UL>

<P><STRONG><a name="[4cc]"></a>RS485MetterInit</STRONG> (Thumb, 152 bytes, Stack size 64 bytes, rs485meter.o(i.RS485MetterInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = RS485MetterInit &rArr; BSP_UARTConfigInit &rArr; BSP_UARTTxDMAConfigInit &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigInit
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMeterStk
</UL>

<P><STRONG><a name="[363]"></a>RS485_Init</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, bsp_rs485.o(i.RS485_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RS485_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchRS485Table
</UL>
<BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigTimeInit
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigInit
</UL>

<P><STRONG><a name="[36a]"></a>RS485_RDCmd</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, bsp_rs485.o(i.RS485_RDCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RS485_RDCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchRS485Table
</UL>
<BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTWrite
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxISR
</UL>

<P><STRONG><a name="[58c]"></a>RTC_ClearFlag</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitRTC
</UL>

<P><STRONG><a name="[4cf]"></a>RTC_Config</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, bsp_rtc.o(i.RTC_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RTC_Config &rArr; RTC_Init &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKConfig
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKCmd
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSEConfig
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitRTC
</UL>

<P><STRONG><a name="[4d8]"></a>RTC_EnterInitMode</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>

<P><STRONG><a name="[4d9]"></a>RTC_ExitInitMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_ExitInitMode))
<BR><BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>

<P><STRONG><a name="[35b]"></a>RTC_GetDate</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCGetTime
</UL>

<P><STRONG><a name="[35a]"></a>RTC_GetTime</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCGetTime
</UL>

<P><STRONG><a name="[4d6]"></a>RTC_Init</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(i.RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RTC_Init &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[58b]"></a>RTC_ReadBackupRegister</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_ReadBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_ReadBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitRTC
</UL>

<P><STRONG><a name="[4da]"></a>RTC_SetDate</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(i.RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Set
</UL>

<P><STRONG><a name="[4dc]"></a>RTC_SetTime</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, stm32f4xx_rtc.o(i.RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Set
</UL>

<P><STRONG><a name="[35c]"></a>RTC_TimeAndDate_Set</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, bsp_rtc.o(i.RTC_TimeAndDate_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = RTC_TimeAndDate_Set &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCSetTime
</UL>

<P><STRONG><a name="[4d5]"></a>RTC_WaitForSynchro</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, stm32f4xx_rtc.o(i.RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitRTC
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[4dd]"></a>RTC_WriteBackupRegister</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_WriteBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_WriteBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Set
</UL>

<P><STRONG><a name="[4de]"></a>ReSendBill</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, 4gmain.o(i.ReSendBill))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = ReSendBill &rArr; _66_SendBillData &rArr; _66FreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendBillData
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBillData
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendBillData
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendBillData
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[4e1]"></a>ReSendOffLineBill</STRONG> (Thumb, 134 bytes, Stack size 312 bytes, 4gmain.o(i.ReSendOffLineBill))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = ReSendOffLineBill &rArr; APP_GetNetOFFLineRecodeNum &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetNetOFFLineRecodeNum
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RWNetOFFLineRecode
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RWNetFSOFFLineRecode
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetNetOFFLineRecodeNum
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendOffLineBillFSData
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendOffLineBillData
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[440]"></a>ReadDwinVariable</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, dwinprotocol.o(i.ReadDwinVariable))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = ReadDwinVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetDispUartStatus
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendTwoBytes
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendToUart
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendByteToBuf
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dwin_FrameHead
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent54
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent51
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent50
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent48
</UL>

<P><STRONG><a name="[445]"></a>ReadFmBill</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, displaymain.o(i.ReadFmBill))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ReadFmBill &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetResendBillState
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvRegisterAck
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvRegisterAck
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvRegisterAck
</UL>

<P><STRONG><a name="[4e3]"></a>ReadMeterTask</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, rs485meter.o(i.ReadMeterTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = ReadMeterTask &rArr; SearchMeterData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_MsgDeal
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_FreeOneMsg
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMeterStatus
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchMeterData
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MeterDataAnalyse
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMeterStk
</UL>

<P><STRONG><a name="[f2]"></a>ReadModuleACV_YKR</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ykrmoduletxrx.o(i.ReadModuleACV_YKR))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = ReadModuleACV_YKR &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykrmoduletxrx.o(.data)
</UL>
<P><STRONG><a name="[f1]"></a>ReadModuleImf_YKR</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, ykrmoduletxrx.o(i.ReadModuleImf_YKR))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = ReadModuleImf_YKR &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykrmoduletxrx.o(.data)
</UL>
<P><STRONG><a name="[2c0]"></a>Read_NowCurrLimit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, modulemanage.o(i.Read_NowCurrLimit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Read_NowCurrLimit
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_QZMode
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModuleStart
</UL>

<P><STRONG><a name="[20e]"></a>Read_REG1K0100CurrLimit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, modulemanage.o(i.Read_REG1K0100CurrLimit))
<BR>[Address Reference Count : 1]<UL><LI> modulemanage.o(.constdata)
</UL>
<P><STRONG><a name="[20c]"></a>Read_SH75015K3BCurrLimit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, modulemanage.o(i.Read_SH75015K3BCurrLimit))
<BR>[Address Reference Count : 1]<UL><LI> modulemanage.o(.constdata)
</UL>
<P><STRONG><a name="[20f]"></a>Read_SH75020K3BCurrLimit</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, modulemanage.o(i.Read_SH75020K3BCurrLimit))
<BR>[Address Reference Count : 1]<UL><LI> modulemanage.o(.constdata)
</UL>
<P><STRONG><a name="[210]"></a>Read_TH30F10025C7CurrLimit</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, modulemanage.o(i.Read_TH30F10025C7CurrLimit))
<BR>[Address Reference Count : 1]<UL><LI> modulemanage.o(.constdata)
</UL>
<P><STRONG><a name="[211]"></a>Read_TH40F10025C7CurrLimit</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, modulemanage.o(i.Read_TH40F10025C7CurrLimit))
<BR>[Address Reference Count : 1]<UL><LI> modulemanage.o(.constdata)
</UL>
<P><STRONG><a name="[208]"></a>Read_YFY50025CurrLimit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, modulemanage.o(i.Read_YFY50025CurrLimit))
<BR>[Address Reference Count : 1]<UL><LI> modulemanage.o(.constdata)
</UL>
<P><STRONG><a name="[207]"></a>Read_YFY75020CurrLimit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, modulemanage.o(i.Read_YFY75020CurrLimit))
<BR>[Address Reference Count : 1]<UL><LI> modulemanage.o(.constdata)
</UL>
<P><STRONG><a name="[209]"></a>Read_YFY75035CurrLimit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, modulemanage.o(i.Read_YFY75035CurrLimit))
<BR>[Address Reference Count : 1]<UL><LI> modulemanage.o(.constdata)
</UL>
<P><STRONG><a name="[20a]"></a>Read_YFY75050CurrLimit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, modulemanage.o(i.Read_YFY75050CurrLimit))
<BR>[Address Reference Count : 1]<UL><LI> modulemanage.o(.constdata)
</UL>
<P><STRONG><a name="[20b]"></a>Read_YKR1507500CurrLimit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, modulemanage.o(i.Read_YKR1507500CurrLimit))
<BR>[Address Reference Count : 1]<UL><LI> modulemanage.o(.constdata)
</UL>
<P><STRONG><a name="[212]"></a>Read_YL1K20CurrLimit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, modulemanage.o(i.Read_YL1K20CurrLimit))
<BR>[Address Reference Count : 1]<UL><LI> modulemanage.o(.constdata)
</UL>
<P><STRONG><a name="[20d]"></a>Read_YL75030CurrLimit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, modulemanage.o(i.Read_YL75030CurrLimit))
<BR>[Address Reference Count : 1]<UL><LI> modulemanage.o(.constdata)
</UL>
<P><STRONG><a name="[4e6]"></a>ReciveBMSFrameA</STRONG> (Thumb, 364 bytes, Stack size 56 bytes, connectbms.o(i.ReciveBMSFrameA))
<BR><BR>[Stack]<UL><LI>Max Depth = 100 + Unknown Stack Size
<LI>Call Chain = ReciveBMSFrameA &rArr; CanProtocolOperationRTSA &rArr; Reply_BMSFrame_CTSA &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reply_TPCM_EndofMsgAckFrameA
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationRTSA
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanSearchParaManagementTable
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGBType
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitConnectBMSmessageA
</UL>

<P><STRONG><a name="[4e9]"></a>ReciveBMSFrameB</STRONG> (Thumb, 370 bytes, Stack size 56 bytes, connectbms.o(i.ReciveBMSFrameB))
<BR><BR>[Stack]<UL><LI>Max Depth = 100 + Unknown Stack Size
<LI>Call Chain = ReciveBMSFrameB &rArr; CanProtocolOperationRTSB &rArr; Reply_BMSFrame_CTSB &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reply_TPCM_EndofMsgAckFrameB
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationRTSB
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanSearchParaManagementTable
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGBType
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitConnectBMSmessageB
</UL>

<P><STRONG><a name="[4eb]"></a>ReciveGWModuleFrameDispose</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gwmoduletxrx.o(i.ReciveGWModuleFrameDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReciveGWModuleFrameDispose &rArr; GWSwitchforConcenterTerimialorder
</UL>
<BR>[Calls]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GWSwitchforConcenterTerimialorder
</UL>
<BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveModuleFrameDispose
</UL>

<P><STRONG><a name="[4ee]"></a>ReciveSHModuleFrameDispose</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, shmoduletxrx.o(i.ReciveSHModuleFrameDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReciveSHModuleFrameDispose &rArr; SHSwitchforConcenterTerimialorder
</UL>
<BR>[Calls]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSwitchforConcenterTerimialorder
</UL>
<BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveModuleFrameDispose
</UL>

<P><STRONG><a name="[4ef]"></a>ReciveYFYModuleFrameDispose</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, yfymoduletxrx.o(i.ReciveYFYModuleFrameDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReciveYFYModuleFrameDispose &rArr; SwitchforConcenterTerimialorder
</UL>
<BR>[Calls]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchforConcenterTerimialorder
</UL>
<BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveModuleFrameDispose
</UL>

<P><STRONG><a name="[4f0]"></a>ReciveYKRModuleFrameDispose</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, ykrmoduletxrx.o(i.ReciveYKRModuleFrameDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReciveYKRModuleFrameDispose
</UL>
<BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveModuleFrameDispose
</UL>

<P><STRONG><a name="[384]"></a>Reply_BMSFrame_CTSA</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, connectbmsframe.o(i.Reply_BMSFrame_CTSA))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = Reply_BMSFrame_CTSA &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationRTSA
</UL>

<P><STRONG><a name="[385]"></a>Reply_BMSFrame_CTSB</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, connectbmsframe.o(i.Reply_BMSFrame_CTSB))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = Reply_BMSFrame_CTSB &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanProtocolOperationRTSB
</UL>

<P><STRONG><a name="[4e8]"></a>Reply_TPCM_EndofMsgAckFrameA</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, connectbmsframe.o(i.Reply_TPCM_EndofMsgAckFrameA))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = Reply_TPCM_EndofMsgAckFrameA &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSendBMSAFrame
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveBMSFrameA
</UL>

<P><STRONG><a name="[4ea]"></a>Reply_TPCM_EndofMsgAckFrameB</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, connectbmsframe.o(i.Reply_TPCM_EndofMsgAckFrameB))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = Reply_TPCM_EndofMsgAckFrameB &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSendBMSBFrame
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveBMSFrameB
</UL>

<P><STRONG><a name="[433]"></a>Return_HandSta</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, adsamplemain.o(i.Return_HandSta))
<BR><BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRM_HandVolt
</UL>

<P><STRONG><a name="[4f8]"></a>SDIO_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>

<P><STRONG><a name="[4f7]"></a>SDIO_GetITStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>

<P><STRONG><a name="[130]"></a>SDIO_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bsp_sdio_sd.o(i.SDIO_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SDIO_IRQHandler &rArr; SD_ProcessIRQSrc
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4f9]"></a>SDIO_ITConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>

<P><STRONG><a name="[3ed]"></a>SD_ProcessDMAIRQ</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, bsp_sdio_sd.o(i.SD_ProcessDMAIRQ))
<BR><BR>[Calls]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream3_IRQHandler
</UL>

<P><STRONG><a name="[4f5]"></a>SD_ProcessIRQSrc</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.SD_ProcessIRQSrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SD_ProcessIRQSrc
</UL>
<BR>[Calls]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ITConfig
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetITStatus
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_IRQHandler
</UL>

<P><STRONG><a name="[e9]"></a>SHSet_Group_Fream</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, shmoduletxrx.o(i.SHSet_Group_Fream))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = SHSet_Group_Fream &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SH_CmdDispose
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskModuleTx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> shmoduletxrx.o(.data)
</UL>
<P><STRONG><a name="[3ea]"></a>SIM7600CloseNet</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, modulesim7600.o(i.SIM7600CloseNet))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = SIM7600CloseNet &rArr; Send_AT_CIPCLOSE &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CIPCLOSE
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Connect_4G
</UL>

<P><STRONG><a name="[3e7]"></a>SIM7600Reset</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, modulesim7600.o(i.SIM7600Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = SIM7600Reset &rArr; Send_AT_CIPCLOSE &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOOpen
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOClose
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_NETCLOSE
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CIPCLOSE
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Connect_4G
</UL>

<P><STRONG><a name="[501]"></a>SIM7600_RecvDesposeCmd</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, modulesim7600.o(i.SIM7600_RecvDesposeCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SIM7600_RecvDesposeCmd &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GRecv
</UL>

<P><STRONG><a name="[502]"></a>SPI5_ReadWriteByte</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, w25qxx.o(i.SPI5_ReadWriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Page
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Enable
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadSR
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadID
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
</UL>

<P><STRONG><a name="[58a]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_CfgSPI2
</UL>

<P><STRONG><a name="[503]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_ReadWriteByte
</UL>

<P><STRONG><a name="[505]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_ReadWriteByte
</UL>

<P><STRONG><a name="[504]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_ReadWriteByte
</UL>

<P><STRONG><a name="[589]"></a>SPI_Init</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, stm32f4xx_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_CfgSPI2
</UL>

<P><STRONG><a name="[fb]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4e4]"></a>SearchMeterData</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, rs485meter.o(i.SearchMeterData))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = SearchMeterData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TeskCS
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMeterTask
</UL>

<P><STRONG><a name="[437]"></a>SendCardMsg</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, displaymain.o(i.SendCardMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = SendCardMsg &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetCardEvent
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCardDispose
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu3_16_CodeDispose
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu33
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu32
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu22
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent47
</UL>

<P><STRONG><a name="[264]"></a>SendFrameToPowerModule</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, modulemanage.o(i.SendFrameToPowerModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CAN_Write
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModuleVI_YKR
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadModuleImf_YKR
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadModuleACV_YKR
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenCloseModule_YKR
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetAddressGetType
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPowerModuleVI
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPowerModuleState
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPowerModuleAC
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Group_VIout
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Group_Fream
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenCloseOneModule
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenCloseOneGrpModule
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_GWGroup_Fream
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Close_OneModule
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetControlDyn
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SendHear
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_CloseGun
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_GetModuleInfo
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSet_Group_Vol
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSet_Group_Cur
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSetVolGears_750V
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSetVolGears_500V
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSendOpenCloseGroupModule
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHOpenCloseOneModule
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSet_Group_Fream
</UL>

<P><STRONG><a name="[2d8]"></a>SendPricMsg</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, displaymain.o(i.SendPricMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = SendPricMsg &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPricEvent
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardDispose
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_StartCharge
</UL>

<P><STRONG><a name="[423]"></a>SendStartChargeMsg</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, displaymain.o(i.SendStartChargeMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = SendStartChargeMsg &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu51_HANDBDispose
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu50_HANDADispose
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_SendStartCharge
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent59
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent58
</UL>

<P><STRONG><a name="[2db]"></a>SendStopChargeMsg</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, displaymain.o(i.SendStopChargeMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = SendStopChargeMsg &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu51_HANDBDispose
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu50_HANDADispose
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_SOCThreshold
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardDispose
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_StopCharge
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent59
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent58
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent51
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent50
</UL>

<P><STRONG><a name="[478]"></a>Send_AT_CIPMODE</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, modulesim7600.o(i.Send_AT_CIPMODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Send_AT_CIPMODE &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_SIM7600Test
</UL>

<P><STRONG><a name="[4f4]"></a>Send_AT_CIPRXGET</STRONG> (Thumb, 68 bytes, Stack size 72 bytes, modulesim7600.o(i.Send_AT_CIPRXGET))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = Send_AT_CIPRXGET &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_ActRecv1_Ack
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_ActRecv0_Ack
</UL>

<P><STRONG><a name="[475]"></a>Send_AT_CSQ</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, modulesim7600.o(i.Send_AT_CSQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Send_AT_CSQ &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_SIM7600Test
</UL>

<P><STRONG><a name="[23d]"></a>SetBMSBCPFitCheck</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, controlmain.o(i.SetBMSBCPFitCheck))
<BR><BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParaInit
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_BCPFitCheckGunB
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_BCPFitCheckGunA
</UL>

<P><STRONG><a name="[25d]"></a>SetBMSConnectStep</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, controlmain.o(i.SetBMSConnectStep))
<BR><BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepB
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepA
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepB
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepA
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrSwitch
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
</UL>

<P><STRONG><a name="[3a9]"></a>SetBMSErrMethodRetry</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, connectbms.o(i.SetBMSErrMethodRetry))
<BR><BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrSwitch
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrHandleB
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrHandleA
</UL>

<P><STRONG><a name="[3a5]"></a>SetBMSErrState</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, connectbms.o(i.SetBMSErrState))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrHandleB
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrHandleA
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrMethodC
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrMethodB
</UL>

<P><STRONG><a name="[29b]"></a>SetBMSInsulationCheck</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, controlmain.o(i.SetBMSInsulationCheck))
<BR><BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckHWConnectforBMS
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParaInit
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorGunState
</UL>

<P><STRONG><a name="[2f6]"></a>SetBMSSelfCheck</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, controlmain.o(i.SetBMSSelfCheck))
<BR><BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckHWConnectforBMS
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParaInit
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunB
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunA
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
</UL>

<P><STRONG><a name="[259]"></a>SetBMSStartCharge</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, controlmain.o(i.SetBMSStartCharge))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSBMain
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSAMain
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParaInit
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunB
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunA
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelfCheckFailGunB
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelfCheckFailGunA
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
</UL>

<P><STRONG><a name="[261]"></a>SetBMSStopCharge</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, controlmain.o(i.SetBMSStopCharge))
<BR><BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParaInit
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunB
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunB
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunA
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
</UL>

<P><STRONG><a name="[2fb]"></a>SetBMSStopOnce</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, controlmain.o(i.SetBMSStopOnce))
<BR><BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParaInit
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
</UL>

<P><STRONG><a name="[254]"></a>SetBcuRemoteSignalState</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, controlmain.o(i.SetBcuRemoteSignalState))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = SetBcuRemoteSignalState &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSSelfCheck
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunB
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_CheckPowerModule
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunB
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunA
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
</UL>

<P><STRONG><a name="[327]"></a>SetCEMState</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, connectbms.o(i.SetCEMState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetCEMState
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepB
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepA
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepB
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepA
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeEndStepB
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeEndStepA
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_ControlInit
</UL>

<P><STRONG><a name="[2d0]"></a>SetCardInfoStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, card_cpu.o(i.SetCardInfoStatus))
<BR><BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardDispose
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardAnalyze
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAnalysis
</UL>

<P><STRONG><a name="[387]"></a>SetCardWorkStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, card_cpu.o(i.SetCardWorkStatus))
<BR><BR>[Called By]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_LocalUnLock
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAnalysis
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCharge_StopCard
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCharge_StartCard
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StopCard
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StartCard
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_Query_Card
</UL>

<P><STRONG><a name="[2fc]"></a>SetChargeDemandUpdateState</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, controlmain.o(i.SetChargeDemandUpdateState))
<BR><BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
</UL>

<P><STRONG><a name="[242]"></a>SetChargeInfo</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, controlmain.o(i.SetChargeInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetChargeInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeBSDGunB
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeBSDGunA
</UL>

<P><STRONG><a name="[2fa]"></a>SetChargeMode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, controlmain.o(i.SetChargeMode))
<BR><BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepB
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepA
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParaInit
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunB
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunA
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
</UL>

<P><STRONG><a name="[247]"></a>SetChargePauseState</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, controlmain.o(i.SetChargePauseState))
<BR><BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepB
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepA
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParaInit
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargePauseGunB
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargePauseGunA
</UL>

<P><STRONG><a name="[24d]"></a>SetChargeReady</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, controlmain.o(i.SetChargeReady))
<BR><BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParaInit
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunB
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunA
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunB
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunA
</UL>

<P><STRONG><a name="[25c]"></a>SetChargeRunningState</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, controlmain.o(i.SetChargeRunningState))
<BR><BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRecode_Dispose
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParaInit
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunB
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunA
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
</UL>

<P><STRONG><a name="[380]"></a>SetChargingStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rs485meter.o(i.SetChargingStatus))
<BR><BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartBillingInit
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingAnalyse
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculationBill
</UL>

<P><STRONG><a name="[41a]"></a>SetCurMenu</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dispkeyfunction.o(i.SetCurMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = SetCurMenu &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ParaInit
</UL>

<P><STRONG><a name="[2fd]"></a>SetDealFaultOverState</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, controlmain.o(i.SetDealFaultOverState))
<BR><BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrSwitch
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParaInit
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunB
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunB
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunA
</UL>

<P><STRONG><a name="[2c3]"></a>SetDemandChange</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, controlapp.o(i.SetDemandChange))
<BR><BR>[Called By]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskModulePeriod
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModuleStopB
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModuleStopA
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModuleStartB
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModuleStartA
</UL>

<P><STRONG><a name="[2b7]"></a>SetElecLockState</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, controlmain.o(i.SetElecLockState))
<BR><BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorRemoteSignalState
</UL>

<P><STRONG><a name="[2b5]"></a>SetEmergencyState</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, controlmain.o(i.SetEmergencyState))
<BR><BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorRemoteSignalState
</UL>

<P><STRONG><a name="[2b0]"></a>SetGunState</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, controlmain.o(i.SetGunState))
<BR><BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParaInit
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorGunState
</UL>

<P><STRONG><a name="[4e5]"></a>SetMeterStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rs485meter.o(i.SetMeterStatus))
<BR><BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMeterTask
</UL>

<P><STRONG><a name="[3dd]"></a>SetModuleVI_YKR</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ykrmoduletxrx.o(i.SetModuleVI_YKR))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = SetModuleVI_YKR &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YKRSetModuleVI
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YKRReduceModule
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YKRFristOpenGun
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YKRAddModule
</UL>

<P><STRONG><a name="[37e]"></a>SetPowerChangeFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rs485meter.o(i.SetPowerChangeFlag))
<BR><BR>[Called By]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MeterDataAnalyse
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculationBill
</UL>

<P><STRONG><a name="[253]"></a>SetPowerDCState</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, controlmain.o(i.SetPowerDCState))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunB
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrCGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunB
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunA
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunB
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunA
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
</UL>

<P><STRONG><a name="[24c]"></a>SetStartFailType</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, controlmain.o(i.SetStartFailType))
<BR><BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepB
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepA
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSSelfCheck
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_TimeoutErrB
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunB
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunA
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
</UL>

<P><STRONG><a name="[3f4]"></a>SetVariColor</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, dwinprotocol.o(i.SetVariColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = SetVariColor &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetDispUartStatus
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendTwoBytes
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendToUart
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendByteToBuf
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dwin_FrameHead
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowTime
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowErr
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowDivStatus
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowStatus
</UL>

<P><STRONG><a name="[43d]"></a>Set_VIN_Success</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, connectbms.o(i.Set_VIN_Success))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent22
</UL>

<P><STRONG><a name="[3df]"></a>StartBillingInit</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, rs485meter.o(i.StartBillingInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = StartBillingInit
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingStatus
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargingStatus
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurUnixTimestamp
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurTime
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingAnalyse
</UL>

<P><STRONG><a name="[160]"></a>SystemInit</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, system_stm32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(.text)
</UL>
<P><STRONG><a name="[176]"></a>Task4GMain</STRONG> (Thumb, 654 bytes, Stack size 48 bytes, 4gmain.o(i.Task4GMain))
<BR><BR>[Stack]<UL><LI>Max Depth = 744 + Unknown Stack Size
<LI>Call Chain = Task4GMain &rArr; HY_SendUpdataAck &rArr; HYFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_to_app
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOClose
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexCreate
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSIM7600Mode
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetModuleConnectState
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispEvent
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CIPMODE
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_HTTPDownload
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_FTPDownload
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendUpdataAck
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetSIM7600Mode
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Connect_4G
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.init_task_core)
</UL>
<P><STRONG><a name="[178]"></a>Task4GRecv</STRONG> (Thumb, 784 bytes, Stack size 16 bytes, 4grecv.o(i.Task4GRecv))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = Task4GRecv &rArr; GPRSRecv_HardwareInit &rArr; BSP_UARTConfigTimeInit &rArr; BSP_UARTTxDMAConfigInit &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_MsgDeal
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_FreeOneMsg
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSIM7600Mode
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetModuleConnectState
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600_RecvDesposeCmd
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTPDownloadWriter
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetNetNotConect
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetAppRegisterState
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSRecv_HardwareInit
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_RecvFrameDispose
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.init_task_core)
</UL>
<P><STRONG><a name="[177]"></a>Task4GSend</STRONG> (Thumb, 1078 bytes, Stack size 40 bytes, 4gsend.o(i.Task4GSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 968 + Unknown Stack Size
<LI>Call Chain = Task4GSend &rArr; _4G_SendCardInfo &rArr; _66_SendCardInfo &rArr; _66FreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetResendBillState
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetStartNetState
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSIM7600Status
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSIM7600Mode
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetModuleConnectState
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriterFmBill
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetNetOFFLineRecodeNum
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RWNetOFFLineRecode
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RWNetFSOFFLineRecode
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetNetOFFLineRecodeNum
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetBillInfo
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SetStartType
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendQuerySetAck
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendStartCharge
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendFrameDispose
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZF_SendBill
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunBCmd13
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunACmd13
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBalanceAck
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendAPPQR_Ack
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CSQ
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CIPRXGET
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPOffLineBill
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreAPFSOffLineBill
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendVinInfo
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendQueryRateAck
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendVinWLAck
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendVinCardResAck
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCardWLAck
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendVinInfo
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendUpdataAck
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendStopAck
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendStartAck
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendSetTimeAck
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendRateMode
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendRateAck
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendQueryRate
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendFrameDispose
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendDevState
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendCardVinCharge
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendCardInfo
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendBill
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReSendOffLineBill
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReSendBill
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetResendBillState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.init_task_core)
</UL>
<P><STRONG><a name="[17e]"></a>TaskADJust</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, adadjust.o(i.TaskADJust))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = TaskADJust &rArr; Analyse_Protocol_Frame &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Analyse_Protocol_Frame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.init_task_core)
</UL>
<P><STRONG><a name="[174]"></a>TaskBillStk</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, rs485meter.o(i.TaskBillStk))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = TaskBillStk &rArr; CalculationRate
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingInit
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingAnalyse
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculationRate
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculationBill
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.init_task_core)
</UL>
<P><STRONG><a name="[172]"></a>TaskCardStk</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, card_cpu.o(i.TaskCardStk))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = TaskCardStk &rArr; CardAnalysis &rArr; Charge_StartCard &rArr; Dispose_LocalUnLock &rArr; APP_RWChargeRecode &rArr; APP_ChargeRecodeFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQFlush
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitCardmessage
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_Init
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardUart_MsgFree
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAnalysis
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AuthKey
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_HardwareInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.init_task_core)
</UL>
<P><STRONG><a name="[17a]"></a>TaskConnectBMSAMain</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, connectbms.o(i.TaskConnectBMSAMain))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = TaskConnectBMSAMain &rArr; ChargeRunningStepA &rArr; WaitConnectBMSmessageA &rArr; ReciveBMSFrameA &rArr; CanProtocolOperationRTSA &rArr; Reply_BMSFrame_CTSA &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQFlush
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStartCharge
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargeMode
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSStartCharge
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitConnectBMSACAN
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearCanFrameInformation
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepA
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepA
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeEndStepA
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSSelfCheck
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_FrameContextClear
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_ControlInit
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetGBType
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.init_task_core)
</UL>
<P><STRONG><a name="[17b]"></a>TaskConnectBMSBMain</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, connectbms.o(i.TaskConnectBMSBMain))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = TaskConnectBMSBMain &rArr; ChargeRunningStepB &rArr; WaitConnectBMSmessageB &rArr; ReciveBMSFrameB &rArr; CanProtocolOperationRTSB &rArr; Reply_BMSFrame_CTSB &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQFlush
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSStartCharge
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargeMode
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSStartCharge
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitConnectBMSBCAN
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearCanFrameInformation
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepB
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepB
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeEndStepB
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSSelfCheck
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_FrameContextClear
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_ControlInit
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetGBType
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.init_task_core)
</UL>
<P><STRONG><a name="[170]"></a>TaskControlGunA</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, controlmain.o(i.TaskControlGunA))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = TaskControlGunA &rArr; OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_AnalyzeRxDataA
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ControlInit
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ControlHardwareInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.init_task_core)
</UL>
<P><STRONG><a name="[171]"></a>TaskControlGunB</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, controlmain.o(i.TaskControlGunB))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = TaskControlGunB &rArr; OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_AnalyzeRxDataB
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.init_task_core)
</UL>
<P><STRONG><a name="[17c]"></a>TaskDisplay</STRONG> (Thumb, 708 bytes, Stack size 16 bytes, displaymain.o(i.TaskDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = TaskDisplay &rArr; DispPeriod &rArr; Period_WriterFmBill &rArr; WriterFmBill &rArr; Pre4GBill &rArr; PreAPBill
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetLatency
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PrefetchBufferCmd
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_MsgDeal
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_FreeOneMsg
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayQRCode
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Set_ERR_Branch
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSIM7600Mode
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFmBill
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_HardwareInit
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayGunQRCode
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_DisplayRecvDataAnalyze
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ParaInit
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display66GunQRCode
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardAnalyze
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu37
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_GetStartType
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_VIN_Success
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStopChargeMsg
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_StopCharge
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_StartCharge
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DealWithKey
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.init_task_core)
</UL>
<P><STRONG><a name="[173]"></a>TaskMeterStk</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, rs485meter.o(i.TaskMeterStk))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = TaskMeterStk &rArr; RS485MetterInit &rArr; BSP_UARTConfigInit &rArr; BSP_UARTTxDMAConfigInit &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetMeterAddr
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMeterTask
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485MetterInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.init_task_core)
</UL>
<P><STRONG><a name="[52c]"></a>TaskModulePeriod</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, controlapp.o(i.TaskModulePeriod))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = TaskModulePeriod &rArr; Judge_Gun_FreeModule &rArr; Seek_CanAddModule
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSStartCharge
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PeriodControlDataUpdata
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserModule_FailOffline_Dispose
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Judge_Gun_FreeModule
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDemandChange
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestMain
</UL>

<P><STRONG><a name="[16a]"></a>TaskModuleRx</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, modulemanage.o(i.TaskModuleRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = TaskModuleRx &rArr; InitCAN_Module &rArr; BSP_CAN_Init &rArr; CAN_Configuration &rArr; CAN_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveModuleFrameDispose
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCAN_Module
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pcumain.o(i.TestMain)
</UL>
<P><STRONG><a name="[16b]"></a>TaskModuleTx</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, modulemanage.o(i.TaskModuleTx))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = TaskModuleTx &rArr; SHSet_Group_Fream &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexCreate
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModulePeriodSend
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPcuControl
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSet_Group_Fream
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pcumain.o(i.TestMain)
</UL>
<P><STRONG><a name="[16c]"></a>TaskPCUControl</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, controlapp.o(i.TaskPCUControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = TaskPCUControl &rArr; Check_DemandChargeDispose &rArr; APP_PowerModuleStart &rArr; Charge_QZMode &rArr; Charge_AvegMode &rArr; Charge_ReduceModule &rArr; Charge_SHReduceModule &rArr; Send_SetGroupVI &rArr; SHSet_Group_Vol &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_CloseModule
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleInfoIint
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_DataInit
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_MiddleSW
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_DemandChargeDispose
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pcumain.o(i.TestMain)
</UL>
<P><STRONG><a name="[16d]"></a>TaskPCUMain</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, pcumain.o(i.TaskPCUMain))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = TaskPCUMain &rArr; OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModuleDataDeal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pcumain.o(i.TestMain)
</UL>
<P><STRONG><a name="[179]"></a>TaskPeriod</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, controlmain.o(i.TaskPeriod))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = TaskPeriod &rArr; APP_MonitorChargingState &rArr; APP_CheckPowerModule &rArr; SetBcuRemoteSignalState &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenFailLed
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseFailLed
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_ModuleInfo
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ErrLedState
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkState
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorRemoteSignalState
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorGunState
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.init_task_core)
</UL>
<P><STRONG><a name="[175]"></a>TaskRTC</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, rtc_task.o(i.TaskRTC))
<BR><BR>[Stack]<UL><LI>Max Depth = 84 + Unknown Stack Size
<LI>Call Chain = TaskRTC &rArr; BSP_RTCSetTime &rArr; RTC_TimeAndDate_Set &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteBcdToHex
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitRTC
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCSetTime
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCGetTime
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change2Unixstamp
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.init_task_core)
</UL>
<P><STRONG><a name="[17d]"></a>TaskSample</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, adsamplemain.o(i.TaskSample))
<BR><BR>[Stack]<UL><LI>Max Depth = 100 + Unknown Stack Size
<LI>Call Chain = TaskSample &rArr; RMRealTime_Check &rArr; BSP_GetOUTBAT &rArr; BSP_DataFilter &rArr; BubbleSort
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMRealTime_Check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.init_task_core)
</UL>
<P><STRONG><a name="[168]"></a>TaskSendBMSAFrame</STRONG> (Thumb, 286 bytes, Stack size 8 bytes, connectbms.o(i.TaskSendBMSAFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = TaskSendBMSAFrame &rArr; OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reply_TPCM_EndofMsgAckFrameA
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(i.TaskConnectBMSAMain)
</UL>
<P><STRONG><a name="[169]"></a>TaskSendBMSBFrame</STRONG> (Thumb, 292 bytes, Stack size 8 bytes, connectbms.o(i.TaskSendBMSBFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = TaskSendBMSBFrame &rArr; OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reply_TPCM_EndofMsgAckFrameB
</UL>
<BR>[Address Reference Count : 1]<UL><LI> connectbms.o(i.TaskConnectBMSBMain)
</UL>
<P><STRONG><a name="[180]"></a>TaskUsbTask</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, usb_task.o(i.TaskUsbTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = TaskUsbTask &rArr; BootLoadWrite &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_to_app
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RLCWrite
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BootLoadWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.init_task_core)
</UL>
<P><STRONG><a name="[506]"></a>TeskCS</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dealwithchar.o(i.TeskCS))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TeskCS
</UL>
<BR>[Called By]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchMeterData
</UL>

<P><STRONG><a name="[17f]"></a>TestMain</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, pcumain.o(i.TestMain))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = TestMain &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskModulePeriod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.init_task_core)
</UL>
<P><STRONG><a name="[133]"></a>UART4_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.UART4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = UART4_IRQHandler &rArr; UART_ISR &rArr; UART_TxISR &rArr; UART_PopBytes &rArr; UART_PopOneByte
</UL>
<BR>[Calls]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[134]"></a>UART5_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.UART5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = UART5_IRQHandler &rArr; UART_ISR &rArr; UART_TxISR &rArr; UART_PopBytes &rArr; UART_PopOneByte
</UL>
<BR>[Calls]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[150]"></a>UART7_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.UART7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = UART7_IRQHandler &rArr; UART_ISR &rArr; UART_TxISR &rArr; UART_PopBytes &rArr; UART_PopOneByte
</UL>
<BR>[Calls]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[151]"></a>UART8_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.UART8_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = UART8_IRQHandler &rArr; UART_ISR &rArr; UART_TxISR &rArr; UART_PopBytes &rArr; UART_PopOneByte
</UL>
<BR>[Calls]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[465]"></a>UART_4GWrite</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, 4gmain.o(i.UART_4GWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTWrite
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSIM7600Mode
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetModuleConnectState
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CSQ
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CIPRXGET
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CIPMODE
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_SetCIPRXGET
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_READ
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_NOTCIPMODE
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_NETOPEN
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_NETCLOSE
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_HTTPTERM
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_HTTPPAR
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_HTTPINIT
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_GET
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_EnterATCmd
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CIPCLOSE
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CIMI
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CGDCONT
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CFTPSTYPE
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CFTPSSTART
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CFTPSRead
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CFTPSLOGIN
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CFTPSGET
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recv_AT_EnterATCmd_Ack
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_ConnectServer
</UL>

<P><STRONG><a name="[392]"></a>UART_FreeOneMsg</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, bsp_uart.o(i.UART_FreeOneMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = UART_FreeOneMsg &rArr; OSMemPut
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetComPort
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemPut
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GRecv
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitCardmessage
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardUart_MsgFree
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMeterTask
</UL>

<P><STRONG><a name="[533]"></a>UART_ISR</STRONG> (Thumb, 280 bytes, Stack size 24 bytes, bsp_uart.o(i.UART_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = UART_ISR &rArr; UART_TxISR &rArr; UART_PopBytes &rArr; UART_PopOneByte
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxISR
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetComPort
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_IRQHandler
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_IRQHandler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[391]"></a>UART_MsgDeal</STRONG> (Thumb, 262 bytes, Stack size 40 bytes, bsp_uart.o(i.UART_MsgDeal))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = UART_MsgDeal
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GRecv
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitCardmessage
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardUart_MsgFree
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMeterTask
</UL>

<P><STRONG><a name="[325]"></a>UART_ReceiveMsgHook</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, bsp_uart.o(i.UART_ReceiveMsgHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + Unknown Stack Size
<LI>Call Chain = UART_ReceiveMsgHook &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsEmpty
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemGet
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TimeTickHook
</UL>

<P><STRONG><a name="[124]"></a>USART1_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = USART1_IRQHandler &rArr; UART_ISR &rArr; UART_TxISR &rArr; UART_PopBytes &rArr; UART_PopOneByte
</UL>
<BR>[Calls]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[125]"></a>USART2_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = USART2_IRQHandler &rArr; UART_ISR &rArr; UART_TxISR &rArr; UART_PopBytes &rArr; UART_PopOneByte
</UL>
<BR>[Calls]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[126]"></a>USART3_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = USART3_IRQHandler &rArr; UART_ISR &rArr; UART_TxISR &rArr; UART_PopBytes &rArr; UART_PopOneByte
</UL>
<BR>[Calls]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[146]"></a>USART6_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.USART6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = USART6_IRQHandler &rArr; UART_ISR &rArr; UART_TxISR &rArr; UART_PopBytes &rArr; UART_PopOneByte
</UL>
<BR>[Calls]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3ef]"></a>USART_ClearFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
</UL>

<P><STRONG><a name="[535]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
</UL>

<P><STRONG><a name="[366]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigTimeInit
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigInit
</UL>

<P><STRONG><a name="[367]"></a>USART_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigTimeInit
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigInit
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[534]"></a>USART_GetITStatus</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, stm32f4xx_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
</UL>

<P><STRONG><a name="[365]"></a>USART_ITConfig</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f4xx_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTWrite
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigTimeInit
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigInit
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxISR
</UL>

<P><STRONG><a name="[364]"></a>USART_Init</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, stm32f4xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigTimeInit
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigInit
</UL>

<P><STRONG><a name="[536]"></a>USART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
</UL>

<P><STRONG><a name="[36d]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTWrite
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxISR
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[6]"></a>USBH_Connected</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usbh_core.o(i.USBH_Connected))
<BR>[Address Reference Count : 1]<UL><LI> usbh_core.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>USBH_Disconnected</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, usbh_core.o(i.USBH_Disconnected))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_Disconnected
</UL>
<BR>[Calls]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_DriveVBUS
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_DisableGlobalInt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_core.o(.data)
</UL>
<P><STRONG><a name="[4c0]"></a>USBH_OTG_ISR_Handler</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, usb_hcd_int.o(i.USBH_OTG_ISR_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = USBH_OTG_ISR_Handler &rArr; USB_OTG_USBH_handle_hc_ISR &rArr; USB_OTG_USBH_handle_hc_n_In_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadCoreItr
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_IsHostMode
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_sof_ISR
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_rx_qlvl_ISR
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_ptxfempty_ISR
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_port_ISR
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_nptxfempty_ISR
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_ISR
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_IncompletePeriodicXfer_ISR
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_Disconnect_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_IRQHandler
</UL>

<P><STRONG><a name="[9]"></a>USBH_PortDisabled</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usbh_core.o(i.USBH_PortDisabled))
<BR>[Address Reference Count : 1]<UL><LI> usbh_core.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>USBH_PortEnabled</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usbh_core.o(i.USBH_PortEnabled))
<BR>[Address Reference Count : 1]<UL><LI> usbh_core.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>USBH_SOF</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usbh_core.o(i.USBH_SOF))
<BR>[Address Reference Count : 1]<UL><LI> usbh_core.o(.data)
</UL>
<P><STRONG><a name="[53e]"></a>USB_OTG_BSP_DriveVBUS</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_bsp.o(i.USB_OTG_BSP_DriveVBUS))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Disconnected
</UL>

<P><STRONG><a name="[53f]"></a>USB_OTG_DisableGlobalInt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_DisableGlobalInt))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Disconnected
</UL>

<P><STRONG><a name="[54a]"></a>USB_OTG_GetMode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_GetMode))
<BR><BR>[Called By]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_IsHostMode
</UL>

<P><STRONG><a name="[54f]"></a>USB_OTG_HC_DoPing</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, usb_core.o(i.USB_OTG_HC_DoPing))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_HC_DoPing
</UL>
<BR>[Called By]<UL><LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_Out_ISR
</UL>

<P><STRONG><a name="[54e]"></a>USB_OTG_HC_Halt</STRONG> (Thumb, 108 bytes, Stack size 36 bytes, usb_core.o(i.USB_OTG_HC_Halt))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USB_OTG_HC_Halt
</UL>
<BR>[Called By]<UL><LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_Out_ISR
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_In_ISR
</UL>

<P><STRONG><a name="[551]"></a>USB_OTG_InitFSLSPClkSel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_InitFSLSPClkSel))
<BR><BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_port_ISR
</UL>

<P><STRONG><a name="[540]"></a>USB_OTG_IsHostMode</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, usb_core.o(i.USB_OTG_IsHostMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USB_OTG_IsHostMode
</UL>
<BR>[Calls]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_GetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[541]"></a>USB_OTG_ReadCoreItr</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_ReadCoreItr))
<BR><BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[54b]"></a>USB_OTG_ReadHostAllChannels_intr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_ReadHostAllChannels_intr))
<BR><BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_ISR
</UL>

<P><STRONG><a name="[552]"></a>USB_OTG_ReadPacket</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usb_core.o(i.USB_OTG_ReadPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_ReadPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_rx_qlvl_ISR
</UL>

<P><STRONG><a name="[550]"></a>USB_OTG_WritePacket</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, usb_core.o(i.USB_OTG_WritePacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_ptxfempty_ISR
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_nptxfempty_ISR
</UL>

<P><STRONG><a name="[530]"></a>Updata_ModuleInfo</STRONG> (Thumb, 290 bytes, Stack size 48 bytes, pcumain.o(i.Updata_ModuleInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = Updata_ModuleInfo &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetModuleInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPeriod
</UL>

<P><STRONG><a name="[fa]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[553]"></a>W25QXX_Erase_Sector</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, w25qxx.o(i.W25QXX_Erase_Sector))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = W25QXX_Erase_Sector &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Enable
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Wait_Busy
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
</UL>

<P><STRONG><a name="[42f]"></a>W25QXX_Init</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, w25qxx.o(i.W25QXX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = W25QXX_Init &rArr; W25QXX_ReadID &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadSR
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadID
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlishW25QXXInit
</UL>

<P><STRONG><a name="[245]"></a>W25QXX_Read</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, w25qxx.o(i.W25QXX_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = W25QXX_Read &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRecodeFlashOperation
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeOffLineFlashOperation
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProtocolFlashOperation
</UL>

<P><STRONG><a name="[430]"></a>W25QXX_ReadID</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, w25qxx.o(i.W25QXX_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = W25QXX_ReadID &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlishW25QXXInit
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
</UL>

<P><STRONG><a name="[556]"></a>W25QXX_ReadSR</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, w25qxx.o(i.W25QXX_ReadSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Wait_Busy
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
</UL>

<P><STRONG><a name="[555]"></a>W25QXX_Wait_Busy</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, w25qxx.o(i.W25QXX_Wait_Busy))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadSR
</UL>
<BR>[Called By]<UL><LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Page
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
</UL>

<P><STRONG><a name="[244]"></a>W25QXX_Write</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, w25qxx.o(i.W25QXX_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_NoCheck
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BootLoadWrite
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRecodeFlashOperation
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeOffLineFlashOperation
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProtocolFlashOperation
</UL>

<P><STRONG><a name="[554]"></a>W25QXX_Write_Enable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, w25qxx.o(i.W25QXX_Write_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = W25QXX_Write_Enable &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Page
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
</UL>

<P><STRONG><a name="[557]"></a>W25QXX_Write_NoCheck</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, w25qxx.o(i.W25QXX_Write_NoCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Page
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
</UL>

<P><STRONG><a name="[558]"></a>W25QXX_Write_Page</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, w25qxx.o(i.W25QXX_Write_Page))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Enable
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Wait_Busy
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_NoCheck
</UL>

<P><STRONG><a name="[45b]"></a>WaitCardmessage</STRONG> (Thumb, 434 bytes, Stack size 48 bytes, card_cpu.o(i.WaitCardmessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = WaitCardmessage &rArr; OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_MsgDeal
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_FreeOneMsg
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcBCC
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCardStk
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_WriterCardUnLock
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_WriterCardStartMoney
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_WriterCardMoney
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardState2
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardState1
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardState
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardStartMoney
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardMoney1
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardMoney
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardID
</UL>

<P><STRONG><a name="[39b]"></a>WaitConnectBMSmessageA</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, connectbms.o(i.WaitConnectBMSmessageA))
<BR><BR>[Stack]<UL><LI>Max Depth = 116 + Unknown Stack Size
<LI>Call Chain = WaitConnectBMSmessageA &rArr; ReciveBMSFrameA &rArr; CanProtocolOperationRTSA &rArr; Reply_BMSFrame_CTSA &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveBMSFrameA
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_DealReceiveDataA
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepA
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepA
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeEndStepA
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
</UL>

<P><STRONG><a name="[3a0]"></a>WaitConnectBMSmessageB</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, connectbms.o(i.WaitConnectBMSmessageB))
<BR><BR>[Stack]<UL><LI>Max Depth = 116 + Unknown Stack Size
<LI>Call Chain = WaitConnectBMSmessageB &rArr; ReciveBMSFrameB &rArr; CanProtocolOperationRTSB &rArr; Reply_BMSFrame_CTSB &rArr; BSP_CAN_Write &rArr; CAN_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveBMSFrameB
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_DealReceiveDataB
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepB
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepB
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeEndStepB
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
</UL>

<P><STRONG><a name="[2e2]"></a>WriterFmBill</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, displaymain.o(i.WriterFmBill))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WriterFmBill &rArr; Pre4GBill &rArr; PreAPBill
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre4GBill
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Period_WriterFmBill
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvOnlineBillAck
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvRecordAck
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendBill
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBill
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendBill
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendBill
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvRecordAck
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvRecordAck
</UL>

<P><STRONG><a name="[55b]"></a>YKCFreamSend</STRONG> (Thumb, 96 bytes, Stack size 216 bytes, ykcframe.o(i.YKCFreamSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ykc_get_crc_Data
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunBCmd13
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunACmd13
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBalanceAck
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendAPPQR_Ack
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendUpdataAck
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendStopAck
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendStartAck
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSetTimeAck
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendRateAck
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendPriReq
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendPriModel
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunBBSD
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunABSD
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendCardInfo
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBillData
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBill
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBCStartAck
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunBCmd23
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunACmd23
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendRegisterCmd1
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendPriodSJDataGunBCmd13
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendPriodSJDataGunACmd13
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendHearGunBCmd3
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendHearGunACmd3
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunBHand
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunBConf
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunAHand
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunAConf
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBSMGunBCmd25
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBSMGunACmd25
</UL>

<P><STRONG><a name="[55d]"></a>YKC_RecvFrameDispose</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, ykcframe.o(i.YKC_RecvFrameDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = YKC_RecvFrameDispose
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_RecvFrameDispose
</UL>

<P><STRONG><a name="[d9]"></a>YKC_RecvHeartAck</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ykcframe.o(i.YKC_RecvHeartAck))
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[da]"></a>YKC_RecvPrimodelAck</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, ykcframe.o(i.YKC_RecvPrimodelAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = YKC_RecvPrimodelAck &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[d8]"></a>YKC_RecvRegisterAck</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, ykcframe.o(i.YKC_RecvRegisterAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = YKC_RecvRegisterAck &rArr; ReadFmBill &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFmBill
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetAppRegisterState
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[520]"></a>YKC_SendAPPQR_Ack</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ykcframe.o(i.YKC_SendAPPQR_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = YKC_SendAPPQR_Ack &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[55e]"></a>YKC_SendBCStartAck</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, ykcframe.o(i.YKC_SendBCStartAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = YKC_SendBCStartAck &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendStartAck
</UL>

<P><STRONG><a name="[d6]"></a>YKC_SendBSMGunACmd25</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, ykcframe.o(i.YKC_SendBSMGunACmd25))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = YKC_SendBSMGunACmd25 &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[d7]"></a>YKC_SendBSMGunBCmd25</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, ykcframe.o(i.YKC_SendBSMGunBCmd25))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = YKC_SendBSMGunBCmd25 &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[517]"></a>YKC_SendBalanceAck</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ykcframe.o(i.YKC_SendBalanceAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = YKC_SendBalanceAck &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[55f]"></a>YKC_SendBill</STRONG> (Thumb, 710 bytes, Stack size 24 bytes, ykcframe.o(i.YKC_SendBill))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = YKC_SendBill &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCDtoHEX
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunCardInfo
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriterFmBill
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetStopChargeReason
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetMeterPowerInfo
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendBill
</UL>

<P><STRONG><a name="[4e0]"></a>YKC_SendBillData</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, ykcframe.o(i.YKC_SendBillData))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = YKC_SendBillData &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReSendBill
</UL>

<P><STRONG><a name="[560]"></a>YKC_SendCardInfo</STRONG> (Thumb, 250 bytes, Stack size 16 bytes, ykcframe.o(i.YKC_SendCardInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = YKC_SendCardInfo &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunCardInfo
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendVinInfo
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendCardInfo
</UL>

<P><STRONG><a name="[561]"></a>YKC_SendFrameDispose</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, ykcframe.o(i.YKC_SendFrameDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = YKC_SendFrameDispose &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendFrameDispose
</UL>

<P><STRONG><a name="[562]"></a>YKC_SendGunABSD</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, ykcframe.o(i.YKC_SendGunABSD))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = YKC_SendGunABSD &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendBill
</UL>

<P><STRONG><a name="[563]"></a>YKC_SendGunAConf</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, ykcframe.o(i.YKC_SendGunAConf))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = YKC_SendGunAConf &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunACmd13
</UL>

<P><STRONG><a name="[564]"></a>YKC_SendGunAHand</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, ykcframe.o(i.YKC_SendGunAHand))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = YKC_SendGunAHand &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunACmd13
</UL>

<P><STRONG><a name="[565]"></a>YKC_SendGunBBSD</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, ykcframe.o(i.YKC_SendGunBBSD))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = YKC_SendGunBBSD &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendBill
</UL>

<P><STRONG><a name="[566]"></a>YKC_SendGunBConf</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, ykcframe.o(i.YKC_SendGunBConf))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = YKC_SendGunBConf &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunBCmd13
</UL>

<P><STRONG><a name="[567]"></a>YKC_SendGunBHand</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, ykcframe.o(i.YKC_SendGunBHand))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = YKC_SendGunBHand &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSJDataGunBCmd13
</UL>

<P><STRONG><a name="[d0]"></a>YKC_SendHearGunACmd3</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ykcframe.o(i.YKC_SendHearGunACmd3))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = YKC_SendHearGunACmd3 &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetErrState
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[d1]"></a>YKC_SendHearGunBCmd3</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, ykcframe.o(i.YKC_SendHearGunBCmd3))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = YKC_SendHearGunBCmd3 &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetErrState
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[568]"></a>YKC_SendPriModel</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ykcframe.o(i.YKC_SendPriModel))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = YKC_SendPriModel &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendRateMode
</UL>

<P><STRONG><a name="[569]"></a>YKC_SendPriReq</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ykcframe.o(i.YKC_SendPriReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = YKC_SendPriReq &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
</UL>
<BR>[Called By]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendQueryRate
</UL>

<P><STRONG><a name="[d2]"></a>YKC_SendPriodSJDataGunACmd13</STRONG> (Thumb, 260 bytes, Stack size 32 bytes, ykcframe.o(i.YKC_SendPriodSJDataGunACmd13))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = YKC_SendPriodSJDataGunACmd13 &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStartFailType
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[d3]"></a>YKC_SendPriodSJDataGunBCmd13</STRONG> (Thumb, 284 bytes, Stack size 32 bytes, ykcframe.o(i.YKC_SendPriodSJDataGunBCmd13))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = YKC_SendPriodSJDataGunBCmd13 &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStartFailType
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[56a]"></a>YKC_SendRateAck</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ykcframe.o(i.YKC_SendRateAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = YKC_SendRateAck &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendRateAck
</UL>

<P><STRONG><a name="[cf]"></a>YKC_SendRegisterCmd1</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, ykcframe.o(i.YKC_SendRegisterCmd1))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = YKC_SendRegisterCmd1 &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGunNum
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[519]"></a>YKC_SendSJDataGunACmd13</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, ykcframe.o(i.YKC_SendSJDataGunACmd13))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = YKC_SendSJDataGunACmd13 &rArr; YKC_SendGunAHand &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStartFailType
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunAHand
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunAConf
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[d4]"></a>YKC_SendSJDataGunACmd23</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, ykcframe.o(i.YKC_SendSJDataGunACmd23))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = YKC_SendSJDataGunACmd23 &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[51a]"></a>YKC_SendSJDataGunBCmd13</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, ykcframe.o(i.YKC_SendSJDataGunBCmd13))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = YKC_SendSJDataGunBCmd13 &rArr; YKC_SendGunBConf &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStartFailType
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunBHand
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunBConf
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[d5]"></a>YKC_SendSJDataGunBCmd23</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, ykcframe.o(i.YKC_SendSJDataGunBCmd23))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = YKC_SendSJDataGunBCmd23 &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[56b]"></a>YKC_SendSetTimeAck</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, ykcframe.o(i.YKC_SendSetTimeAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = YKC_SendSetTimeAck &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCDtoHEX
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurTime
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
</UL>
<BR>[Called By]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendSetTimeAck
</UL>

<P><STRONG><a name="[56c]"></a>YKC_SendStartAck</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, ykcframe.o(i.YKC_SendStartAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = YKC_SendStartAck &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendStartAck
</UL>

<P><STRONG><a name="[56d]"></a>YKC_SendStopAck</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, ykcframe.o(i.YKC_SendStopAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = YKC_SendStopAck &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
</UL>
<BR>[Called By]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendStopAck
</UL>

<P><STRONG><a name="[56e]"></a>YKC_SendUpdataAck</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ykcframe.o(i.YKC_SendUpdataAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = YKC_SendUpdataAck &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
</UL>
<BR>[Called By]<UL><LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendUpdataAck
</UL>

<P><STRONG><a name="[515]"></a>ZF_SendBill</STRONG> (Thumb, 690 bytes, Stack size 120 bytes, zfframe.o(i.ZF_SendBill))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = ZF_SendBill &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetMeterPowerInfo
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[524]"></a>ZF_SendFrameDispose</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, zfframe.o(i.ZF_SendFrameDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = ZF_SendFrameDispose &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[512]"></a>ZF_SendStartCharge</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, zfframe.o(i.ZF_SendStartCharge))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = ZF_SendStartCharge &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[2e6]"></a>_4G_GetStartType</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, 4gmain.o(i._4G_GetStartType))
<BR><BR>[Calls]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetYKCStartType
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetHYStartType
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAPStartType
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get66StartType
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCardDispose
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCharge_StopCard
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent37
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent36
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendStartAck
</UL>

<P><STRONG><a name="[50e]"></a>_4G_RecvFrameDispose</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, 4gmain.o(i._4G_RecvFrameDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _4G_RecvFrameDispose &rArr; _66_RecvFrameDispose
</UL>
<BR>[Calls]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_RecvFrameDispose
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvFrameDispose
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvFrameDispose
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvFrameDispose
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GRecv
</UL>

<P><STRONG><a name="[514]"></a>_4G_SendBill</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, 4gmain.o(i._4G_SendBill))
<BR><BR>[Stack]<UL><LI>Max Depth = 744 + Unknown Stack Size
<LI>Call Chain = _4G_SendBill &rArr; _66_SendBill &rArr; _66FreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendBill
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunBBSD
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendGunABSD
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBill
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendBill
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendTimeSharBill
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendBill
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[522]"></a>_4G_SendCardInfo</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, 4gmain.o(i._4G_SendCardInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 928 + Unknown Stack Size
<LI>Call Chain = _4G_SendCardInfo &rArr; _66_SendCardInfo &rArr; _66FreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendCardInfo
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendCardInfo
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendCardInfo
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCardInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[521]"></a>_4G_SendCardVinCharge</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, 4gmain.o(i._4G_SendCardVinCharge))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = _4G_SendCardVinCharge &rArr; AP_SendCardVinStart &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendCardVinStart
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[516]"></a>_4G_SendDevState</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, 4gmain.o(i._4G_SendDevState))
<BR><BR>[Stack]<UL><LI>Max Depth = 728 + Unknown Stack Size
<LI>Call Chain = _4G_SendDevState &rArr; HY_SendDevStateB &rArr; HYFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateB
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendDevStateA
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[525]"></a>_4G_SendFrameDispose</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, 4gmain.o(i._4G_SendFrameDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = _4G_SendFrameDispose &rArr; _66_SendFrameDispose &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendFrameDispose
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendFrameDispose
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendFrameDispose
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendFrameDispose
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[51c]"></a>_4G_SendQueryRate</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, 4gmain.o(i._4G_SendQueryRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = _4G_SendQueryRate &rArr; YKC_SendPriReq &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendPriReq
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[51b]"></a>_4G_SendRateAck</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, 4gmain.o(i._4G_SendRateAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = _4G_SendRateAck &rArr; _66_SendRateAck &rArr; _66FreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendRateAck
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendRateAck
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendRateAck
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendRateAck
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[51d]"></a>_4G_SendRateMode</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, 4gmain.o(i._4G_SendRateMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = _4G_SendRateMode &rArr; YKC_SendPriModel &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendPriModel
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[51e]"></a>_4G_SendSetTimeAck</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, 4gmain.o(i._4G_SendSetTimeAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = _4G_SendSetTimeAck &rArr; YKC_SendSetTimeAck &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendSetTimeAck
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendSetTimeAck
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[511]"></a>_4G_SendStartAck</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, 4gmain.o(i._4G_SendStartAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 720 + Unknown Stack Size
<LI>Call Chain = _4G_SendStartAck &rArr; _66_SendStartAck &rArr; _66FreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_GetStartType
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendStartAck
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendStartAck
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendBCStartAck
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendStartAck
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStartAck
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[513]"></a>_4G_SendStopAck</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, 4gmain.o(i._4G_SendStopAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 720 + Unknown Stack Size
<LI>Call Chain = _4G_SendStopAck &rArr; _66_SendStopAck &rArr; _66FreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendStopAck
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendStopAck
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendStopAck
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendStopAck
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[51f]"></a>_4G_SendUpdataAck</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, 4gmain.o(i._4G_SendUpdataAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = _4G_SendUpdataAck &rArr; YKC_SendUpdataAck &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendUpdataAck
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[523]"></a>_4G_SendVinInfo</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, 4gmain.o(i._4G_SendVinInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = _4G_SendVinInfo &rArr; YKC_SendCardInfo &rArr; YKCFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_SendCardInfo
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendVinInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[2d4]"></a>_4G_SetStartType</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, 4gmain.o(i._4G_SetStartType))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _4G_SetStartType
</UL>
<BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetYKCStartType
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetHYStartType
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetAPStartType
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Set66StartType
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardAnalyze
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent22
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_RecvCard
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKC_BCRecvCard
</UL>

<P><STRONG><a name="[57e]"></a>_66FreamSend</STRONG> (Thumb, 116 bytes, Stack size 520 bytes, _66frame.o(i._66FreamSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = _66FreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_crc_Data
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendDevStateB
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendDevStateA
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendRegister
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendHear
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendQuerySetAck
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendStopAck
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendStartAck
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendRateAck
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendCardInfo
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendBillData
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66_SendBill
</UL>

<P><STRONG><a name="[573]"></a>_66_RecvFrameDispose</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, _66frame.o(i._66_RecvFrameDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _66_RecvFrameDispose
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_RecvFrameDispose
</UL>

<P><STRONG><a name="[574]"></a>_66_SendBill</STRONG> (Thumb, 420 bytes, Stack size 40 bytes, _66frame.o(i._66_SendBill))
<BR><BR>[Stack]<UL><LI>Max Depth = 728 + Unknown Stack Size
<LI>Call Chain = _66_SendBill &rArr; _66FreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriterFmBill
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetStopChargeReason
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetMeterPowerInfo
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66FreamSend
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendBill
</UL>

<P><STRONG><a name="[4df]"></a>_66_SendBillData</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, _66frame.o(i._66_SendBillData))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = _66_SendBillData &rArr; _66FreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66FreamSend
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReSendBill
</UL>

<P><STRONG><a name="[575]"></a>_66_SendCardInfo</STRONG> (Thumb, 290 bytes, Stack size 224 bytes, _66frame.o(i._66_SendCardInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 912 + Unknown Stack Size
<LI>Call Chain = _66_SendCardInfo &rArr; _66FreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunCardInfo
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66FreamSend
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendCardInfo
</UL>

<P><STRONG><a name="[92]"></a>_66_SendDevStateA</STRONG> (Thumb, 386 bytes, Stack size 32 bytes, _66frame.o(i._66_SendDevStateA))
<BR><BR>[Stack]<UL><LI>Max Depth = 720 + Unknown Stack Size
<LI>Call Chain = _66_SendDevStateA &rArr; _66FreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGunNum
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetMeterPowerInfo
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66FreamSend
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _66frame.o(.data)
</UL>
<P><STRONG><a name="[93]"></a>_66_SendDevStateB</STRONG> (Thumb, 396 bytes, Stack size 32 bytes, _66frame.o(i._66_SendDevStateB))
<BR><BR>[Stack]<UL><LI>Max Depth = 720 + Unknown Stack Size
<LI>Call Chain = _66_SendDevStateB &rArr; _66FreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGunNum
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetMeterPowerInfo
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66FreamSend
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _66frame.o(.data)
</UL>
<P><STRONG><a name="[576]"></a>_66_SendFrameDispose</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, _66frame.o(i._66_SendFrameDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = _66_SendFrameDispose &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendFrameDispose
</UL>

<P><STRONG><a name="[518]"></a>_66_SendQuerySetAck</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _66frame.o(i._66_SendQuerySetAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = _66_SendQuerySetAck &rArr; _66FreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66FreamSend
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GSend
</UL>

<P><STRONG><a name="[577]"></a>_66_SendRateAck</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, _66frame.o(i._66_SendRateAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = _66_SendRateAck &rArr; _66FreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66FreamSend
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendRateAck
</UL>

<P><STRONG><a name="[578]"></a>_66_SendStartAck</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, _66frame.o(i._66_SendStartAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = _66_SendStartAck &rArr; _66FreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetStopChargeReason
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66FreamSend
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendStartAck
</UL>

<P><STRONG><a name="[579]"></a>_66_SendStopAck</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, _66frame.o(i._66_SendStopAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = _66_SendStopAck &rArr; _66FreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66FreamSend
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SendStopAck
</UL>

<P><STRONG><a name="[580]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5a9]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[241]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskRTC
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSBMain
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskConnectBMSAMain
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GRecv
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendToUart
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriterFmBill
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPricMsg
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFmBill
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu53_acinputupvalueDispose
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu53_acinputdownvalueDispose
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu53_MeterAddBDispose
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu53_MeterAddADispose
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_UseGunDispose
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_SOCDispose
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_ProNumDispose
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_OutDcVolDispose
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_OutDcCurDispose
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_ModuleNumDispose
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_MaxOutCurDispose
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_MacMinVolDispose
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_MacMaxVolDispose
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu52_DevnumDispose
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu48_PrcDispose
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_PortSert
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_NetNumSet
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_IP4Sert
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_IP3Sert
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_IP2Sert
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_IP1Sert
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ParaInit
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRecode_Dispose
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetCARDWL
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485MetterInit
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardMsg
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_PricSet
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent57
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent10
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepB
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRunningStepA
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepB
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeParameterConfigStepA
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrSwitch
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSSelfCheck
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeB
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeBMSHandshakeA
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrMethodC
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrMethodB
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_VinWhiteListDispose
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvB21VINCardRes
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_CardWhiteListDispose
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CIPRXGET
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_SIM7600Test
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_HTTPDownload
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_FTPDownload
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_ConnectServer
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ErrLedState
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParaInit
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunB
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeGunA
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunB
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrBGunA
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunB
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StopChargeErrAGunA
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunB
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_StartChargeGunA
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelfCheckFailGunB
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelfCheckFailGunA
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunB
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_InsulationCheckGunA
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ElectronicLockUnlockedGunB
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ElectronicLockUnlockedGunA
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ElectronicLockLockedGunB
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ElectronicLockLockedGunA
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_CheckPowerModule
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunB
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeRunningGunA
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunB
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargeReadyCheckGunA
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargePauseGunB
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ChargePauseGunA
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_BatChargeAdjust
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MonitorChargingState
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvUpdata
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_READ
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_HTTPPAR
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CIPCLOSE
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CFTPSRead
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CFTPSLOGIN
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CFTPSGET
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_ConnectServer
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_GunDataInit
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_DataInit
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskModulePeriod
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModuleStopB
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModuleStopA
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModuleStartB
</UL>

<P><STRONG><a name="[5aa]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[5ab]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[582]"></a>__0snprintf</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, printfa.o(i.__0snprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5ac]"></a>__1snprintf</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[3f7]"></a>__2snprintf</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, printfa.o(i.__0snprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowTime
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_IP4Sert
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_IP3Sert
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_IP2Sert
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu10_IP1Sert
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ParaInit
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYKeyEvent10
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CIPRXGET
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_RecvUpdata
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_READ
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_HTTPPAR
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CIPCLOSE
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CFTPSRead
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CFTPSLOGIN
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CFTPSGET
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_ConnectServer
</UL>

<P><STRONG><a name="[5ad]"></a>__c89snprintf</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[5ae]"></a>snprintf</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[229]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[5af]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[5b0]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[5b1]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[5b2]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[588]"></a>bsp_CfgSPI2</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, bsp_spi.o(i.bsp_CfgSPI2))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = bsp_CfgSPI2 &rArr; SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitSPI2
</UL>

<P><STRONG><a name="[531]"></a>bsp_InitRTC</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, bsp_rtc.o(i.bsp_InitRTC))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bsp_InitRTC &rArr; RTC_Config &rArr; RTC_Init &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearFlag
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadBackupRegister
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskRTC
</UL>

<P><STRONG><a name="[42e]"></a>bsp_InitSPI2</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bsp_spi.o(i.bsp_InitSPI2))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bsp_InitSPI2 &rArr; bsp_InitSPI2_IO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitSPI2_IO
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_CfgSPI2
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlishW25QXXInit
</UL>

<P><STRONG><a name="[58e]"></a>bsp_InitSPI2_IO</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bsp_spi.o(i.bsp_InitSPI2_IO))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bsp_InitSPI2_IO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitSPI2
</UL>

<P><STRONG><a name="[16e]"></a>fputc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, bsp_debug_usart.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[50d]"></a>jump_to_app</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, main.o(i.jump_to_app))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = jump_to_app &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskUsbTask
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
</UL>

<P><STRONG><a name="[15f]"></a>main</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = main &rArr; OSInit &rArr; OSTmr_Init &rArr; OSTmr_InitTask &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTick_Init
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[590]"></a>read_flash</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, flashdatadeal.o(i.read_flash))
<BR><BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flashbuf
</UL>

<P><STRONG><a name="[277]"></a>read_flashbuf</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, flashdatadeal.o(i.read_flashbuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = read_flashbuf
</UL>
<BR>[Calls]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
</UL>

<P><STRONG><a name="[27a]"></a>write_flash</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, flashdatadeal.o(i.write_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = write_flash &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSector
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[181]"></a>init_task_core</STRONG> (Thumb, 556 bytes, Stack size 56 bytes, main.o(i.init_task_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = init_task_core &rArr; BSP_ADCInit &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlishW25QXXInit
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTInit
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MPLSInit
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOTurnover
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOInit
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ADCInit
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[50b]"></a>SetSysClock</STRONG> (Thumb, 168 bytes, Stack size 12 bytes, system_stm32f4xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[376]"></a>CheckITStatus</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_can.o(i.CheckITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_GetITStatus
</UL>

<P><STRONG><a name="[4d7]"></a>RTC_Bcd2ToByte</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_Bcd2ToByte))
<BR><BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>

<P><STRONG><a name="[4db]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_ByteToBcd2))
<BR><BR>[Called By]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>

<P><STRONG><a name="[497]"></a>OSMutex_RdyAtPrio</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, ucos_ii.o(i.OSMutex_RdyAtPrio))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OSMutex_RdyAtPrio
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
</UL>

<P><STRONG><a name="[4bb]"></a>OSTmr_InitTask</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, ucos_ii.o(i.OSTmr_InitTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = OSTmr_InitTask &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Init
</UL>

<P><STRONG><a name="[4bd]"></a>OSTmr_Link</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, ucos_ii.o(i.OSTmr_Link))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Task
</UL>

<P><STRONG><a name="[165]"></a>OSTmr_Task</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, ucos_ii.o(i.OSTmr_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = OSTmr_Task &rArr; OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Unlink
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Link
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ucos_ii.o(i.OSTmr_InitTask)
</UL>
<P><STRONG><a name="[4bc]"></a>OSTmr_Unlink</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, ucos_ii.o(i.OSTmr_Unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTmr_Unlink
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Task
</UL>

<P><STRONG><a name="[485]"></a>OS_InitEventList</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, ucos_ii.o(i.OS_InitEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_InitEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[482]"></a>OS_InitMisc</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ucos_ii.o(i.OS_InitMisc))
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[483]"></a>OS_InitRdyList</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ucos_ii.o(i.OS_InitRdyList))
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[484]"></a>OS_InitTCBList</STRONG> (Thumb, 76 bytes, Stack size 4 bytes, ucos_ii.o(i.OS_InitTCBList))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = OS_InitTCBList
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[489]"></a>OS_InitTaskIdle</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, ucos_ii.o(i.OS_InitTaskIdle))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = OS_InitTaskIdle &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[48a]"></a>OS_InitTaskStat</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, ucos_ii.o(i.OS_InitTaskStat))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = OS_InitTaskStat &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[48d]"></a>OS_SchedNew</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ucos_ii.o(i.OS_SchedNew))
<BR><BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[35e]"></a>GetComPort</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, bsp_uart.o(i.GetComPort))
<BR><BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_FreeOneMsg
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTWrite
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigTimeInit
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigInit
</UL>

<P><STRONG><a name="[35f]"></a>GetCommHandle</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bsp_uart.o(i.GetCommHandle))
<BR><BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigTimeInit
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigInit
</UL>

<P><STRONG><a name="[182]"></a>UART1_PIN_CFG</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, bsp_uart.o(i.UART1_PIN_CFG))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART1_PIN_CFG &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_uart.o(.constdata)
</UL>
<P><STRONG><a name="[183]"></a>UART2_PIN_CFG</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, bsp_uart.o(i.UART2_PIN_CFG))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART2_PIN_CFG &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_uart.o(.constdata)
</UL>
<P><STRONG><a name="[184]"></a>UART3_PIN_CFG</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, bsp_uart.o(i.UART3_PIN_CFG))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART3_PIN_CFG &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_uart.o(.constdata)
</UL>
<P><STRONG><a name="[185]"></a>UART4_PIN_CFG</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, bsp_uart.o(i.UART4_PIN_CFG))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART4_PIN_CFG &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_uart.o(.constdata)
</UL>
<P><STRONG><a name="[186]"></a>UART5_PIN_CFG</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, bsp_uart.o(i.UART5_PIN_CFG))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UART5_PIN_CFG &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_uart.o(.constdata)
</UL>
<P><STRONG><a name="[187]"></a>UART6_PIN_CFG</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, bsp_uart.o(i.UART6_PIN_CFG))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART6_PIN_CFG &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_uart.o(.constdata)
</UL>
<P><STRONG><a name="[188]"></a>UART7_PIN_CFG</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, bsp_uart.o(i.UART7_PIN_CFG))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART7_PIN_CFG &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_uart.o(.constdata)
</UL>
<P><STRONG><a name="[189]"></a>UART8_PIN_CFG</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, bsp_uart.o(i.UART8_PIN_CFG))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART8_PIN_CFG &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_uart.o(.constdata)
</UL>
<P><STRONG><a name="[539]"></a>UART_PopBytes</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, bsp_uart.o(i.UART_PopBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = UART_PopBytes &rArr; UART_PopOneByte
</UL>
<BR>[Calls]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PopOneByte
</UL>
<BR>[Called By]<UL><LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxISR
</UL>

<P><STRONG><a name="[53a]"></a>UART_PopOneByte</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, bsp_uart.o(i.UART_PopOneByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = UART_PopOneByte
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PopBytes
</UL>

<P><STRONG><a name="[36c]"></a>UART_PushBytes</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, bsp_uart.o(i.UART_PushBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = UART_PushBytes &rArr; UART_PushOneByte
</UL>
<BR>[Calls]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PushOneByte
</UL>
<BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTWrite
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR
</UL>

<P><STRONG><a name="[53c]"></a>UART_PushOneByte</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, bsp_uart.o(i.UART_PushOneByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = UART_PushOneByte
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsFull
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PushBytes
</UL>

<P><STRONG><a name="[537]"></a>UART_RxISR</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, bsp_uart.o(i.UART_RxISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = UART_RxISR &rArr; UART_PushBytes &rArr; UART_PushOneByte
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PushBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
</UL>

<P><STRONG><a name="[36b]"></a>UART_RxMode</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, bsp_uart.o(i.UART_RxMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_RxMode
</UL>
<BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTWrite
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxISR
</UL>

<P><STRONG><a name="[538]"></a>UART_TxISR</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, bsp_uart.o(i.UART_TxISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = UART_TxISR &rArr; UART_PopBytes &rArr; UART_PopOneByte
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_RDCmd
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxMode
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PopBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
</UL>

<P><STRONG><a name="[18a]"></a>RS485_RD2Init</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, bsp_rs485.o(i.RS485_RD2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RS485_RD2Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_rs485.o(.constdata)
</UL>
<P><STRONG><a name="[4cd]"></a>SearchRS485Table</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, bsp_rs485.o(i.SearchRS485Table))
<BR><BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_RDCmd
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
</UL>

<P><STRONG><a name="[34e]"></a>BubbleSort</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, bsp_adc.o(i.BubbleSort))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BubbleSort
</UL>
<BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_DataFilter
</UL>

<P><STRONG><a name="[548]"></a>USB_OTG_USBH_handle_Disconnect_ISR</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_Disconnect_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_USBH_handle_Disconnect_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[549]"></a>USB_OTG_USBH_handle_IncompletePeriodicXfer_ISR</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_IncompletePeriodicXfer_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_OTG_USBH_handle_IncompletePeriodicXfer_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[546]"></a>USB_OTG_USBH_handle_hc_ISR</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_hc_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = USB_OTG_USBH_handle_hc_ISR &rArr; USB_OTG_USBH_handle_hc_n_In_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadHostAllChannels_intr
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_Out_ISR
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_In_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[54c]"></a>USB_OTG_USBH_handle_hc_n_In_ISR</STRONG> (Thumb, 1054 bytes, Stack size 40 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_hc_n_In_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = USB_OTG_USBH_handle_hc_n_In_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_Halt
</UL>
<BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_ISR
</UL>

<P><STRONG><a name="[54d]"></a>USB_OTG_USBH_handle_hc_n_Out_ISR</STRONG> (Thumb, 952 bytes, Stack size 32 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_hc_n_Out_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USB_OTG_USBH_handle_hc_n_Out_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_Halt
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_DoPing
</UL>
<BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_ISR
</UL>

<P><STRONG><a name="[544]"></a>USB_OTG_USBH_handle_nptxfempty_ISR</STRONG> (Thumb, 302 bytes, Stack size 32 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_nptxfempty_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USB_OTG_USBH_handle_nptxfempty_ISR &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[547]"></a>USB_OTG_USBH_handle_port_ISR</STRONG> (Thumb, 310 bytes, Stack size 32 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_port_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_USBH_handle_port_ISR
</UL>
<BR>[Calls]<UL><LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_InitFSLSPClkSel
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[545]"></a>USB_OTG_USBH_handle_ptxfempty_ISR</STRONG> (Thumb, 302 bytes, Stack size 32 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_ptxfempty_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USB_OTG_USBH_handle_ptxfempty_ISR &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[543]"></a>USB_OTG_USBH_handle_rx_qlvl_ISR</STRONG> (Thumb, 356 bytes, Stack size 32 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_rx_qlvl_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USB_OTG_USBH_handle_rx_qlvl_ISR &rArr; USB_OTG_ReadPacket
</UL>
<BR>[Calls]<UL><LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[542]"></a>USB_OTG_USBH_handle_sof_ISR</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_sof_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_USBH_handle_sof_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[414]"></a>Dwin_FrameHead</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dwinprotocol.o(i.Dwin_FrameHead))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = Dwin_FrameHead &rArr; LCD_SendTwoBytes &rArr; LCD_SendByteToBuf &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendTwoBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVariColor
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDwinVariable
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTime
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum32uVariable
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum16uVariable
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintIcon
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PraPerprintBackImage
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyControl
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayQRCode
</UL>

<P><STRONG><a name="[457]"></a>LCD_SendBufLenClear</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, dwinprotocol.o(i.LCD_SendBufLenClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = LCD_SendBufLenClear &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Called By]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendToUart
</UL>

<P><STRONG><a name="[415]"></a>LCD_SendByteToBuf</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, dwinprotocol.o(i.LCD_SendByteToBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = LCD_SendByteToBuf &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVariColor
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDwinVariable
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTime
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum32uVariable
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum16uVariable
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintIcon
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PraPerprintBackImage
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyControl
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayQRCode
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendTwoBytes
</UL>

<P><STRONG><a name="[458]"></a>LCD_SendFourBytes</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dwinprotocol.o(i.LCD_SendFourBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = LCD_SendFourBytes &rArr; LCD_SendTwoBytes &rArr; LCD_SendByteToBuf &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendTwoBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum32uVariable
</UL>

<P><STRONG><a name="[417]"></a>LCD_SendToUart</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, dwinprotocol.o(i.LCD_SendToUart))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTWrite
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetDispUartStatus
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispUartStatus
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendBufLenClear
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVariColor
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDwinVariable
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTime
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum32uVariable
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum16uVariable
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintIcon
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PraPerprintBackImage
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyControl
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayQRCode
</UL>

<P><STRONG><a name="[416]"></a>LCD_SendTwoBytes</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dwinprotocol.o(i.LCD_SendTwoBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = LCD_SendTwoBytes &rArr; LCD_SendByteToBuf &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendByteToBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVariColor
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDwinVariable
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTime
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum32uVariable
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum16uVariable
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintIcon
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayQRCode
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendFourBytes
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dwin_FrameHead
</UL>

<P><STRONG><a name="[285]"></a>APP_GetCARDWL</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, displaymain.o(i.APP_GetCARDWL))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = APP_GetCARDWL &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardAnalyze
</UL>

<P><STRONG><a name="[2cc]"></a>APP_RecvCardAnalyze</STRONG> (Thumb, 1128 bytes, Stack size 56 bytes, displaymain.o(i.APP_RecvCardAnalyze))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = APP_RecvCardAnalyze &rArr; APP_RecvCardDispose &rArr; ChargeRecode_Dispose &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmpNBuf
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEXtoBCD
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCardInfoStatus
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunCardInfo
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetStartNetState
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get4GMainEvent
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardDispose
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetCARDWL
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SetStartType
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_StopCharge
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_StartCharge
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[2ce]"></a>APP_RecvCardDispose</STRONG> (Thumb, 670 bytes, Stack size 40 bytes, displaymain.o(i.APP_RecvCardDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = APP_RecvCardDispose &rArr; ChargeRecode_Dispose &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum32uVariable
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCardInfoStatus
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunCardInfo
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCardInfo
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPricMsg
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_EndChargeDate
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRecode_Dispose
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStopChargeMsg
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardAnalyze
</UL>

<P><STRONG><a name="[2df]"></a>APP_RecvConectCCUAnalyze</STRONG> (Thumb, 1358 bytes, Stack size 48 bytes, displaymain.o(i.APP_RecvConectCCUAnalyze))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = APP_RecvConectCCUAnalyze &rArr; WriterFmBill &rArr; Pre4GBill &rArr; PreAPBill
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStartFailType
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Set_ERR_Branch
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get_ERR_Branch
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSIM7600Status
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetModuleConnectState
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get4GMainEvent
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriterFmBill
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPricMsg
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_EndChargeDate
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRecode_Dispose
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu37
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYDisplayMenu36
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SetStartType
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_GetStartType
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurTime
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowStatus
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[2d9]"></a>ChargeRecode_Dispose</STRONG> (Thumb, 328 bytes, Stack size 32 bytes, displaymain.o(i.ChargeRecode_Dispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = ChargeRecode_Dispose &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseRunLed
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseK1K2
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetChargeRunningState
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunCardInfo
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetNetMoney
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetBatchNum
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RWChargeRecode
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvConectCCUAnalyze
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvCardDispose
</UL>

<P><STRONG><a name="[3ec]"></a>CountDownDispose</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, displaymain.o(i.CountDownDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = CountDownDispose &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum16uVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
</UL>

<P><STRONG><a name="[47a]"></a>CountPeriodSumTime</STRONG> (Thumb, 102 bytes, Stack size 112 bytes, displaymain.o(i.CountPeriodSumTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = CountPeriodSumTime
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Munu48_PrcDispose
</UL>

<P><STRONG><a name="[272]"></a>DealWithVari</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, displaymain.o(i.DealWithVari))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DealWithVari
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_DisplayRecvDataAnalyze
</UL>

<P><STRONG><a name="[3f8]"></a>DispPeriod</STRONG> (Thumb, 532 bytes, Stack size 80 bytes, displaymain.o(i.DispPeriod))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = DispPeriod &rArr; Period_WriterFmBill &rArr; WriterFmBill &rArr; Pre4GBill &rArr; PreAPBill
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get4GMainEvent
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Period_WriterFmBill
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Period_PowerRegulate
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Period_GerDivStatus
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCardDispose
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_SendStartCharge
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_SOCThreshold
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_ACSW
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_ShowRTC
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_ShowGunT
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_State
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_ChargeingDate
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_CardDate
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountDownDispose
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeRecode_Dispose
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_NetPageDispos
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[406]"></a>DispShow_CSQState</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, displaymain.o(i.DispShow_CSQState))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = DispShow_CSQState &rArr; PrintIcon &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintIcon
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetCSQNum
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_State
</UL>

<P><STRONG><a name="[3fe]"></a>DispShow_CardDate</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, displaymain.o(i.DispShow_CardDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = DispShow_CardDate &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetWorkState
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
</UL>

<P><STRONG><a name="[3fd]"></a>DispShow_ChargeingDate</STRONG> (Thumb, 444 bytes, Stack size 40 bytes, displaymain.o(i.DispShow_ChargeingDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = DispShow_ChargeingDate &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunCardInfo
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetNetMoney
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetWorkState
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
</UL>

<P><STRONG><a name="[40a]"></a>DispShow_NetState</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, displaymain.o(i.DispShow_NetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = DispShow_NetState &rArr; PrintIcon &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintIcon
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetNetState
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_State
</UL>

<P><STRONG><a name="[2eb]"></a>DispShow_Recode</STRONG> (Thumb, 540 bytes, Stack size 32 bytes, displaymain.o(i.DispShow_Recode))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = DispShow_Recode &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCDtoHEX
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowCopy
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectUpNChargeRecode
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectNextNChargeRecode
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SelectCurChargeRecode
</UL>

<P><STRONG><a name="[400]"></a>DispShow_State</STRONG> (Thumb, 924 bytes, Stack size 48 bytes, displaymain.o(i.DispShow_State))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = DispShow_State &rArr; Dis_ShowErr &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintIcon
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmergencyState
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowErr
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get4GMainEvent
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_NetState
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispShow_CSQState
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMeterStatus
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetErrState
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
</UL>

<P><STRONG><a name="[3fc]"></a>Disp_ShowGunT</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, displaymain.o(i.Disp_ShowGunT))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = Disp_ShowGunT &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNum16uVariable
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRM_GunT2Temp
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRM_GunT1Temp
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
</UL>

<P><STRONG><a name="[3fb]"></a>Disp_ShowRTC</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, displaymain.o(i.Disp_ShowRTC))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = Disp_ShowRTC &rArr; Dis_ShowTime &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowTime
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurTime
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
</UL>

<P><STRONG><a name="[410]"></a>Display66GunQRCode</STRONG> (Thumb, 190 bytes, Stack size 48 bytes, displaymain.o(i.Display66GunQRCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = Display66GunQRCode &rArr; DisplayQRCode &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayQRCode
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[419]"></a>Display_ParaInit</STRONG> (Thumb, 1514 bytes, Stack size 96 bytes, displaymain.o(i.Display_ParaInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = Display_ParaInit &rArr; APP_GetNetOFFLineRecodeNum &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetNetOFFLineRecodeNum
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetNetOFFLineRecodeNum
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCurMenu
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[3ff]"></a>Dispose_ACSW</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, displaymain.o(i.Dispose_ACSW))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Dispose_ACSW &rArr; BSP_IOOpen
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOOpen
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOClose
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
</UL>

<P><STRONG><a name="[401]"></a>Dispose_SOCThreshold</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, displaymain.o(i.Dispose_SOCThreshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = Dispose_SOCThreshold &rArr; SendStopChargeMsg &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStopChargeMsg
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetWorkState
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
</UL>

<P><STRONG><a name="[402]"></a>Dispose_SendStartCharge</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, displaymain.o(i.Dispose_SendStartCharge))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + Unknown Stack Size
<LI>Call Chain = Dispose_SendStartCharge &rArr; SendStartChargeMsg &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStartChargeMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
</UL>

<P><STRONG><a name="[1a8]"></a>Munu10_IP1Sert</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, displaymain.o(i.Munu10_IP1Sert))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = Munu10_IP1Sert &rArr; Display_ShowNet &rArr; Dis_Show &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowNet
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[1a9]"></a>Munu10_IP2Sert</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, displaymain.o(i.Munu10_IP2Sert))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = Munu10_IP2Sert &rArr; Display_ShowNet &rArr; Dis_Show &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowNet
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[1aa]"></a>Munu10_IP3Sert</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, displaymain.o(i.Munu10_IP3Sert))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = Munu10_IP3Sert &rArr; Display_ShowNet &rArr; Dis_Show &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowNet
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[1ab]"></a>Munu10_IP4Sert</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, displaymain.o(i.Munu10_IP4Sert))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = Munu10_IP4Sert &rArr; Display_ShowNet &rArr; Dis_Show &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowNet
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[1ac]"></a>Munu10_NetNumSet</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, displaymain.o(i.Munu10_NetNumSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = Munu10_NetNumSet &rArr; Display_ShowNet &rArr; Dis_Show &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowNet
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[1a7]"></a>Munu10_PortSert</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, displaymain.o(i.Munu10_PortSert))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = Munu10_PortSert &rArr; Display_ShowNet &rArr; Dis_Show &rArr; PrintStr &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowNet
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[18b]"></a>Munu3_16_CodeDispose</STRONG> (Thumb, 234 bytes, Stack size 8 bytes, displaymain.o(i.Munu3_16_CodeDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = Munu3_16_CodeDispose &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCardWorkStatus
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardMsg
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[18c]"></a>Munu3_CodeDispose</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, displaymain.o(i.Munu3_CodeDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = Munu3_CodeDispose &rArr; DisplayCommonMenu &rArr; PrintNum16uVariable &rArr; LCD_SendToUart &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCommonMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[1a6]"></a>Munu48_PrcDispose</STRONG> (Thumb, 480 bytes, Stack size 136 bytes, displaymain.o(i.Munu48_PrcDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = Munu48_PrcDispose &rArr; Display_PricSet &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountPeriodSumTime
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_PricSet
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_ShowStatus
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[18d]"></a>Munu50_HANDADispose</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, displaymain.o(i.Munu50_HANDADispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = Munu50_HANDADispose &rArr; SendStopChargeMsg &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStopChargeMsg
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStartChargeMsg
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetWorkState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[18e]"></a>Munu51_HANDBDispose</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, displaymain.o(i.Munu51_HANDBDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = Munu51_HANDBDispose &rArr; SendStopChargeMsg &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStopChargeMsg
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStartChargeMsg
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetWorkState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[18f]"></a>Munu52_DevnumDispose</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, displaymain.o(i.Munu52_DevnumDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Munu52_DevnumDispose &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[192]"></a>Munu52_MacMaxVolDispose</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, displaymain.o(i.Munu52_MacMaxVolDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Munu52_MacMaxVolDispose &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[193]"></a>Munu52_MacMinVolDispose</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, displaymain.o(i.Munu52_MacMinVolDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Munu52_MacMinVolDispose &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[194]"></a>Munu52_MaxOutCurDispose</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, displaymain.o(i.Munu52_MaxOutCurDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Munu52_MaxOutCurDispose &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[191]"></a>Munu52_ModuleNumDispose</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, displaymain.o(i.Munu52_ModuleNumDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Munu52_ModuleNumDispose &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[197]"></a>Munu52_OutDcCurDispose</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, displaymain.o(i.Munu52_OutDcCurDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Munu52_OutDcCurDispose &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[196]"></a>Munu52_OutDcVolDispose</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, displaymain.o(i.Munu52_OutDcVolDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Munu52_OutDcVolDispose &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[190]"></a>Munu52_ProNumDispose</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, displaymain.o(i.Munu52_ProNumDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Munu52_ProNumDispose &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[198]"></a>Munu52_SOCDispose</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, displaymain.o(i.Munu52_SOCDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Munu52_SOCDispose &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[195]"></a>Munu52_UseGunDispose</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, displaymain.o(i.Munu52_UseGunDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Munu52_UseGunDispose &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[19b]"></a>Munu53_MeterAddADispose</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, displaymain.o(i.Munu53_MeterAddADispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Munu53_MeterAddADispose &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[19c]"></a>Munu53_MeterAddBDispose</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, displaymain.o(i.Munu53_MeterAddBDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Munu53_MeterAddBDispose &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[19a]"></a>Munu53_acinputdownvalueDispose</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, displaymain.o(i.Munu53_acinputdownvalueDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Munu53_acinputdownvalueDispose &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[199]"></a>Munu53_acinputupvalueDispose</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, displaymain.o(i.Munu53_acinputupvalueDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Munu53_acinputupvalueDispose &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[19d]"></a>Munu54_SetTimeDispose</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, displaymain.o(i.Munu54_SetTimeDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Munu54_SetTimeDispose &rArr; BSP_RTCSetTime &rArr; RTC_TimeAndDate_Set &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEXtoBCD
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCSetTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[19e]"></a>Munu57_Just1Dispose</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, displaymain.o(i.Munu57_Just1Dispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = Munu57_Just1Dispose &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[19f]"></a>Munu57_Just2Dispose</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, displaymain.o(i.Munu57_Just2Dispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = Munu57_Just2Dispose &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[1a0]"></a>Munu58_Just1Dispose</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, displaymain.o(i.Munu58_Just1Dispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = Munu58_Just1Dispose &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[1a1]"></a>Munu58_Just2Dispose</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, displaymain.o(i.Munu58_Just2Dispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = Munu58_Just2Dispose &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[1a2]"></a>Munu59_Just1Dispose</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, displaymain.o(i.Munu59_Just1Dispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = Munu59_Just1Dispose &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[1a3]"></a>Munu59_Just2Dispose</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, displaymain.o(i.Munu59_Just2Dispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = Munu59_Just2Dispose &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[1a4]"></a>Munu60_Just1Dispose</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, displaymain.o(i.Munu60_Just1Dispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = Munu60_Just1Dispose &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[1a5]"></a>Munu60_Just2Dispose</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, displaymain.o(i.Munu60_Just2Dispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = Munu60_Just2Dispose &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> displaymain.o(.constdata)
</UL>
<P><STRONG><a name="[405]"></a>NetCardDispose</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, displaymain.o(i.NetCardDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + Unknown Stack Size
<LI>Call Chain = NetCardDispose &rArr; SendCardMsg &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCardWorkStatus
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_GetStartType
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCardMsg
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
</UL>

<P><STRONG><a name="[3fa]"></a>Period_GerDivStatus</STRONG> (Thumb, 460 bytes, Stack size 40 bytes, displaymain.o(i.Period_GerDivStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Period_GerDivStatus &rArr; BSP_GetHandVolt &rArr; BSP_DataFilter &rArr; BubbleSort
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MPLSState
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GetHandVolt
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMeterStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
</UL>

<P><STRONG><a name="[403]"></a>Period_PowerRegulate</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, displaymain.o(i.Period_PowerRegulate))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Period_PowerRegulate
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
</UL>

<P><STRONG><a name="[404]"></a>Period_WriterFmBill</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, displaymain.o(i.Period_WriterFmBill))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Period_WriterFmBill &rArr; WriterFmBill &rArr; Pre4GBill &rArr; PreAPBill
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCGetTime
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetStartNetState
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriterFmBill
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetWorkState
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPeriod
</UL>

<P><STRONG><a name="[37f]"></a>MeterToDispMsg_StopCharge</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, rs485meter.o(i.MeterToDispMsg_StopCharge))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = MeterToDispMsg_StopCharge &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculationBill
</UL>

<P><STRONG><a name="[38e]"></a>CardNum_Judge</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, card_cpu.o(i.CardNum_Judge))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CardNum_Judge &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCharge_StopCard
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StopCard
</UL>

<P><STRONG><a name="[395]"></a>Card_HardwareInit</STRONG> (Thumb, 134 bytes, Stack size 64 bytes, card_cpu.o(i.Card_HardwareInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = Card_HardwareInit &rArr; BSP_UARTConfigInit &rArr; BSP_UARTTxDMAConfigInit &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigInit
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCardStk
</UL>

<P><STRONG><a name="[389]"></a>Charge_Query_Card</STRONG> (Thumb, 220 bytes, Stack size 16 bytes, card_cpu.o(i.Charge_Query_Card))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = Charge_Query_Card &rArr; M1_WriterCardMoney &rArr; WaitCardmessage &rArr; OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RLCWrite
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_FrameRx_Timeout
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCardWorkStatus
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCardInfoStatus
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_WriterCardMoney
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardState
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardMoney1
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardMoney
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardID
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispMsg_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAnalysis
</UL>

<P><STRONG><a name="[38a]"></a>Charge_StartCard</STRONG> (Thumb, 438 bytes, Stack size 24 bytes, card_cpu.o(i.Charge_StartCard))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = Charge_StartCard &rArr; Dispose_LocalUnLock &rArr; APP_RWChargeRecode &rArr; APP_ChargeRecodeFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RLCWrite
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_FrameRx_Timeout
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCardWorkStatus
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCardInfoStatus
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_LocalUnLock
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_WriterCardStartMoney
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_WriterCardMoney
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardState2
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardState1
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardState
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardStartMoney
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardMoney1
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardMoney
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardID
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispMsg_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAnalysis
</UL>

<P><STRONG><a name="[38b]"></a>Charge_StopCard</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, card_cpu.o(i.Charge_StopCard))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = Charge_StopCard &rArr; M1_WriterCardUnLock &rArr; WaitCardmessage &rArr; OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RLCWrite
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_FrameRx_Timeout
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCardWorkStatus
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCardInfoStatus
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Money_Cal
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_WriterCardUnLock
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_WriterCardMoney
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardID
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispMsg_Send
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardNum_Judge
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAnalysis
</UL>

<P><STRONG><a name="[3cb]"></a>DispMsg_Send</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, card_cpu.o(i.DispMsg_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = DispMsg_Send &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCharge_StopCard
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCharge_StartCard
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StopCard
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StartCard
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_Query_Card
</UL>

<P><STRONG><a name="[3c6]"></a>M1_ReadCardID</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, card_cpu.o(i.M1_ReadCardID))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = M1_ReadCardID &rArr; WaitCardmessage &rArr; OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_FrameRx_Timeout
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitCardmessage
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardUart_MsgFree
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_ActiveCard
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCharge_StopCard
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCharge_StartCard
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StopCard
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StartCard
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_Query_Card
</UL>

<P><STRONG><a name="[3c7]"></a>M1_ReadCardMoney</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, card_cpu.o(i.M1_ReadCardMoney))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = M1_ReadCardMoney &rArr; WaitCardmessage &rArr; OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_FrameRx_Timeout
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitCardmessage
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardUart_MsgFree
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_ReadBlock
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StartCard
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_Query_Card
</UL>

<P><STRONG><a name="[3c8]"></a>M1_ReadCardMoney1</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, card_cpu.o(i.M1_ReadCardMoney1))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = M1_ReadCardMoney1 &rArr; WaitCardmessage &rArr; OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_FrameRx_Timeout
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitCardmessage
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardUart_MsgFree
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_ReadBlock
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StartCard
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_Query_Card
</UL>

<P><STRONG><a name="[3d6]"></a>M1_ReadCardStartMoney</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, card_cpu.o(i.M1_ReadCardStartMoney))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = M1_ReadCardStartMoney &rArr; WaitCardmessage &rArr; OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_FrameRx_Timeout
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitCardmessage
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardUart_MsgFree
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_ReadBlock
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StartCard
</UL>

<P><STRONG><a name="[3ca]"></a>M1_ReadCardState</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, card_cpu.o(i.M1_ReadCardState))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = M1_ReadCardState &rArr; WaitCardmessage &rArr; OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_FrameRx_Timeout
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitCardmessage
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardUart_MsgFree
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_ReadBlock
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StartCard
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_Query_Card
</UL>

<P><STRONG><a name="[3d8]"></a>M1_ReadCardState1</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, card_cpu.o(i.M1_ReadCardState1))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = M1_ReadCardState1 &rArr; WaitCardmessage &rArr; OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_FrameRx_Timeout
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitCardmessage
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardUart_MsgFree
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_ReadBlock
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StartCard
</UL>

<P><STRONG><a name="[3d9]"></a>M1_ReadCardState2</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, card_cpu.o(i.M1_ReadCardState2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = M1_ReadCardState2 &rArr; WaitCardmessage &rArr; OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_FrameRx_Timeout
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitCardmessage
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardUart_MsgFree
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_ReadBlock
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StartCard
</UL>

<P><STRONG><a name="[3c9]"></a>M1_WriterCardMoney</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, card_cpu.o(i.M1_WriterCardMoney))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = M1_WriterCardMoney &rArr; WaitCardmessage &rArr; OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_FrameRx_Timeout
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitCardmessage
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardUart_MsgFree
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_InitWallet
</UL>
<BR>[Called By]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_LocalUnLock
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StopCard
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StartCard
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_Query_Card
</UL>

<P><STRONG><a name="[3d7]"></a>M1_WriterCardStartMoney</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, card_cpu.o(i.M1_WriterCardStartMoney))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = M1_WriterCardStartMoney &rArr; WaitCardmessage &rArr; OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_FrameRx_Timeout
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitCardmessage
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardUart_MsgFree
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_InitWallet
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StartCard
</UL>

<P><STRONG><a name="[388]"></a>M1_WriterCardUnLock</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, card_cpu.o(i.M1_WriterCardUnLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = M1_WriterCardUnLock &rArr; WaitCardmessage &rArr; OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_FrameRx_Timeout
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitCardmessage
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardUart_MsgFree
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_WriterBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAnalysis
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StopCard
</UL>

<P><STRONG><a name="[3db]"></a>Money_Cal</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, card_cpu.o(i.Money_Cal))
<BR><BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_StopCard
</UL>

<P><STRONG><a name="[38c]"></a>NetCharge_StartCard</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, card_cpu.o(i.NetCharge_StartCard))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = NetCharge_StartCard &rArr; M1_ReadCardID &rArr; WaitCardmessage &rArr; OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RLCWrite
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_FrameRx_Timeout
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCardWorkStatus
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCardInfoStatus
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardID
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispMsg_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAnalysis
</UL>

<P><STRONG><a name="[38d]"></a>NetCharge_StopCard</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, card_cpu.o(i.NetCharge_StopCard))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = NetCharge_StopCard &rArr; M1_ReadCardID &rArr; WaitCardmessage &rArr; OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RLCWrite
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_FrameRx_Timeout
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCardWorkStatus
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCardInfoStatus
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardID
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispMsg_Send
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardNum_Judge
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_GetStartType
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardAnalysis
</UL>

<P><STRONG><a name="[45a]"></a>Send_ActiveCard</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, card_cpu.o(i.Send_ActiveCard))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = Send_ActiveCard &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTWrite
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcBCC
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardID
</UL>

<P><STRONG><a name="[50a]"></a>Send_AuthKey</STRONG> (Thumb, 96 bytes, Stack size 56 bytes, card_cpu.o(i.Send_AuthKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = Send_AuthKey &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTWrite
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcBCC
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCardStk
</UL>

<P><STRONG><a name="[421]"></a>Send_InitWallet</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, card_cpu.o(i.Send_InitWallet))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = Send_InitWallet &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTWrite
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcBCC
</UL>
<BR>[Called By]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_LocalUnLock
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_WriterCardStartMoney
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_WriterCardMoney
</UL>

<P><STRONG><a name="[45c]"></a>Send_ReadBlock</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, card_cpu.o(i.Send_ReadBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = Send_ReadBlock &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTWrite
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcBCC
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardState2
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardState1
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardState
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardStartMoney
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardMoney1
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_ReadCardMoney
</UL>

<P><STRONG><a name="[45d]"></a>Send_WriterBlock</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, card_cpu.o(i.Send_WriterBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Send_WriterBlock &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTWrite
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcBCC
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_WriterCardUnLock
</UL>

<P><STRONG><a name="[27c]"></a>ProtocolFlashOperation</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, flashdatadeal.o(i.ProtocolFlashOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
</UL>

<P><STRONG><a name="[276]"></a>SearchParaManagementTable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, flashdatadeal.o(i.SearchParaManagementTable))
<BR><BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
</UL>

<P><STRONG><a name="[3a6]"></a>ChargeErrMethodA</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, connectbms.o(i.ChargeErrMethodA))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = ChargeErrMethodA &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrHandleB
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrHandleA
</UL>

<P><STRONG><a name="[3a7]"></a>ChargeErrMethodB</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, connectbms.o(i.ChargeErrMethodB))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = ChargeErrMethodB &rArr; BMS_CONNECT_StepSet &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSErrState
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrHandleB
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrHandleA
</UL>

<P><STRONG><a name="[3a8]"></a>ChargeErrMethodC</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, connectbms.o(i.ChargeErrMethodC))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = ChargeErrMethodC &rArr; BMS_CONNECT_StepSet &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSErrState
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrHandleB
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrHandleA
</UL>

<P><STRONG><a name="[3aa]"></a>Dispose_TimeoutErrB</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, connectbms.o(i.Dispose_TimeoutErrB))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Dispose_TimeoutErrB
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Set_ERR_Branch
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get_ERR_Branch
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStartFailType
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeErrSwitch
</UL>

<P><STRONG><a name="[528]"></a>APP_AnalyzeRxDataA</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, controlmain.o(i.APP_AnalyzeRxDataA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APP_AnalyzeRxDataA
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskControlGunA
</UL>

<P><STRONG><a name="[529]"></a>APP_AnalyzeRxDataB</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, controlmain.o(i.APP_AnalyzeRxDataB))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APP_AnalyzeRxDataB
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskControlGunB
</UL>

<P><STRONG><a name="[2a2]"></a>APP_MonitorChargingState</STRONG> (Thumb, 2580 bytes, Stack size 80 bytes, controlmain.o(i.APP_MonitorChargingState))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = APP_MonitorChargingState &rArr; APP_CheckPowerModule &rArr; SetBcuRemoteSignalState &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseK1K2
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseBMSPower
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MPLSState
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GetTemp2
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GetTemp1
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmergencyState
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Set_ERR_Branch
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NB_WriterReason
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStartFailType
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcuRemoteSignalState
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetElecLockState
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargeMode
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSStartCharge
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetModuleReturnACVol
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPowerDCState
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPowerDCState
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargeRunningState
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSStopCharge
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPresetValue
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_CheckPowerModule
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPeriod
</UL>

<P><STRONG><a name="[2ae]"></a>APP_MonitorGunState</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, controlmain.o(i.APP_MonitorGunState))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = APP_MonitorGunState &rArr; BMS_CONNECT_StepSet &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBMSInsulationCheck
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSStartCharge
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_StepSet
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMS_CONNECT_ControlInit
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRM_HandVolt
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGunState
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBMSStopCharge
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlParaInit
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPeriod
</UL>

<P><STRONG><a name="[2b3]"></a>APP_MonitorRemoteSignalState</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, controlmain.o(i.APP_MonitorRemoteSignalState))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = APP_MonitorRemoteSignalState &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_OpenLOCK
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CloseLOCK
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MPLSState
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GetLockState
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmergencyState
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEmergencyState
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetElecLockState
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPeriod
</UL>

<P><STRONG><a name="[3e6]"></a>Connect_4G</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, 4gmain.o(i.Connect_4G))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = Connect_4G &rArr; ModuleSIM7600_ConnectServer &rArr; Module_ConnectServer &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSIM7600Status
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetModuleConnectState
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600Reset
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600CloseNet
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_SIM7600Test
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_ConnectServer
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
</UL>

<P><STRONG><a name="[50c]"></a>__NVIC_SystemReset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, 4gmain.o(i.__NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GMain
</UL>

<P><STRONG><a name="[431]"></a>GPRSRecv_HardwareInit</STRONG> (Thumb, 138 bytes, Stack size 72 bytes, 4grecv.o(i.GPRSRecv_HardwareInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = GPRSRecv_HardwareInit &rArr; BSP_UARTConfigTimeInit &rArr; BSP_UARTTxDMAConfigInit &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UARTConfigTimeInit
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task4GRecv
</UL>

<P><STRONG><a name="[9f]"></a>_66_RecvCardStart</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, _66frame.o(i._66_RecvCardStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _66_RecvCardStart &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RLCWrite
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _66frame.o(.data)
</UL>
<P><STRONG><a name="[9b]"></a>_66_RecvDevFailAck</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, _66frame.o(i._66_RecvDevFailAck))
<BR>[Address Reference Count : 1]<UL><LI> _66frame.o(.data)
</UL>
<P><STRONG><a name="[97]"></a>_66_RecvDevInfoAck</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, _66frame.o(i._66_RecvDevInfoAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _66_RecvDevInfoAck
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _66frame.o(.data)
</UL>
<P><STRONG><a name="[9a]"></a>_66_RecvDevStopAck</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, _66frame.o(i._66_RecvDevStopAck))
<BR>[Address Reference Count : 1]<UL><LI> _66frame.o(.data)
</UL>
<P><STRONG><a name="[96]"></a>_66_RecvHearAck</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _66frame.o(i._66_RecvHearAck))
<BR>[Address Reference Count : 1]<UL><LI> _66frame.o(.data)
</UL>
<P><STRONG><a name="[9d]"></a>_66_RecvQueryBill</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, _66frame.o(i._66_RecvQueryBill))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = _66_RecvQueryBill &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _66frame.o(.data)
</UL>
<P><STRONG><a name="[9e]"></a>_66_RecvQueryRate</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, _66frame.o(i._66_RecvQueryRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = _66_RecvQueryRate &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _66frame.o(.data)
</UL>
<P><STRONG><a name="[a1]"></a>_66_RecvRateFWSet</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _66frame.o(i._66_RecvRateFWSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + Unknown Stack Size
<LI>Call Chain = _66_RecvRateFWSet &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _66frame.o(.data)
</UL>
<P><STRONG><a name="[9c]"></a>_66_RecvRateSet</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, _66frame.o(i._66_RecvRateSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = _66_RecvRateSet &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _66frame.o(.data)
</UL>
<P><STRONG><a name="[99]"></a>_66_RecvRecordAck</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, _66frame.o(i._66_RecvRecordAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _66_RecvRecordAck &rArr; WriterFmBill &rArr; Pre4GBill &rArr; PreAPBill
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriterFmBill
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _66frame.o(.data)
</UL>
<P><STRONG><a name="[98]"></a>_66_RecvRegisterAck</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, _66frame.o(i._66_RecvRegisterAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _66_RecvRegisterAck &rArr; ReadFmBill &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFmBill
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetAppRegisterState
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _66frame.o(.data)
</UL>
<P><STRONG><a name="[a0]"></a>_66_RecvSetInfo</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, _66frame.o(i._66_RecvSetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 100 + Unknown Stack Size
<LI>Call Chain = _66_RecvSetInfo &rArr; BSP_RTCSetTime &rArr; RTC_TimeAndDate_Set &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCSetTime
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _66frame.o(.data)
</UL>
<P><STRONG><a name="[94]"></a>_66_RecvStartCharge</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, _66frame.o(i._66_RecvStartCharge))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + Unknown Stack Size
<LI>Call Chain = _66_RecvStartCharge &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get4GMainEvent
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _66frame.o(.data)
</UL>
<P><STRONG><a name="[95]"></a>_66_RecvStopCharge</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, _66frame.o(i._66_RecvStopCharge))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = _66_RecvStopCharge &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get4GMainEvent
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _66frame.o(.data)
</UL>
<P><STRONG><a name="[91]"></a>_66_SendHear</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, _66frame.o(i._66_SendHear))
<BR><BR>[Stack]<UL><LI>Max Depth = 696 + Unknown Stack Size
<LI>Call Chain = _66_SendHear &rArr; _66FreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66FreamSend
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _66frame.o(.data)
</UL>
<P><STRONG><a name="[90]"></a>_66_SendRegister</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _66frame.o(i._66_SendRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = _66_SendRegister &rArr; _66FreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGunNum
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66FreamSend
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _66frame.o(.data)
</UL>
<P><STRONG><a name="[57f]"></a>get_crc_Data</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, _66frame.o(i.get_crc_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_crc_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_66FreamSend
</UL>

<P><STRONG><a name="[301]"></a>AP_CardWhiteListDispose</STRONG> (Thumb, 290 bytes, Stack size 48 bytes, apframe.o(i.AP_CardWhiteListDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = AP_CardWhiteListDispose &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmpNBuf
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvB17CardWL
</UL>

<P><STRONG><a name="[b1]"></a>AP_RecvB16OFFLineRco</STRONG> (Thumb, 88 bytes, Stack size 320 bytes, apframe.o(i.AP_RecvB16OFFLineRco))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = AP_RecvB16OFFLineRco &rArr; APP_RWNetOFFLineRecode &rArr; APP_ChargeOffLineFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmpNBuf
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RWNetOFFLineRecode
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[ae]"></a>AP_RecvB17CardWL</STRONG> (Thumb, 230 bytes, Stack size 128 bytes, apframe.o(i.AP_RecvB17CardWL))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = AP_RecvB17CardWL &rArr; AP_CardWhiteListDispose &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_CardWhiteListDispose
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[af]"></a>AP_RecvB19VINWL</STRONG> (Thumb, 218 bytes, Stack size 288 bytes, apframe.o(i.AP_RecvB19VINWL))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = AP_RecvB19VINWL &rArr; AP_VinWhiteListDispose &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_VinWhiteListDispose
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[b0]"></a>AP_RecvB21VINCardRes</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, apframe.o(i.AP_RecvB21VINCardRes))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = AP_RecvB21VINCardRes &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[a9]"></a>AP_RecvB54BillAck</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, apframe.o(i.AP_RecvB54BillAck))
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[ab]"></a>AP_RecvCardB7</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, apframe.o(i.AP_RecvCardB7))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + Unknown Stack Size
<LI>Call Chain = AP_RecvCardB7 &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RLCWrite
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[ac]"></a>AP_RecvCardB9</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, apframe.o(i.AP_RecvCardB9))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + Unknown Stack Size
<LI>Call Chain = AP_RecvCardB9 &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RLCWrite
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[ad]"></a>AP_RecvCardVinStartB11</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, apframe.o(i.AP_RecvCardVinStartB11))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = AP_RecvCardVinStartB11 &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RLCWrite
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get4GMainEvent
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[a6]"></a>AP_RecvHearAck</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, apframe.o(i.AP_RecvHearAck))
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[a8]"></a>AP_RecvOnlineBillAck</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, apframe.o(i.AP_RecvOnlineBillAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = AP_RecvOnlineBillAck &rArr; WriterFmBill &rArr; Pre4GBill &rArr; PreAPBill
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriterFmBill
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[a3]"></a>AP_RecvPricB2</STRONG> (Thumb, 376 bytes, Stack size 48 bytes, apframe.o(i.AP_RecvPricB2))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = AP_RecvPricB2 &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[a4]"></a>AP_RecvPricB47</STRONG> (Thumb, 268 bytes, Stack size 48 bytes, apframe.o(i.AP_RecvPricB47))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = AP_RecvPricB47 &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCDtoHEX
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[aa]"></a>AP_RecvSTCmd</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, apframe.o(i.AP_RecvSTCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = AP_RecvSTCmd &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get4GMainEvent
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[a5]"></a>AP_RecvStartAppAck</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, apframe.o(i.AP_RecvStartAppAck))
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[a7]"></a>AP_RecvTime</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, apframe.o(i.AP_RecvTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 100 + Unknown Stack Size
<LI>Call Chain = AP_RecvTime &rArr; BSP_RTCSetTime &rArr; RTC_TimeAndDate_Set &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEXtoBCD
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCSetTime
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[a2]"></a>AP_RegisteeAck</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, apframe.o(i.AP_RegisteeAck))
<BR><BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetAppRegisterState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[b7]"></a>AP_SendCarInfoA</STRONG> (Thumb, 482 bytes, Stack size 216 bytes, apframe.o(i.AP_SendCarInfoA))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = AP_SendCarInfoA &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[b8]"></a>AP_SendCarInfoB</STRONG> (Thumb, 520 bytes, Stack size 216 bytes, apframe.o(i.AP_SendCarInfoB))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = AP_SendCarInfoB &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGunNum
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[b5]"></a>AP_SendChargeInfoA</STRONG> (Thumb, 536 bytes, Stack size 224 bytes, apframe.o(i.AP_SendChargeInfoA))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = AP_SendChargeInfoA &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmergencyState
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[b6]"></a>AP_SendChargeInfoB</STRONG> (Thumb, 564 bytes, Stack size 224 bytes, apframe.o(i.AP_SendChargeInfoB))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = AP_SendChargeInfoB &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmergencyState
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGunNum
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[b3]"></a>AP_SendHear</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, apframe.o(i.AP_SendHear))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = AP_SendHear &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[b4]"></a>AP_SendRegister</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, apframe.o(i.AP_SendRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = AP_SendRegister &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[319]"></a>AP_SendSetPricB2Ack</STRONG> (Thumb, 236 bytes, Stack size 64 bytes, apframe.o(i.AP_SendSetPricB2Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = AP_SendSetPricB2Ack &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendRateAck
</UL>

<P><STRONG><a name="[318]"></a>AP_SendSetPricB47Ack</STRONG> (Thumb, 244 bytes, Stack size 64 bytes, apframe.o(i.AP_SendSetPricB47Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = AP_SendSetPricB47Ack &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_SendRateAck
</UL>

<P><STRONG><a name="[b2]"></a>AP_SendStartApp</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, apframe.o(i.AP_SendStartApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = AP_SendStartApp &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apframe.o(.data)
</UL>
<P><STRONG><a name="[303]"></a>AP_VinWhiteListDispose</STRONG> (Thumb, 312 bytes, Stack size 48 bytes, apframe.o(i.AP_VinWhiteListDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = AP_VinWhiteListDispose &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmpNBuf
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AP_RecvB19VINWL
</UL>

<P><STRONG><a name="[bb]"></a>ZF_SendDevState</STRONG> (Thumb, 404 bytes, Stack size 72 bytes, zfframe.o(i.ZF_SendDevState))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = ZF_SendDevState &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zfframe.o(.data)
</UL>
<P><STRONG><a name="[bc]"></a>ZF_SendDevStateB</STRONG> (Thumb, 404 bytes, Stack size 72 bytes, zfframe.o(i.ZF_SendDevStateB))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = ZF_SendDevStateB &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChargingInfo
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGunState
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zfframe.o(.data)
</UL>
<P><STRONG><a name="[ba]"></a>ZF_SendHear</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, zfframe.o(i.ZF_SendHear))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = ZF_SendHear &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zfframe.o(.data)
</UL>
<P><STRONG><a name="[b9]"></a>ZF_SendRegister</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, zfframe.o(i.ZF_SendRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = ZF_SendRegister &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_SendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zfframe.o(.data)
</UL>
<P><STRONG><a name="[461]"></a>Module_ConnectServer</STRONG> (Thumb, 84 bytes, Stack size 80 bytes, modulesim7600.o(i.Module_ConnectServer))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = Module_ConnectServer &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_ConnectServer
</UL>

<P><STRONG><a name="[1eb]"></a>Recv_AT_CGDCONT_Ack</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, modulesim7600.o(i.Recv_AT_CGDCONT_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Recv_AT_CGDCONT_Ack &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1ea]"></a>Recv_AT_CIMI_Ack</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, modulesim7600.o(i.Recv_AT_CIMI_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Recv_AT_CIMI_Ack &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1ec]"></a>Recv_AT_CIPMODE_Ack</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, modulesim7600.o(i.Recv_AT_CIPMODE_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Recv_AT_CIPMODE_Ack &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1e9]"></a>Recv_AT_CSQ_Ack</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, modulesim7600.o(i.Recv_AT_CSQ_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Recv_AT_CSQ_Ack &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1ee]"></a>Recv_AT_ConnectServer0Cmd_Ack</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, modulesim7600.o(i.Recv_AT_ConnectServer0Cmd_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = Recv_AT_ConnectServer0Cmd_Ack &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1f0]"></a>Recv_AT_ConnectServer0_Ack</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, modulesim7600.o(i.Recv_AT_ConnectServer0_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Recv_AT_ConnectServer0_Ack &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1ef]"></a>Recv_AT_ConnectServer1Cmd_Ack</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, modulesim7600.o(i.Recv_AT_ConnectServer1Cmd_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Recv_AT_ConnectServer1Cmd_Ack &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1f1]"></a>Recv_AT_ConnectServer1_Ack</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, modulesim7600.o(i.Recv_AT_ConnectServer1_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Recv_AT_ConnectServer1_Ack &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1f2]"></a>Recv_AT_EnterATCmd_Ack</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, modulesim7600.o(i.Recv_AT_EnterATCmd_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Recv_AT_EnterATCmd_Ack &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1ed]"></a>Recv_AT_NETOPEN_Ack</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, modulesim7600.o(i.Recv_AT_NETOPEN_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Recv_AT_NETOPEN_Ack &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1f5]"></a>Recv_AT_ReRecv0Cmd_Ack</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, modulesim7600.o(i.Recv_AT_ReRecv0Cmd_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Recv_AT_ReRecv0Cmd_Ack &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvDataControl
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1f6]"></a>Recv_AT_ReRecv1Cmd_Ack</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, modulesim7600.o(i.Recv_AT_ReRecv1Cmd_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Recv_AT_ReRecv1Cmd_Ack &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvDataControl
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1f3]"></a>Recv_AT_SendAck0Cmd_Ack</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, modulesim7600.o(i.Recv_AT_SendAck0Cmd_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Recv_AT_SendAck0Cmd_Ack &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1f4]"></a>Recv_AT_SendAck1Cmd_Ack</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, modulesim7600.o(i.Recv_AT_SendAck1Cmd_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Recv_AT_SendAck1Cmd_Ack &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1f7]"></a>Recv_AT_SetReAct_Ack</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, modulesim7600.o(i.Recv_AT_SetReAct_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Recv_AT_SetReAct_Ack &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1f8]"></a>Recv_ActRecv0_Ack</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, modulesim7600.o(i.Recv_ActRecv0_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = Recv_ActRecv0_Ack &rArr; Send_AT_CIPRXGET &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CIPRXGET
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1f9]"></a>Recv_ActRecv1_Ack</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, modulesim7600.o(i.Recv_ActRecv1_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = Recv_ActRecv1_Ack &rArr; Send_AT_CIPRXGET &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AT_CIPRXGET
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[202]"></a>Recv_CFTPSGET_Ack</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, modulesim7600.o(i.Recv_CFTPSGET_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = Recv_CFTPSGET_Ack &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvDataControl
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[201]"></a>Recv_CFTPSTYPE_Ack</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, modulesim7600.o(i.Recv_CFTPSTYPE_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Recv_CFTPSTYPE_Ack &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[200]"></a>Recv_FTPLOGIN_Ack</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, modulesim7600.o(i.Recv_FTPLOGIN_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Recv_FTPLOGIN_Ack &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1ff]"></a>Recv_FTPStart_Ack</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, modulesim7600.o(i.Recv_FTPStart_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Recv_FTPStart_Ack &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1fb]"></a>Recv_HttpConect_Ack</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, modulesim7600.o(i.Recv_HttpConect_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Recv_HttpConect_Ack &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1fc]"></a>Recv_HttpGet_Ack</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, modulesim7600.o(i.Recv_HttpGet_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = Recv_HttpGet_Ack &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvDataControl
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1fa]"></a>Recv_HttpStart_Ack</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, modulesim7600.o(i.Recv_HttpStart_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Recv_HttpStart_Ack &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1fe]"></a>Recv_ReadData_Ack</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, modulesim7600.o(i.Recv_ReadData_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = Recv_ReadData_Ack &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_RecvDataControl
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[1fd]"></a>Recv_ReadDone_Ack</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, modulesim7600.o(i.Recv_ReadDone_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Recv_ReadDone_Ack &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modulesim7600.o(.constdata)
</UL>
<P><STRONG><a name="[46c]"></a>Send_AT_CFTPSGET</STRONG> (Thumb, 78 bytes, Stack size 112 bytes, modulesim7600.o(i.Send_AT_CFTPSGET))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = Send_AT_CFTPSGET &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_FTPDownload
</UL>

<P><STRONG><a name="[46a]"></a>Send_AT_CFTPSLOGIN</STRONG> (Thumb, 90 bytes, Stack size 232 bytes, modulesim7600.o(i.Send_AT_CFTPSLOGIN))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = Send_AT_CFTPSLOGIN &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_FTPDownload
</UL>

<P><STRONG><a name="[46d]"></a>Send_AT_CFTPSRead</STRONG> (Thumb, 68 bytes, Stack size 64 bytes, modulesim7600.o(i.Send_AT_CFTPSRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = Send_AT_CFTPSRead &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_FTPDownload
</UL>

<P><STRONG><a name="[469]"></a>Send_AT_CFTPSSTART</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, modulesim7600.o(i.Send_AT_CFTPSSTART))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Send_AT_CFTPSSTART &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_FTPDownload
</UL>

<P><STRONG><a name="[46b]"></a>Send_AT_CFTPSTYPE</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, modulesim7600.o(i.Send_AT_CFTPSTYPE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Send_AT_CFTPSTYPE &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_FTPDownload
</UL>

<P><STRONG><a name="[476]"></a>Send_AT_CGDCONT</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, modulesim7600.o(i.Send_AT_CGDCONT))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Send_AT_CGDCONT &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_SIM7600Test
</UL>

<P><STRONG><a name="[474]"></a>Send_AT_CIMI</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, modulesim7600.o(i.Send_AT_CIMI))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Send_AT_CIMI &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_SIM7600Test
</UL>

<P><STRONG><a name="[4ff]"></a>Send_AT_CIPCLOSE</STRONG> (Thumb, 76 bytes, Stack size 72 bytes, modulesim7600.o(i.Send_AT_CIPCLOSE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = Send_AT_CIPCLOSE &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600Reset
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600CloseNet
</UL>

<P><STRONG><a name="[468]"></a>Send_AT_EnterATCmd</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, modulesim7600.o(i.Send_AT_EnterATCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Send_AT_EnterATCmd &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_HTTPDownload
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_FTPDownload
</UL>

<P><STRONG><a name="[472]"></a>Send_AT_GET</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, modulesim7600.o(i.Send_AT_GET))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Send_AT_GET &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_HTTPDownload
</UL>

<P><STRONG><a name="[470]"></a>Send_AT_HTTPINIT</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, modulesim7600.o(i.Send_AT_HTTPINIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Send_AT_HTTPINIT &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_HTTPDownload
</UL>

<P><STRONG><a name="[471]"></a>Send_AT_HTTPPAR</STRONG> (Thumb, 78 bytes, Stack size 112 bytes, modulesim7600.o(i.Send_AT_HTTPPAR))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = Send_AT_HTTPPAR &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_HTTPDownload
</UL>

<P><STRONG><a name="[46f]"></a>Send_AT_HTTPTERM</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, modulesim7600.o(i.Send_AT_HTTPTERM))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Send_AT_HTTPTERM &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_HTTPDownload
</UL>

<P><STRONG><a name="[500]"></a>Send_AT_NETCLOSE</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, modulesim7600.o(i.Send_AT_NETCLOSE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Send_AT_NETCLOSE &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600Reset
</UL>

<P><STRONG><a name="[460]"></a>Send_AT_NETOPEN</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, modulesim7600.o(i.Send_AT_NETOPEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Send_AT_NETOPEN &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleSIM7600_ConnectServer
</UL>

<P><STRONG><a name="[477]"></a>Send_AT_NOTCIPMODE</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, modulesim7600.o(i.Send_AT_NOTCIPMODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Send_AT_NOTCIPMODE &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_SIM7600Test
</UL>

<P><STRONG><a name="[473]"></a>Send_AT_READ</STRONG> (Thumb, 68 bytes, Stack size 72 bytes, modulesim7600.o(i.Send_AT_READ))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = Send_AT_READ &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_HTTPDownload
</UL>

<P><STRONG><a name="[479]"></a>Send_AT_SetCIPRXGET</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, modulesim7600.o(i.Send_AT_SetCIPRXGET))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Send_AT_SetCIPRXGET &rArr; UART_4GWrite &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_4GWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_SIM7600Test
</UL>

<P><STRONG><a name="[cc]"></a>HY_RecvCardStart</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, hyframe.o(i.HY_RecvCardStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = HY_RecvCardStart &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RLCWrite
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hyframe.o(.data)
</UL>
<P><STRONG><a name="[c8]"></a>HY_RecvDevFailAck</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hyframe.o(i.HY_RecvDevFailAck))
<BR>[Address Reference Count : 1]<UL><LI> hyframe.o(.data)
</UL>
<P><STRONG><a name="[c4]"></a>HY_RecvDevInfoAck</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, hyframe.o(i.HY_RecvDevInfoAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = HY_RecvDevInfoAck &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hyframe.o(.data)
</UL>
<P><STRONG><a name="[c7]"></a>HY_RecvDevStopAck</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hyframe.o(i.HY_RecvDevStopAck))
<BR>[Address Reference Count : 1]<UL><LI> hyframe.o(.data)
</UL>
<P><STRONG><a name="[c3]"></a>HY_RecvHearAck</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, hyframe.o(i.HY_RecvHearAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = HY_RecvHearAck &rArr; HY_SendUpdataAck &rArr; HYFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendUpdataAck
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetSIM7600Mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hyframe.o(.data)
</UL>
<P><STRONG><a name="[ca]"></a>HY_RecvQueryBill</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, hyframe.o(i.HY_RecvQueryBill))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = HY_RecvQueryBill &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hyframe.o(.data)
</UL>
<P><STRONG><a name="[cb]"></a>HY_RecvQueryRate</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, hyframe.o(i.HY_RecvQueryRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = HY_RecvQueryRate &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hyframe.o(.data)
</UL>
<P><STRONG><a name="[c9]"></a>HY_RecvRateSet</STRONG> (Thumb, 358 bytes, Stack size 56 bytes, hyframe.o(i.HY_RecvRateSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = HY_RecvRateSet &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hyframe.o(.data)
</UL>
<P><STRONG><a name="[c6]"></a>HY_RecvRecordAck</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, hyframe.o(i.HY_RecvRecordAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = HY_RecvRecordAck &rArr; WriterFmBill &rArr; Pre4GBill &rArr; PreAPBill
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriterFmBill
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hyframe.o(.data)
</UL>
<P><STRONG><a name="[c5]"></a>HY_RecvRegisterAck</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, hyframe.o(i.HY_RecvRegisterAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = HY_RecvRegisterAck &rArr; ReadFmBill &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCSetTime
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFmBill
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetAppRegisterState
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hyframe.o(.data)
</UL>
<P><STRONG><a name="[c1]"></a>HY_RecvStartCharge</STRONG> (Thumb, 306 bytes, Stack size 48 bytes, hyframe.o(i.HY_RecvStartCharge))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + Unknown Stack Size
<LI>Call Chain = HY_RecvStartCharge &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get4GMainEvent
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hyframe.o(.data)
</UL>
<P><STRONG><a name="[c2]"></a>HY_RecvStopCharge</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, hyframe.o(i.HY_RecvStopCharge))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = HY_RecvStopCharge &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get4GMainEvent
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hyframe.o(.data)
</UL>
<P><STRONG><a name="[cd]"></a>HY_RecvUpdata</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, hyframe.o(i.HY_RecvUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HY_RecvUpdata &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetSIM7600Mode
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hyframe.o(.data)
</UL>
<P><STRONG><a name="[ce]"></a>HY_RecvVin</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, hyframe.o(i.HY_RecvVin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HY_RecvVin
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get4GMainEvent
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hyframe.o(.data)
</UL>
<P><STRONG><a name="[be]"></a>HY_SendHear</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, hyframe.o(i.HY_SendHear))
<BR><BR>[Stack]<UL><LI>Max Depth = 736 + Unknown Stack Size
<LI>Call Chain = HY_SendHear &rArr; HY_SendVinInfo &rArr; HYFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HY_SendVinInfo
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYFreamSend
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hyframe.o(.data)
</UL>
<P><STRONG><a name="[bd]"></a>HY_SendRegister</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, hyframe.o(i.HY_SendRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = HY_SendRegister &rArr; HYFreamSend &rArr; ModuleSIM7600_SendData &rArr; BSP_UARTWrite &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetAppRegisterState
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGunNum
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDevNum
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYFreamSend
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hyframe.o(.data)
</UL>
<P><STRONG><a name="[43c]"></a>get_crc_Data</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hyframe.o(i.get_crc_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_crc_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HYFreamSend
</UL>

<P><STRONG><a name="[de]"></a>YKC_BCRecvCard</STRONG> (Thumb, 412 bytes, Stack size 48 bytes, ykcframe.o(i.YKC_BCRecvCard))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + Unknown Stack Size
<LI>Call Chain = YKC_BCRecvCard &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get4GMainEvent
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SetStartType
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[df]"></a>YKC_BCRecvStart</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, ykcframe.o(i.YKC_BCRecvStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = YKC_BCRecvStart &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get4GMainEvent
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetErrState
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[e5]"></a>YKC_RecvBalance</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, ykcframe.o(i.YKC_RecvBalance))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + Unknown Stack Size
<LI>Call Chain = YKC_RecvBalance &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[dc]"></a>YKC_RecvCard</STRONG> (Thumb, 292 bytes, Stack size 40 bytes, ykcframe.o(i.YKC_RecvCard))
<BR><BR>[Stack]<UL><LI>Max Depth = 84 + Unknown Stack Size
<LI>Call Chain = YKC_RecvCard &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get4GMainEvent
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_4G_SetStartType
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[db]"></a>YKC_RecvPricAck</STRONG> (Thumb, 376 bytes, Stack size 48 bytes, ykcframe.o(i.YKC_RecvPricAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = YKC_RecvPricAck &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[e4]"></a>YKC_RecvPricSet</STRONG> (Thumb, 420 bytes, Stack size 48 bytes, ykcframe.o(i.YKC_RecvPricSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = YKC_RecvPricSet &rArr; APP_FlashOperation &rArr; ProtocolFlashOperation &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI5_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetDispControl
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashOperation
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[e7]"></a>YKC_RecvQRcode</STRONG> (Thumb, 152 bytes, Stack size 192 bytes, ykcframe.o(i.YKC_RecvQRcode))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = YKC_RecvQRcode &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get4GMainEvent
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[e1]"></a>YKC_RecvReadData</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, ykcframe.o(i.YKC_RecvReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = YKC_RecvReadData &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[e2]"></a>YKC_RecvRecordAck</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, ykcframe.o(i.YKC_RecvRecordAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = YKC_RecvRecordAck &rArr; WriterFmBill &rArr; Pre4GBill &rArr; PreAPBill
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriterFmBill
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[dd]"></a>YKC_RecvStart</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, ykcframe.o(i.YKC_RecvStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = YKC_RecvStart &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get4GMainEvent
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[e0]"></a>YKC_RecvStop</STRONG> (Thumb, 228 bytes, Stack size 40 bytes, ykcframe.o(i.YKC_RecvStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 84 + Unknown Stack Size
<LI>Call Chain = YKC_RecvStop &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Get4GMainEvent
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[e3]"></a>YKC_RecvTime</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, ykcframe.o(i.YKC_RecvTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 100 + Unknown Stack Size
<LI>Call Chain = YKC_RecvTime &rArr; BSP_RTCSetTime &rArr; RTC_TimeAndDate_Set &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEXtoBCD
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTCSetTime
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[e6]"></a>YKC_RecvUpdate</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, ykcframe.o(i.YKC_RecvUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = YKC_RecvUpdate &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetSIM7600Mode
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetSendTaskEvent
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ykcframe.o(.data)
</UL>
<P><STRONG><a name="[55c]"></a>ykc_get_crc_Data</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, ykcframe.o(i.ykc_get_crc_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ykc_get_crc_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YKCFreamSend
</UL>

<P><STRONG><a name="[203]"></a>APP_PowerModuleStartA</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, pcumain.o(i.APP_PowerModuleStartA))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_PowerModuleStartA
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDemandChange
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pcumain.o(.constdata)
</UL>
<P><STRONG><a name="[205]"></a>APP_PowerModuleStartB</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, pcumain.o(i.APP_PowerModuleStartB))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = APP_PowerModuleStartB &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDemandChange
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pcumain.o(.constdata)
</UL>
<P><STRONG><a name="[204]"></a>APP_PowerModuleStopA</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, pcumain.o(i.APP_PowerModuleStopA))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = APP_PowerModuleStopA &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDemandChange
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pcumain.o(.constdata)
</UL>
<P><STRONG><a name="[206]"></a>APP_PowerModuleStopB</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, pcumain.o(i.APP_PowerModuleStopB))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = APP_PowerModuleStopB &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDemandChange
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pcumain.o(.constdata)
</UL>
<P><STRONG><a name="[3dc]"></a>APP_GetGunNormalModule</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, controlapp.o(i.APP_GetGunNormalModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = APP_GetGunNormalModule
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_UseAllMdule
</UL>

<P><STRONG><a name="[2bf]"></a>APP_PowerModuleStart</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, controlapp.o(i.APP_PowerModuleStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = APP_PowerModuleStart &rArr; Charge_QZMode &rArr; Charge_AvegMode &rArr; Charge_ReduceModule &rArr; Charge_SHReduceModule &rArr; Send_SetGroupVI &rArr; SHSet_Group_Vol &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_NowCurrLimit
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_QZMode
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_AvegMode
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_DemandChargeDispose
</UL>

<P><STRONG><a name="[2c2]"></a>Charge_AvegMode</STRONG> (Thumb, 430 bytes, Stack size 56 bytes, controlapp.o(i.Charge_AvegMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = Charge_AvegMode &rArr; Charge_ReduceModule &rArr; Charge_SHReduceModule &rArr; Send_SetGroupVI &rArr; SHSet_Group_Vol &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOOpen
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SetModuleVI
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_ReduceModule
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_FristOpenGun
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_AddModule
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ModuleInfoNum
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seek_CanReduceModule
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seek_CanAddModule
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_QZMode
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModuleStart
</UL>

<P><STRONG><a name="[2c1]"></a>Charge_QZMode</STRONG> (Thumb, 368 bytes, Stack size 56 bytes, controlapp.o(i.Charge_QZMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = Charge_QZMode &rArr; Charge_AvegMode &rArr; Charge_ReduceModule &rArr; Charge_SHReduceModule &rArr; Send_SetGroupVI &rArr; SHSet_Group_Vol &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_NowCurrLimit
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_ReduceModule
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_MiddleSW
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_UseAllMdule
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_AvegMode
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModuleStart
</UL>

<P><STRONG><a name="[3c5]"></a>Charge_UseAllMdule</STRONG> (Thumb, 498 bytes, Stack size 48 bytes, controlapp.o(i.Charge_UseAllMdule))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = Charge_UseAllMdule &rArr; Charge_ReduceModule &rArr; Charge_SHReduceModule &rArr; Send_SetGroupVI &rArr; SHSet_Group_Vol &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOOpen
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SetModuleVI
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_ReduceModule
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_FristOpenGun
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_AddModule
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ModuleInfoNum
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_MiddleSW
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetGunNormalModule
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_QZMode
</UL>

<P><STRONG><a name="[3e1]"></a>Check_DemandChargeDispose</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, controlapp.o(i.Check_DemandChargeDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = Check_DemandChargeDispose &rArr; APP_PowerModuleStart &rArr; Charge_QZMode &rArr; Charge_AvegMode &rArr; Charge_ReduceModule &rArr; Charge_SHReduceModule &rArr; Send_SetGroupVI &rArr; SHSet_Group_Vol &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModuleStop
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Judge_ModuleSwitch
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_MiddleSW
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_GunDataInit
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_FJDispose
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PowerModuleStart
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPCUControl
</UL>

<P><STRONG><a name="[3e5]"></a>Close_MiddleSW</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, controlapp.o(i.Close_MiddleSW))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Close_MiddleSW &rArr; BSP_IOClose
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOClose
</UL>
<BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenClose_MiddleSW
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPCUControl
</UL>

<P><STRONG><a name="[3eb]"></a>Control_DataInit</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, controlapp.o(i.Control_DataInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Control_DataInit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPCUControl
</UL>

<P><STRONG><a name="[3e2]"></a>Control_FJDispose</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, controlapp.o(i.Control_FJDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = Control_FJDispose &rArr; BSP_IOClose
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOClose
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_DemandChargeDispose
</UL>

<P><STRONG><a name="[3e3]"></a>Control_GunDataInit</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, controlapp.o(i.Control_GunDataInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = Control_GunDataInit &rArr; APP_PeriodControlDataUpdata &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PeriodControlDataUpdata
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_DemandChargeDispose
</UL>

<P><STRONG><a name="[3c4]"></a>Dispose_MiddleSW</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, controlapp.o(i.Dispose_MiddleSW))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = Dispose_MiddleSW &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenClose_MiddleSW
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_DemandChargeDispose
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_UseAllMdule
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_QZMode
</UL>

<P><STRONG><a name="[456]"></a>Judge_Gun_FreeModule</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, controlapp.o(i.Judge_Gun_FreeModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Judge_Gun_FreeModule &rArr; Seek_CanAddModule
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ModuleInfoNum
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seek_CanAddModule
</UL>
<BR>[Called By]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskModulePeriod
</UL>

<P><STRONG><a name="[3e4]"></a>Judge_ModuleSwitch</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, controlapp.o(i.Judge_ModuleSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Judge_ModuleSwitch &rArr; Get_ModuleInfoNum
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ModuleInfoNum
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_DemandChargeDispose
</UL>

<P><STRONG><a name="[422]"></a>OpenClose_MiddleSW</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, controlapp.o(i.OpenClose_MiddleSW))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OpenClose_MiddleSW &rArr; Open_MiddleSW &rArr; BSP_IOOpen
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_MiddleSW
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_MiddleSW
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dispose_MiddleSW
</UL>

<P><STRONG><a name="[4c1]"></a>Open_MiddleSW</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, controlapp.o(i.Open_MiddleSW))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Open_MiddleSW &rArr; BSP_IOOpen
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IOOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenClose_MiddleSW
</UL>

<P><STRONG><a name="[3b6]"></a>Seek_CanAddModule</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, controlapp.o(i.Seek_CanAddModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Seek_CanAddModule
</UL>
<BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Judge_Gun_FreeModule
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_AvegMode
</UL>

<P><STRONG><a name="[3b9]"></a>Seek_CanReduceModule</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, controlapp.o(i.Seek_CanReduceModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Seek_CanReduceModule
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_AvegMode
</UL>

<P><STRONG><a name="[52d]"></a>UserModule_FailOffline_Dispose</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, controlapp.o(i.UserModule_FailOffline_Dispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = UserModule_FailOffline_Dispose &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Called By]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskModulePeriod
</UL>

<P><STRONG><a name="[2bb]"></a>APP_PowerModulePeriodSend</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, modulemanage.o(i.APP_PowerModulePeriodSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = APP_PowerModulePeriodSend &rArr; APP_YKRPowerModulePeriodSend &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_YKRPowerModulePeriodSend
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_YFYPowerModulePeriodSend
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SHPowerModulePeriodSend
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GWPowerModulePeriodSend
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskModuleTx
</UL>

<P><STRONG><a name="[4ed]"></a>ReciveModuleFrameDispose</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, modulemanage.o(i.ReciveModuleFrameDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReciveModuleFrameDispose &rArr; ReciveYKRModuleFrameDispose
</UL>
<BR>[Calls]<UL><LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveYKRModuleFrameDispose
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveYFYModuleFrameDispose
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveSHModuleFrameDispose
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveGWModuleFrameDispose
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskModuleRx
</UL>

<P><STRONG><a name="[2e9]"></a>SHOpenCloseGroupModule</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, shmoduletxrx.o(i.SHOpenCloseGroupModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = SHOpenCloseGroupModule &rArr; SHSendOpenCloseGroupModule &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetModuleUserRange
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSendOpenCloseGroupModule
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHFristOpenGun
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHAddModule
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SHPowerModuleStop
</UL>

<P><STRONG><a name="[2e7]"></a>SHOpenCloseOneModule</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, shmoduletxrx.o(i.SHOpenCloseOneModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = SHOpenCloseOneModule &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SH_CmdDispose
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SH_GetPowerModuleVol
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHReduceModule
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SHCloseModule
</UL>

<P><STRONG><a name="[4fa]"></a>SHSendOpenCloseGroupModule</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, shmoduletxrx.o(i.SHSendOpenCloseGroupModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = SHSendOpenCloseGroupModule &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SH_CmdDispose
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHOpenCloseGroupModule
</UL>

<P><STRONG><a name="[3d1]"></a>SHSetVolGears_500V</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, shmoduletxrx.o(i.SHSetVolGears_500V))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = SHSetVolGears_500V &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SH_CmdDispose
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHSetModuleVI
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHReduceModule
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHFristOpenGun
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHAddModule
</UL>

<P><STRONG><a name="[3d0]"></a>SHSetVolGears_750V</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, shmoduletxrx.o(i.SHSetVolGears_750V))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = SHSetVolGears_750V &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SH_CmdDispose
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHSetModuleVI
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHReduceModule
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHFristOpenGun
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHAddModule
</UL>

<P><STRONG><a name="[4fc]"></a>SHSet_Group_Cur</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, shmoduletxrx.o(i.SHSet_Group_Cur))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = SHSet_Group_Cur &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SH_CmdDispose
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_SetGroupVI
</UL>

<P><STRONG><a name="[4fe]"></a>SHSet_Group_Vol</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, shmoduletxrx.o(i.SHSet_Group_Vol))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = SHSet_Group_Vol &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SH_CmdDispose
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_SetGroupVI
</UL>

<P><STRONG><a name="[4f1]"></a>SHSwitchforConcenterTerimialorder</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, shmoduletxrx.o(i.SHSwitchforConcenterTerimialorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SHSwitchforConcenterTerimialorder
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveSHModuleFrameDispose
</UL>

<P><STRONG><a name="[4fb]"></a>SH_CmdDispose</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, shmoduletxrx.o(i.SH_CmdDispose))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_GetModuleInfo
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSet_Group_Vol
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSet_Group_Cur
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSetVolGears_750V
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSetVolGears_500V
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSendOpenCloseGroupModule
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHOpenCloseOneModule
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSet_Group_Fream
</UL>

<P><STRONG><a name="[215]"></a>SH_GetPowerModuleACStates</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, shmoduletxrx.o(i.SH_GetPowerModuleACStates))
<BR>[Address Reference Count : 1]<UL><LI> shmoduletxrx.o(.constdata)
</UL>
<P><STRONG><a name="[214]"></a>SH_GetPowerModuleCur</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, shmoduletxrx.o(i.SH_GetPowerModuleCur))
<BR>[Address Reference Count : 1]<UL><LI> shmoduletxrx.o(.constdata)
</UL>
<P><STRONG><a name="[213]"></a>SH_GetPowerModuleVol</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, shmoduletxrx.o(i.SH_GetPowerModuleVol))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = SH_GetPowerModuleVol &rArr; SHOpenCloseOneModule &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHOpenCloseOneModule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> shmoduletxrx.o(.constdata)
</UL>
<P><STRONG><a name="[e8]"></a>Send_GetModuleInfo</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, shmoduletxrx.o(i.Send_GetModuleInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = Send_GetModuleInfo &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SH_CmdDispose
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> shmoduletxrx.o(.data)
</UL>
<P><STRONG><a name="[3d2]"></a>Send_SetGroupVI</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, shmoduletxrx.o(i.Send_SetGroupVI))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = Send_SetGroupVI &rArr; SHSet_Group_Vol &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetModuleUserRange
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSet_Group_Vol
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHSet_Group_Cur
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHSetModuleVI
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHReduceModule
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHFristOpenGun
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_SHAddModule
</UL>

<P><STRONG><a name="[263]"></a>APP_CloseGun</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gwmoduletxrx.o(i.APP_CloseGun))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = APP_CloseGun &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GWPowerModuleStop
</UL>

<P><STRONG><a name="[21b]"></a>APP_HearAck</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gwmoduletxrx.o(i.APP_HearAck))
<BR>[Address Reference Count : 1]<UL><LI> gwmoduletxrx.o(.constdata)
</UL>
<P><STRONG><a name="[219]"></a>APP_QueryInfoAck</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gwmoduletxrx.o(i.APP_QueryInfoAck))
<BR>[Address Reference Count : 1]<UL><LI> gwmoduletxrx.o(.constdata)
</UL>
<P><STRONG><a name="[21a]"></a>APP_RecvYXAck</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, gwmoduletxrx.o(i.APP_RecvYXAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_RecvYXAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gwmoduletxrx.o(.constdata)
</UL>
<P><STRONG><a name="[eb]"></a>APP_SendHear</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, gwmoduletxrx.o(i.APP_SendHear))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = APP_SendHear &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gwmoduletxrx.o(.data)
</UL>
<P><STRONG><a name="[ea]"></a>APP_SetControlDyn</STRONG> (Thumb, 262 bytes, Stack size 40 bytes, gwmoduletxrx.o(i.APP_SetControlDyn))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = APP_SetControlDyn &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gwmoduletxrx.o(.data)
</UL>
<P><STRONG><a name="[217]"></a>APP_SetControlDynAck</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gwmoduletxrx.o(i.APP_SetControlDynAck))
<BR>[Address Reference Count : 1]<UL><LI> gwmoduletxrx.o(.constdata)
</UL>
<P><STRONG><a name="[216]"></a>APP_SetDynGroupAck</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gwmoduletxrx.o(i.APP_SetDynGroupAck))
<BR>[Address Reference Count : 1]<UL><LI> gwmoduletxrx.o(.constdata)
</UL>
<P><STRONG><a name="[218]"></a>APP_SetInfoAck</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gwmoduletxrx.o(i.APP_SetInfoAck))
<BR>[Address Reference Count : 1]<UL><LI> gwmoduletxrx.o(.constdata)
</UL>
<P><STRONG><a name="[4ec]"></a>GWSwitchforConcenterTerimialorder</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gwmoduletxrx.o(i.GWSwitchforConcenterTerimialorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GWSwitchforConcenterTerimialorder
</UL>
<BR>[Called By]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveGWModuleFrameDispose
</UL>

<P><STRONG><a name="[27f]"></a>Set_Close_Group</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, gwmoduletxrx.o(i.Set_Close_Group))
<BR><BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GWPowerModuleStop
</UL>

<P><STRONG><a name="[3c2]"></a>Set_Close_OneModule</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gwmoduletxrx.o(i.Set_Close_OneModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = Set_Close_OneModule &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_GWReduceModule
</UL>

<P><STRONG><a name="[3bf]"></a>Set_GWGroup_Fream</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, gwmoduletxrx.o(i.Set_GWGroup_Fream))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = Set_GWGroup_Fream &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_GWFristOpenGun
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_GWAddModule
</UL>

<P><STRONG><a name="[3c0]"></a>Set_GWGroup_VI</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, gwmoduletxrx.o(i.Set_GWGroup_VI))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Set_GWGroup_VI
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_GWSetModuleVI
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_GWReduceModule
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_GWFristOpenGun
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_GWAddModule
</UL>

<P><STRONG><a name="[300]"></a>OpenCloseOneGrpModule</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, yfymoduletxrx.o(i.OpenCloseOneGrpModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = OpenCloseOneGrpModule &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YFYFristOpenGun
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_YFYPowerModuleStop
</UL>

<P><STRONG><a name="[299]"></a>OpenCloseOneModule</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, yfymoduletxrx.o(i.OpenCloseOneModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = OpenCloseOneModule &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPowerModuleVIAck
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YFYReduceModule
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YFYAddModule
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_YFYCloseModule
</UL>

<P><STRONG><a name="[29a]"></a>Set_Group_Fream</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, yfymoduletxrx.o(i.Set_Group_Fream))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = Set_Group_Fream &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetPowerModuleVIAck
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YFYReduceModule
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YFYFristOpenGun
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YFYAddModule
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_YFYPowerModuleStop
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_YFYCloseModule
</UL>

<P><STRONG><a name="[2f3]"></a>Set_Group_VIout</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, yfymoduletxrx.o(i.Set_Group_VIout))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = Set_Group_VIout &rArr; SendFrameToPowerModule &rArr; OSMutexPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToPowerModule
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetGroupVI
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YFYReduceModule
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Charge_YFYAddModule
</UL>

<P><STRONG><a name="[4f2]"></a>SwitchforConcenterTerimialorder</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, yfymoduletxrx.o(i.SwitchforConcenterTerimialorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SwitchforConcenterTerimialorder
</UL>
<BR>[Called By]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReciveYFYModuleFrameDispose
</UL>

<P><STRONG><a name="[583]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[581]"></a>_printf_core</STRONG> (Thumb, 1704 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0snprintf
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[586]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[585]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[16f]"></a>_snputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printfa.o(i._snputc))
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0snprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
